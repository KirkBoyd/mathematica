(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    198545,       4299]
NotebookOptionsPosition[    182943,       4068]
NotebookOutlinePosition[    183384,       4087]
CellTagsIndexPosition[    183341,       4084]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mathematica III - Linear Algebra", "Title",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.399308987464324*^9, 3.399308997477577*^9}, {
   3.3996509147507887`*^9, 3.3996509168582067`*^9}, 3.4274817158062444`*^9, {
   3.427505828304313*^9, 3.427505832757467*^9}, {3.4275745555520296`*^9, 
   3.42757455564578*^9}, {3.427574731865658*^9, 3.4275747372563176`*^9}, {
   3.4294834587838097`*^9, 3.4294834590806885`*^9}, 3.430327560654002*^9, {
   3.430601265670842*^9, 3.430601266858365*^9}, 3.4311905217116194`*^9, 
   3.4318058743262105`*^9, 3.4322908055044465`*^9, {3.433259958794278*^9, 
   3.4332599645288*^9}, {3.5445606447096834`*^9, 3.544560644806693*^9}, {
   3.545397882296425*^9, 3.545397882393435*^9}, {3.598886274026717*^9, 
   3.5988862742587404`*^9}, {3.76097067665633*^9, 3.7609706839748707`*^9}, 
   3.7609725764152956`*^9},ExpressionUUID->"1fa6df21-d632-4fc8-82ec-\
2aa0e347861f"],

Cell["\<\
Based on Labs developed by John S. Colton, BYU Physics & Astronomy, based in \
part on past labs by Branton Cambell and Steve Turley\
\>", "Subtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.433259527908248*^9, 3.433259551315097*^9}, 
   3.442877764291175*^9, {3.47179042901258*^9, 3.471790429684459*^9}, 
   3.5014684252867274`*^9, {3.534801931923832*^9, 3.5348019320174274`*^9}, 
   3.5445606307822914`*^9, 3.5448862193841047`*^9, 3.5620131123278055`*^9, {
   3.587917232731468*^9, 3.5879172641179667`*^9}, 3.5976810391801815`*^9, 
   3.619276589570776*^9, 3.630093549818577*^9, {3.6500315244150224`*^9, 
   3.6500315290014305`*^9}, {3.760970688779763*^9, 3.760970695472292*^9}, 
   3.7609725764152956`*^9},ExpressionUUID->"406c5b3f-39ab-4a46-ba53-\
da1f60d1b9d9"],

Cell[TextData[{
 "In most fields of science and engineering, the easiest multi-variable \
problems are the \"linear\" ones, where the unknown quantities appear in \
linear combinations with constant coefficients.  Linear problems are usually \
solved by straightforward methods and have exact solutions.  Non-linear \
problems, on the other hand, can become very difficult very quickly.  In this \
lab, we will explore matrix and vector properties and operations, practice \
formulating problems in terms of matrix/vector equations, and learn how to \
use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s linear-algebra capabilities to solve simple and moderately-challenging \
math and physics problems."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.4303328171611757`*^9, 3.4303328617557817`*^9}, {
   3.430337158416401*^9, 3.430337162963363*^9}, {3.4303440447361155`*^9, 
   3.4303440608145494`*^9}, {3.430352154594947*^9, 3.430352177017253*^9}, 
   3.430497670206213*^9, {3.4306011277463193`*^9, 3.4306011281682024`*^9}, 
   3.430601271436578*^9, {3.4306013425004425`*^9, 3.430601366329025*^9}, {
   3.4307097552544365`*^9, 3.430709783676858*^9}, {3.4307694207016554`*^9, 
   3.43076964619036*^9}, {3.430769681566039*^9, 3.4307700168381014`*^9}, {
   3.4311197804732823`*^9, 3.431119796661093*^9}, {3.431190525414815*^9, 
   3.4311905257429466`*^9}, 3.4311905979787083`*^9, {3.4311907394970503`*^9, 
   3.431190742981492*^9}, {3.431492886761525*^9, 3.431492887223022*^9}, {
   3.431494062343462*^9, 3.431494337141776*^9}, {3.4317255415822144`*^9, 
   3.4317255520667906`*^9}, {3.4318058441225057`*^9, 3.431805844450637*^9}, {
   3.4318073279009933`*^9, 3.4318073289478884`*^9}, {3.4318785406526766`*^9, 
   3.431878608466479*^9}, {3.4322908285673895`*^9, 3.4322909571167326`*^9}, {
   3.4322922730482473`*^9, 3.432293150330716*^9}, {3.4329099693228593`*^9, 
   3.432909970526007*^9}, {3.5445606406162744`*^9, 3.544560669065119*^9}, {
   3.5448867904752083`*^9, 3.54488680399356*^9}, {3.6252583895120773`*^9, 
   3.6252583903237944`*^9}, 
   3.7609725764152956`*^9},ExpressionUUID->"cdfaad9a-b536-4b60-ba2d-\
92bec4b43bc7"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Clear", "[", "\"\<`*\>\"", " ", "]"}],
  FontWeight->"Bold",
  FontColor->RGBColor[0., 0.5019607843137255, 0.]]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.760972576425296*^9},ExpressionUUID->"bb907516-e1eb-47b7-bb23-\
93c2861f5580"],

Cell["Lists & vectors", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.427508689978878*^9, 3.4275086919476404`*^9}, {
   3.42750882546412*^9, 3.42750882779226*^9}, {3.427514208139194*^9, 
   3.427514216373622*^9}, {3.4275745791615553`*^9, 3.427574579661559*^9}, {
   3.427574635380666*^9, 3.427574639521317*^9}, {3.42947342551476*^9, 
   3.4294734269522786`*^9}, {3.431187155146982*^9, 3.431187157490777*^9}, {
   3.431187499559845*^9, 3.431187499762974*^9}, 3.4332817598992014`*^9, {
   3.544212604878495*^9, 3.5442126117261796`*^9}, {3.5443008258797426`*^9, 
   3.5443008259667425`*^9}, 3.5459082097828336`*^9, 3.5619063202718325`*^9, 
   3.760972576425296*^9, {3.761490645263597*^9, 
   3.7614906477076473`*^9}},ExpressionUUID->"23518fb2-602c-452d-ad5e-\
5bc2372a2304"],

Cell[TextData[{
 "Lists are ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " objects that are items grouped together with curly brackets. A list can be \
any collection of items: numbers, unassigned variables, plots, even other \
lists.  You' ve already used them in a few ways--to specify limits in the \
Plot command, to apply a list of rules inside functions, and to evaluate \
functions with variables set to particular values.  In addition to their \
utility in evaluating functions, the three primary purposes of lists are to \
(1) serve as \[OpenCurlyDoubleQuote]arrays\[CloseCurlyDoubleQuote] for \
programming purposes, (2) allow you to do linear algebra with vectors and \
matrices, and (3) allow you to manipulate real data.  We\[CloseCurlyQuote]ll \
focus on #2 here."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.5442641671306744`*^9, 3.544264440605019*^9}, {
   3.54426515378633*^9, 3.5442651696599174`*^9}, {3.5442652237273235`*^9, 
   3.5442652269986506`*^9}, {3.5442652739683475`*^9, 3.54426527969592*^9}, {
   3.5442653184988*^9, 3.5442653782207713`*^9}, {3.544265424124361*^9, 
   3.5442654560915575`*^9}, {3.5442887800898376`*^9, 3.544288904708298*^9}, {
   3.5443639838120637`*^9, 3.5443641141520967`*^9}, {3.76097078792167*^9, 
   3.7609708155498013`*^9}, {3.760970900963339*^9, 3.7609709774398727`*^9}, 
   3.76097101176162*^9, 3.760972576425296*^9, {3.7614870018730946`*^9, 
   3.761487006662387*^9}, {3.7631022380683594`*^9, 
   3.763102249280238*^9}},ExpressionUUID->"f13d1b12-c257-4bed-b99a-\
a29602c6ed95"],

Cell["How to create a list.", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.429377696110669*^9, 3.429377699141958*^9}, {
   3.4294735405318575`*^9, 3.429473543203767*^9}, {3.4311840883849764`*^9, 
   3.431184089728752*^9}, {3.5442654609860473`*^9, 3.544265466726621*^9}, 
   3.760972576425296*^9},ExpressionUUID->"e6d3de99-64d0-4fd6-9a47-\
1499144c2ea6"],

Cell[TextData[{
 "There are numerous ways to create lists in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". Look over these examples and press F1 on the function names if it\
\[CloseCurlyQuote]s not clear what\[CloseCurlyQuote]s going on."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.429377701329486*^9, {3.429379534696703*^9, 3.429379548431254*^9}, {
   3.429383287775992*^9, 3.4293832886822534`*^9}, 3.429466240792717*^9, {
   3.4294664574632053`*^9, 3.4294664602600627`*^9}, 3.4294673662653275`*^9, {
   3.4396684361754913`*^9, 3.439668446519308*^9}, {3.4396684773632555`*^9, 
   3.4396684773632555`*^9}, {3.4396685097853374`*^9, 3.439668543082426*^9}, {
   3.544265473740322*^9, 3.5442654967526236`*^9}, {3.544364173210002*^9, 
   3.5443641950431848`*^9}, 
   3.760972576425296*^9},ExpressionUUID->"40fc755c-a817-42e4-804b-\
4a138d39a209"],

Cell[BoxData[
 RowBox[{"list", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
  "  "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.5442655417601233`*^9, 3.5442655505920067`*^9}, {
   3.5442660168186245`*^9, 3.5442660202689695`*^9}, 
   3.760972576425296*^9},ExpressionUUID->"ac19727a-4d4e-45e8-bcf4-\
a8e4830033cf"],

Cell[BoxData[
 RowBox[{"list", "^", "2", "  "}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.5442656105670033`*^9, 3.5442656313180785`*^9}, {
   3.544266029091852*^9, 3.5442660296149044`*^9}, 
   3.760972576425296*^9},ExpressionUUID->"9c8a6e1f-eba6-4728-ae5f-\
332715b5cde1"],

Cell[BoxData[
 RowBox[{"list2", "=", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.5442656547394204`*^9, 3.5442656605510015`*^9}, 
   3.760972576425296*^9},ExpressionUUID->"c963e0b1-9485-4aff-9f47-\
5c22ce7939d0"],

Cell[BoxData[
 RowBox[{"list2", "^", "2"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.5442660318741302`*^9, 3.5442660335062933`*^9}, 
   3.760972576425296*^9},ExpressionUUID->"bfc1ebff-40ba-409b-9f1c-\
f670c3e583bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"#", "^", "2"}], " ", "&"}], ")"}], " ", "@", "list", "   ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "nameless", " ", "function", " ", "to", " ", "operate", " ", "on", " ", 
     "list", " ", "elements"}], ",", " ", 
    RowBox[{"prefix", " ", "form"}]}], " ", "*)"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.54426555762571*^9, 3.5442656033152785`*^9}, {
   3.5442656746834145`*^9, 3.544265678528799*^9}, {3.544266064755418*^9, 
   3.544266065703513*^9}, {3.561986495027952*^9, 3.561986495820031*^9}, 
   3.760972576425296*^9},ExpressionUUID->"cea963b3-4d8b-485e-b398-\
3bb007d2cd14"],

Cell[BoxData[
 RowBox[{"Range", "[", "10", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.5442657513870845`*^9, 3.5442657545353994`*^9}, {
   3.544266002829226*^9, 3.544266003563299*^9}, 
   3.760972576425296*^9},ExpressionUUID->"d77920a6-e8d3-40ea-9c0b-\
e9454647df5d"],

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"10", ",", "20"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.561903893642194*^9, 3.5619038938342133`*^9}, 
   3.760972576425296*^9},ExpressionUUID->"f9f8c764-c29b-4a21-a88e-\
834249218970"],

Cell[BoxData[
 RowBox[{"range", " ", "=", " ", 
  RowBox[{"Range", "[", 
   RowBox[{"0", ",", "10", ",", ".2"}], "]"}], "    ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"general", " ", "format", " ", "for", " ", 
     RowBox[{"Range", ":", "  ", "start"}]}], ",", " ", "end", ",", " ", 
    RowBox[{"step", " ", "size"}]}], " ", "*)"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.544266199322873*^9, 3.5442662223871794`*^9}, {
   3.5442668504916773`*^9, 3.544266851560357*^9}, {3.544286931198967*^9, 
   3.5442869417680235`*^9}, {3.561903901211951*^9, 3.5619039018190117`*^9}, {
   3.5619865072121706`*^9, 3.561986508036253*^9}, 
   3.760972576425296*^9},ExpressionUUID->"ea749994-566e-42df-8414-\
0d350bbc600d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"#", "^", "2"}], " ", "&"}], ")"}], " ", "@", " ", 
  "range"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.5442662604499855`*^9, 3.544266264405381*^9}, {
   3.544266855690118*^9, 3.5442668560680037`*^9}, 
   3.760972576425296*^9},ExpressionUUID->"c075705c-57c4-425c-9d4e-\
42c0db97f085"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"n", "^", "2"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", "3", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.5442656409560423`*^9, 3.5442656470906553`*^9}, {
   3.544265742690215*^9, 3.5442657473756833`*^9}, {3.5619039278526144`*^9, 
   3.5619039328441133`*^9}, 
   3.760972576425296*^9},ExpressionUUID->"d7ac0a23-e3fb-4d35-95f6-\
16d147c537b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"n", "^", "2"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "5", ",", "0.1"}], "}"}]}], "]"}], "    ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"general", " ", "format", " ", "for", " ", 
     RowBox[{"Table", ":", " ", "start"}]}], ",", " ", "end", ",", " ", 
    RowBox[{"step", " ", "size"}]}], "  ", "*)"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.5442656409560423`*^9, 3.5442656470906553`*^9}, {
   3.544265742690215*^9, 3.5442657473756833`*^9}, {3.5442659873726807`*^9, 
   3.5442659893038735`*^9}, {3.5442869558724337`*^9, 3.544286964312278*^9}, {
   3.561903921155945*^9, 3.5619039227161007`*^9}, {3.561986509844434*^9, 
   3.561986510828532*^9}, 
   3.760972576425296*^9},ExpressionUUID->"c255761b-85f9-4adf-a9fa-\
e3f0d2757561"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", "=", " ", 
   RowBox[{"x", "^", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Array", "[", 
  RowBox[{"f", ",", " ", "10"}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.5442657980907545`*^9, 3.5442659296349072`*^9}, 
   3.760972576425296*^9},ExpressionUUID->"c3a8ec4e-f915-4424-b3d4-\
564b1a0cb118"],

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "3"}], "&"}], ",", "10"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.544265773739319*^9, 3.5442657740103464`*^9}, {
   3.544265809189864*^9, 3.544265809363881*^9}, 
   3.760972576425296*^9},ExpressionUUID->"6526b3e0-cf0d-4e82-ad80-\
f684236633e0"],

Cell[TextData[{
 StyleBox["Things to observe: ",
  FontWeight->"Bold"],
 "There are lots of ways to construct lists! The five ways used here are:\n1. \
Manually defining a list with curly brackets.\n2. Operating on an existing \
list\n3. The Range command, to create an equally-spaced set of \
\[OpenCurlyDoubleQuote]points\[CloseCurlyDoubleQuote] (list elements)\n4. The \
Table command, as a very flexible way of creating a set of function values\n\
5. The Array command, as a slightly less flexible way of doing the same (with \
some added capability to create multi-dimensional lists)"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.429377701329486*^9, {3.429379534696703*^9, 3.429379548431254*^9}, {
   3.429383287775992*^9, 3.4293832886822534`*^9}, 3.429466240792717*^9, {
   3.4294664574632053`*^9, 3.4294664602600627`*^9}, 3.4294673662653275`*^9, {
   3.4396684361754913`*^9, 3.439668446519308*^9}, {3.4396684773632555`*^9, 
   3.4396684773632555`*^9}, {3.4396685097853374`*^9, 3.439668543082426*^9}, {
   3.544265473740322*^9, 3.544265488989847*^9}, {3.544265735073453*^9, 
   3.544265735523498*^9}, {3.5442664507880173`*^9, 3.544266539236861*^9}, {
   3.5442665744493823`*^9, 3.544266578334771*^9}, {3.5442666445483913`*^9, 
   3.5442666761875553`*^9}, {3.5442667342283583`*^9, 3.544266830385711*^9}, {
   3.5442668694799795`*^9, 3.5442669106306305`*^9}, {3.544266973888647*^9, 
   3.5442670001557646`*^9}, {3.5442671691934557`*^9, 3.54426717035334*^9}, 
   3.5442672993844357`*^9, {3.5443642116118417`*^9, 3.544364218627543*^9}, {
   3.5443642497256527`*^9, 3.544364261941874*^9}, {3.561903990595888*^9, 
   3.561904066415469*^9}, {3.5619041183846655`*^9, 3.5619041189287205`*^9}, {
   3.5619042110599327`*^9, 3.561904230356862*^9}, {3.5619042953113565`*^9, 
   3.5619043065284786`*^9}, {3.5619045470485277`*^9, 3.561904618387661*^9}, {
   3.56198656071552*^9, 3.5619865730517535`*^9}, {3.5619874039798384`*^9, 
   3.5619874144738874`*^9}, {3.76097117763796*^9, 3.7609711865691385`*^9}, 
   3.760972576425296*^9, {3.761487054212101*^9, 
   3.7614870570045547`*^9}},ExpressionUUID->"89fa540a-07b7-4965-a6a4-\
20c18f296e60"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[OpenCurlyDoubleQuote]Regular vectors\[CloseCurlyDoubleQuote] are \
lists", "Subsection",
 CellChangeTimes->{
  3.7609726869686127`*^9, {3.7639157807849827`*^9, 
   3.7639157833560343`*^9}},ExpressionUUID->"81b30072-9cb1-4056-8750-\
d0d55d489876"],

Cell["Here\[CloseCurlyQuote]s an example of a vector", "Text",
 CellChangeTimes->{{3.760972982947667*^9, 
  3.7609729876387615`*^9}},ExpressionUUID->"889c0fcc-1354-404b-ac98-\
2f83d7bd92ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vec", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.760968943348195*^9, 3.760968952864317*^9}, 
   3.760972576435296*^9, 
   3.760973026313535*^9},ExpressionUUID->"8fe98694-cb3f-48e5-8c6b-\
92f18572fea6"],

Cell["Defining matrices", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.4306009820872726`*^9, 3.4306009986500907`*^9}, {
   3.430607504087493*^9, 3.4306075152908325`*^9}, {3.431182354054803*^9, 
   3.4311823567267294`*^9}, {3.4311825544336505`*^9, 3.431182554574278*^9}, {
   3.431190573165732*^9, 3.431190601072518*^9}, {3.431201043366756*^9, 
   3.431201044929286*^9}, 3.4314665256696043`*^9, 3.4314665763961973`*^9, 
   3.431466615222662*^9, 3.431488602552561*^9, {3.4318058304191175`*^9, 
   3.4318058361536026`*^9}, {3.431806408320838*^9, 3.431806410414628*^9}, {
   3.43180665273178*^9, 3.4318066534036684`*^9}, {3.4318077228617015`*^9, 
   3.431807724346105*^9}, {3.431808201011507*^9, 3.431808201183385*^9}, {
   3.431811172787314*^9, 3.4318111733341994`*^9}, {3.4318135733021526`*^9, 
   3.4318135734896564`*^9}, {3.431897525064046*^9, 3.431897525142172*^9}, 
   3.4319917298815885`*^9, 3.432072668283319*^9, {3.43229167834933*^9, 
   3.432291683161922*^9}, {3.4322920767788544`*^9, 3.4322920768413553`*^9}, {
   3.4324110366565547`*^9, 3.432411036828433*^9}, 3.432488565189156*^9, {
   3.432516046826768*^9, 3.432516069749083*^9}, 3.432516203673529*^9, 
   3.4325876102902927`*^9, {3.432587649744175*^9, 3.432587698635739*^9}, 
   3.432659693804842*^9, {3.4326644461611924`*^9, 3.4326644463174458`*^9}, {
   3.544887300614217*^9, 3.5448873007482305`*^9}, {3.5448874000951643`*^9, 
   3.544887400663221*^9}, 3.5455932653817873`*^9, {3.5620155064058056`*^9, 
   3.5620155218748055`*^9}, {3.5620155532728057`*^9, 3.5620155547128057`*^9}, 
   3.608150765201316*^9, 3.6081554459413157`*^9, {3.7609686215412683`*^9, 
   3.7609686262057285`*^9}, 
   3.760972576435296*^9},ExpressionUUID->"78b71755-f510-4fde-b21b-\
1b00f8e33972"],

Cell["\<\
Typing in matrix elements and viewing matrices in standard form\
\>", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.4322919830895557`*^9, 3.4322919926991153`*^9}, {
   3.43240986271214*^9, 3.432409884118801*^9}, 3.432481573424904*^9, {
   3.432481650024447*^9, 3.432481651584505*^9}, {3.432488971793871*^9, 
   3.4324889887355337`*^9}, 3.4325637644577713`*^9, {3.4325876908230886`*^9, 
   3.432587690979342*^9}, {3.43265972397154*^9, 3.43265972409261*^9}, 
   3.4326643827380996`*^9, {3.432664440301705*^9, 3.4326644405048337`*^9}, {
   3.4326662098981805`*^9, 3.4326662332892547`*^9}, {3.432928083671734*^9, 
   3.432928086124953*^9}, {3.544886820682228*^9, 3.544886824506611*^9}, {
   3.608150745147316*^9, 3.6081507491373158`*^9}, {3.76096863019938*^9, 
   3.7609686569381227`*^9}, 
   3.760972576435296*^9},ExpressionUUID->"c2342b09-1d6d-45d0-b733-\
530f407bc169"],

Cell[TextData[{
 "A matrix is a list of lists.  Each of the sub-lists is a list of ",
 StyleBox["row elements",
  FontWeight->"Bold"],
 ".  One way to enter them is to type them in directly."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7609656193063707`*^9, 3.7609656766059055`*^9}, {
   3.760967379880825*^9, 3.760967391690404*^9}, 3.760969017967952*^9, 
   3.760972576435296*^9, {3.7609730840676904`*^9, 
   3.760973137363757*^9}},ExpressionUUID->"ca6f11a1-fd0e-49b1-af9a-\
ad5e15db1f54"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"matx1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9", ",", "10"}], "}"}]}], "}"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"matx2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "11", "}"}], ",", 
    RowBox[{"{", "12", "}"}], ",", 
    RowBox[{"{", "13", "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"matx3", "=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"14", ",", " ", "15", ",", " ", "16"}], "}"}], "}"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7609656923933077`*^9, 3.760965694514935*^9}, {
   3.760965744374174*^9, 3.760965772033329*^9}, {3.7609659549028735`*^9, 
   3.7609659695046606`*^9}, 3.760972576435296*^9, {3.7614900147659492`*^9, 
   3.7614900161669774`*^9}},ExpressionUUID->"0d37bc91-1ae6-4be1-9ea7-\
00d2c4605e11"],

Cell["You can view them in standard matrix form using MatrixForm:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7609657900827603`*^9, 3.7609658036715345`*^9}, {
   3.7609659345290127`*^9, 3.760965934903417*^9}, 3.760972576435296*^9, 
   3.7609731469049473`*^9},ExpressionUUID->"9f8bdf37-6061-4dcb-96a3-\
db3368e6b934"],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", "matx1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matx2", "//", "MatrixForm"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"using", " ", "postfix", " ", "notation"}], " ", "-", " ", 
    RowBox[{"often", " ", 
     RowBox[{"easier", "!"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"matx3", "//", "MatrixForm", " "}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7609658096776114`*^9, 3.760965900316774*^9}, {
   3.760965980550603*^9, 3.7609659842010493`*^9}, 3.760972576435296*^9, {
   3.7614900097848496`*^9, 
   3.7614900127259083`*^9}},ExpressionUUID->"9ba46e72-4d70-4a3e-9f16-\
8891a8afb5e2"]
}, Open  ]],

Cell["The MatrixForm command works on regular vectors too:", "Text",
 CellChangeTimes->{{3.760973543001912*^9, 3.760973552918813*^9}, {
  3.763978853886594*^9, 
  3.763978861327651*^9}},ExpressionUUID->"f087750f-d986-4a74-b841-\
8bb7c4a241bf"],

Cell[BoxData[{"vec", "\[IndentingNewLine]", 
 RowBox[{"vec", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7609735562887793`*^9, 
  3.7609735776005664`*^9}},ExpressionUUID->"cd4356ab-6560-4279-b52b-\
b70e3c6da0bd"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["IMPORTANT",
  FontWeight->"Bold"],
 ": Be careful that, when you define matrices (or vectors), you do not \
include MatrixForm in the definition - just use it after the definition to \
view them.  For example:"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.43256301888938*^9, 3.432563108923813*^9}, {
   3.432563262210495*^9, 3.432563331810775*^9}, {3.4325634673929167`*^9, 
   3.432563470111743*^9}, {3.432644780277296*^9, 3.432644870704837*^9}, {
   3.432644920720172*^9, 3.4326449766143303`*^9}, {3.432645510510445*^9, 
   3.432645553607215*^9}, 3.439673017517312*^9, {3.439673226174897*^9, 
   3.4396732324718127`*^9}, {3.477851659188141*^9, 3.4778516606881695`*^9}, {
   3.477851690813748*^9, 3.4778517568150153`*^9}, {3.477852727036768*^9, 
   3.4778527301305776`*^9}, {3.4840848566786013`*^9, 3.484084863975523*^9}, {
   3.501281953525695*^9, 3.501281968056573*^9}, {3.5448868256837287`*^9, 
   3.5448868718853483`*^9}, {3.544886977703929*^9, 3.544886995934752*^9}, {
   3.5449774892586255`*^9, 3.5449775851722155`*^9}, {3.545398098137007*^9, 
   3.545398157499943*^9}, {3.5620133195688057`*^9, 3.562013331967806*^9}, 
   3.6001880582363358`*^9, {3.6081504913043156`*^9, 3.6081505215733156`*^9}, {
   3.6081505721983156`*^9, 3.608150641859316*^9}, {3.608150757234316*^9, 
   3.608150810767316*^9}, {3.6082923184289885`*^9, 3.6082923196831136`*^9}, {
   3.7609661448715096`*^9, 3.7609661857284336`*^9}, 3.760972576435296*^9, {
   3.7609732386727834`*^9, 3.7609732434138784`*^9}, 3.760973593841404*^9, {
   3.763922568405667*^9, 
   3.763922573626771*^9}},ExpressionUUID->"8437a187-1b60-45f7-a55d-\
21eb3cf45df5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"incorrect", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "d"}], "}"}]}], "}"}], "   ", "//", "MatrixForm"}]}],
   "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"this", " ", "will", " ", "produce", " ", "bad", " ", "results"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"incorrect", " ", "//", "Det"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "determinant", " ", "function", " ", "fails", " ", "to", " ", 
    "work"}], " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"correct", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}]}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", " ", "//", "MatrixForm"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{"correct", " ", "//", "Det", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"this", " ", 
    RowBox[{"works", "!"}]}], " ", "*)"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.608150816319316*^9, 3.608150942529316*^9}, {
   3.608150978636316*^9, 3.608150989018316*^9}, {3.608292327318877*^9, 
   3.608292415297674*^9}, {3.608298785781434*^9, 3.6082987949136076`*^9}, 
   3.760966197086379*^9, {3.760969221068956*^9, 3.760969238728382*^9}, 
   3.760972576435296*^9},ExpressionUUID->"d1ef1d29-5fc1-41f6-b1be-\
1bceb3854353"],

Cell[TextData[{
 "The \[OpenCurlyDoubleQuote]incorrect\[CloseCurlyDoubleQuote] example doesn\
\[CloseCurlyQuote]t work because the formatting statement MatrixForm has been \
included ",
 StyleBox["as part of the definition",
  FontSlant->"Italic"],
 ", which prevents it from behaving as a matrix."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.760966242063756*^9, 3.7609664364273386`*^9}, {
   3.7609665957865915`*^9, 3.7609666214497557`*^9}, {3.760966744490745*^9, 
   3.760966744490745*^9}, {3.760966776254549*^9, 3.7609668271742754`*^9}, {
   3.7609686762843704`*^9, 3.760968690121748*^9}, 
   3.760972576435296*^9},ExpressionUUID->"728b2ba8-b061-4d50-88bd-\
47c204fe02b5"],

Cell["Two ways to use templates to enter matrices", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.4322919830895557`*^9, 3.4322919926991153`*^9}, {
   3.43240986271214*^9, 3.432409884118801*^9}, 3.432481573424904*^9, {
   3.432481650024447*^9, 3.432481651584505*^9}, {3.432488971793871*^9, 
   3.4324889887355337`*^9}, 3.4325637644577713`*^9, {3.4325876908230886`*^9, 
   3.432587690979342*^9}, {3.43265972397154*^9, 3.43265972409261*^9}, 
   3.4326643827380996`*^9, {3.432664440301705*^9, 3.4326644405048337`*^9}, {
   3.4326662098981805`*^9, 3.4326662332892547`*^9}, {3.432928083671734*^9, 
   3.432928086124953*^9}, {3.544886820682228*^9, 3.544886824506611*^9}, {
   3.608150745147316*^9, 3.6081507491373158`*^9}, {3.76096863019938*^9, 
   3.7609686569381227`*^9}, 3.760972576435296*^9, {3.7609738343912325`*^9, 
   3.7609738574032326`*^9}},ExpressionUUID->"bff244e5-5b02-46c9-9004-\
d9022ed501ea"],

Cell[TextData[{
 "You can also use templates to insert matrices.  \n",
 StyleBox["Method #1",
  FontWeight->"Bold"],
 ":  From the toolbar at the top of the screen, choose Palettes, Basic Math \
Assistant.  Under \[OpenCurlyDoubleQuote]Basic Commands\
\[CloseCurlyDoubleQuote] open the matrix tab: \n ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnXd0HMed50d3f+z9c/vuD++9e3frXVtizlnJ3l1FJkmUvE+2tLu3fvbe
Wt4zRYkiQZBiBgmCAEWCyDnHGQCTBzkngpTEHMGcAWaJIOm1b5/vV1UdqtOk
7h5gyPq+L8Gamurq7ur+TFXX9G/6x7/+7Ge/+U8Wi2XVf4E/P/tV7GtffPGr
dX//3+DFhytW/dsnK/71/yxesfpfP/nXL1769X+GzP/+nMXyP+AfSk+eMZd4
ykzwPPDUWfPB02YvAE+fA34Ree6LM+e+FJzFkjOCXcRPVVrWX0PwtVHF5hG/
PHP+K7PmvzprwU9mvfjTWS/97ayXX5v1yuuzX31jzqtvzf7JW3N+unDO3yya
8zeL0d+/xX8F/3ThbH9eJHhO8OYrny34pxLPwp4dimcJ/onomQrPIP4pbz5n
uooXYotlZpBKfir3LPW1LySeSfunCks3j9pycakZryJPJ8ZbNY34VS0vmk6M
d2Sa1CSz1t14avD86bPnB89dPH/p6qUr18AXpSaZl6+G5ksKh1qDVj2jYK4R
rhJf5My1z4Ur1y9cvo7+Xrlx/srNC1fBQxeugYfBF68PXcQJFUOxq0Pn8V+S
oDx8XpZzBVtejPI1YlTzeewLV7G11k5ZcwuRb0XAF69H1Beu4/VeVzjgpioX
wT574VLstj3bknNS8ipS8yvS8ivTCirTC6oyCqsyiqqxrZkl1qwSm5azVV2s
MM7PKbHlloJrsG2iS6yCc7CziYulLhGdJZrbkkzO1sxiaxZlfvFq5CLOWaKt
mUXWLOxMFVdnFnJGbVJYlV5QmVoAbVWekluenFu+O7d8V055Yk5FQlb5juyK
hOzqHTm2Hbm1CXl1Cfl25ALHzgLHDnA+2L49Dzu3bntObRztbM5bs3hnIm8B
ZyBvzqjZnI6daduSWUO8NZu4FhkqycVGFdoFbyPORd6e64jPc2zPc8Tng+1g
vFUoMz4P0siQwC+dO/Kx85Dj81zgHfmuHTgRn0/sBu/Ajhdc4AJvB+cjb5Ma
ZRa4d6g5oZDzzkBOKFQULsJGaY/Sidj04jvABa4dha547O2F7njaBYI9lL3I
hcQewdvx33OXriakF2aV1maX1eWU2XPL7XmVjrxKZ36VM7/aVVDlKqh2F1rd
hTZ3kc0jtZe4mLhGsKcI2VtUI8ksqfGW1njLar3ldb4KZC+40o5M0uDyWlQA
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
3MkbdFcUUuWBBCvX6n60K5d1QTq/h2UcjbrC4OjIN72njgycPrIPcTR7LHBk
pEKoPHR81TjSpTHRDqNUm/Ew6FA447qDfXB9dObYgCHXR6N+UEalcsaR/tqM
h0GHQufo/okj+wZPfnP25NdhzNeNjIwc1y2ohBwUQ2oblcqN5Wjst4MZtRkP
gw6FMV93+tiB86cPnj/97cj39+fNnRXS90fQAkd1iz4o+msblcoN58i8TR2D
h+wp4Ojh9w/Onvz24uCRi4OHHz18MH/e7JvXg/09Vdj3hw8fHtEtqIQcFENq
G5XKjeVo7LeDGbUZD4MOhXE/w4XBI1fOHb9y7uijke9enD9n+Gawz7UkzXhI
t+iDor+2UanccI7M29QxeMieAo4ej3wPEF2/eDK8+1SZzeCIeXSPYxgcPXn0
8PrFU0OXzwxdInET80KKmzDq/GFiGnXp4ej3j0eGrwwOo/ijQfy7xPNDiuMb
3R1nYjJQujh6MnLr2uDta2I8bEhx5aO740xMBkoPRziu/NydG+fgL/59htB+
52R0d5yJyUDp5OjujXPU75wwjpieUeniiPxOPkJJ4CiE34Ec3R0PTfh+a1nU
QgAd3zLVEvRdp8YpjC1l0i+dHN27cY6YcBTS7xIH2DLFeUgyzD9FuBgFyZqi
miOyJcK2cC/97I2/TY/UUYgy6RzXRZKjCInHSLLyp4IjSShTuBwxqSqaOBJO
Ee4zcepU2RlBIcAvSGfxBbmat6D/5GcTd859+OGHyprJK0mNQgnlqrm1fCg5
beWrVts82Q6rbrxi39W3it4ntMjULTZIk4VV9kY9S7bNVFMIgIp7rXIIVEo9
fTKEo7ujw5Hw6SpLqX6eUsvQB1b5iwcW+gyXnKZCNnW+aa+aJ9JG16q5av/D
JcXGa++7Zn/0oY07x7mE5p7L20+2zdKmUD9AVBXPyDhQP0d3R4sj/JYsT/Gh
LMum8tQ+GaWf6vKPWfGz2aayOfLV+Ckqrlpt8+RNoLnxqrX64Yi8x/+v0qX4
40jYZrWmUN1cCw25tDmfPhkx7z0mOFL5eJTUofhIVzmi0j6I6lBkJ49qfySv
ULFusWdSOUNVPrYDbrxa/+yXI38NGag/UnCk1R9povJUX3WNdY7ojzb/HP1J
3p1QgyvNj3TlCulTUDbK0+zgglm15KLJJlmBsjY/76rvu99+TZsjrQ0Qs5Ud
T/DXR9S4TlroKZRBHJ01nqOxrqf645UpROn+Hvbc3ZtnweT5R88AR8/EaJ8p
VBnG0TPXHzExidLN0VmTOAqyHqaAYo1poMzlyITrIyhz+PBht9tdzRSWoOmg
AR/wHLHG1CO6Mc3i6IYpHB06dKilpQXW+0emsARNBw0IzcgaU7/oxjSFoxtm
ceRyuaDYH/7wh0dMYQmaDhoQmpE1pn7RjWk8R09kHC0wkCPoTGHjv2fSIWhA
aEbWmIZIaMxo5CjI2phUJeMoQms9VfHFx7va1d5p3/VFxSm/OWhZSurVjI4i
xdGIGRzdjbT6YidNiu0zssbCZZZlhUZWGLxkHEVmpa1JHyclJX1RdlztLXm2
POd42RdJrdQL1WpGRxHsj4y8PoJt/vd///fbkVbBe+8VGFxl75qJhtcZnKAB
BY4i1ZjNSStLj8Hfj5OaxSzSuwBe6D3VHE7HSleKy8ELWfmPca1CIcgmBZpl
1ZghoTHN4eicqRwNR1h5702M6Y6KSoORjKMIrPFIycrEJkliuCnxYzG1suSI
Wg69PD2uI8XE8lySq7wpceVKPiGpxRSZzJGJ/RFsz1Bk1bV64rt5ity8d+l7
L1UKBCqW9+7E1V3mbLFfQQMKHEWkMRsTaQpWlhweGjoM53yj8DbKUuaIEt8T
36HL01UcLkksaUQJeSXmSGhMxlEgAUZqJ3zeajGza/VqTY40i6njab4izRFg
JJ7x/CsxE85+fMIrcwRJGeOKUdXySbTgykRMVCIoAhgxjoIX9Chq57tujkar
Q4osRwooGhM/5rkh/dNKvoAyR6xDSiJ5W+zn+HehIEkLZcxWBDi6Yw5HT548
iUD7iNLojgzhSHs4aKKgAQWOIt2YT52Exoy6/ujSpUuDkVTKYsviFPV8SqpF
AhSr/3TcuE/rTdhk/4IGFDiCK+XrTDoEDcg4Ckopi0072bUQNVcCRy6X686d
OyMjI0EeHSaZoOmgASN1X5DBHF25cuVcBNWwYvz4FQ3m1J0GHKWZU7UfQQMS
jg4dOtTc3Hzv3r0nTGEJmg4a0Kz7VBlHIdQ9mhxBgx88eNDpdJoRU/AsCJoO
GvCBSXETJnMEG3Mxgmr+fPz4z5tNq3tJhjlV+xE0YDXPEZMhMpej66bcp/oU
cZSxxMI4ehoUjRzBllyJpLKWTljZalbVlqVZ5lTtR9CAAkcsHlaPzI2HfTJy
5/rgnWvI5H5vA59/VD0aHJl1sreunGAaon4kcMTiYXXqvpnxsL9/MjJ85Qwx
fj6swRxF+iuPjlUTJqzqMKnmd3LMqNi/hK88WDysTpkaD/vk0cNrF05cO48M
6ZdfnH/3tmHPhx0Fjq7nvGMx53TPecckQP1L4KiaxcPqlnnxR49Hvrs4eOgC
9qOR715cMPfOrZvRzJFGtwF4UdIkTbvYKHVHco6CPDRBSU/Q6wNJ3KviPWq5
sRQQax5HD79/cOrwAPjk4QFIz583Z/jm9SC3KhiOYDPMDiqRST1SKC9GzOyO
icnTWliz2GgFIEEDVpsTD6sr6BUtLeQcL/viYzEEVrES9XdGQ+Zx9N39u9/0
dxJDes7smTeuX41qjtTPeL0cdcdMfE9rIVN1l+LI0HhYXUGvYpirvFI66JVk
4BQVJMsFvqKcJFIcXjcLKa72lVwwoKFBsubF8d27e7u7vZEY0rNmTr965ZKB
HEEx45ohOKnGgBesWdMrFlijFSOuVWz04sqhAatNiIfVGfQqLkVLEfQq/k8t
wEW+orBZIVZWGjV7BEVvHOHWY2SYrHkc3bl9q6XBTQzpGdOnXb50Mbo5gpP+
PZEGTgXv0Rc+mkxoFTPhJx+CFM2RcfFHuoNeZa8PNzYeVgt6pYP2xDg+2fro
AFpcWlnYIJkXf3T71q0Grwtc73VBevq0aZcuXjCQo4cPH0Z+GNwXu8zo3wsy
+AeIghc0oPEc6Q96lcTeoYA89EIl6JUOfhXi/55Cju7AeLXR19SADOkZ06df
vmTkuG5UOHqaZAJHRgS9kmokHRpdXgh6FdASSicmPo39ERTr7GgjhvTMmTOv
XrliIEcjIyP3mHQIGrCaxcMapCemxcNC9sDAPmJIz5kz+/p1I+e9GUc6RXM0
zOJh9WnYtHhY0NGjR4ghPW/ePMDWKI5YCKdO0SGcrDF1ytR4WKhcCGGG9IIF
C27dMuz+OhbCqVP3qBBO1pg6dc/MeNjHjx8LoS6Qfumll4BZozh6wEI49YkO
4WSNqVOmxsMCp9d4Qfrll1+GBQ3kiMkQscY0UGZwBOVv8oL0K6+8At1fkNvD
nrPM9DRJJ0fCrKDhHAVZD1NAscY0UNHIEQuF1iP2nGUDZWpcuakcsVBonbrP
nrNsnO6bGlduJkcsFFqn2HOWDZSpceWmclTNQqF1iz1n2UCZF8cXAY6CrG0s
amDtpElrB0Z1E0bnOctPqaKaI923PPfFThJjgsJ63nG4NRj/xOaQFfHnLAtt
NVpPljZR0cuREaHQvWsmTuQC8yCpHYRnfA3UcqOl0XjOcsF74TRyFMi8eNgI
cKQ7Grg7ZiL/iwtUEilPDF8lv54A75OUkEBl3ovRrAGV4yRmU9XyuaiWPMXm
iAXF1Stq06fIP2dZsrN4bydOlOyU2La4KLenyn0XF4XS1NsW6lgY3Vz+Fb0c
GRF61rVaPATUI/FQtvAy710Lfg4f9zw+9N9E/EBX/Bi9YGrgn+RHZ4pP96Oe
xidk8uv0V5tuRfw5y0PSRw9SeyUmhQJ8IlBLqjSHOc3lX+bF8UUJR2onrvRB
k9QRxdzAi7x3+ZR2DVIJ4MnXrMaR/Nir1qZbY4AjYS/FfC5XeGau6r5LG0gs
IiBoQnP5F+OIOx6yzkLZH5HSE9/lqEG9Etc9qdeg/BSkMyUc8blCUtkfmfCZ
OjY5wtnvvku3qv+WVNYeoS5Ioujl6IkBodDKzzX+aFKfaeKnmcopr10DPeKj
SFTkUZkcm9L1k/pUl9SnJ5F+zrKwD8IuqXEkbUXJcsK+yz69lA1jQnP51xPT
4spNvd+7moVC69Yw9bvErDF1ati0uHIg9AYvEn9k7H1BLBRaj1hcuYEyNa4c
2BFoNZwjFgqtUyyu3ECZGlf+xEyOHrBQaH1iceUGyuy4clM5YjJErDENVNRx
xMQURRqzHAVZD1NAscY0UNHIEQuF1iMWV26gTI0rN5UjFgqtU/dZXLlxum9m
XLmpHLFQaJ1iceUGytznlZvJUTULhdYtFlduoMyL44sAR0HWFj0qft/yfnGk
Vsbiyg1UVHOkOxpYGd1duMxiQrw31CrIX/VQLnIx1+bEldO7yuspjCOXK3o5
Mjiu3DxJV+L3ebARDbs2Oa78qQ0hV5V58bAR4Eh3NLAsFHyYCnxWiXrmsi2y
TDqumY+KpgOf6WBp2apkS/FrDza8Wp9MjiunQ8j9RIJLguoVDa6MGZcsK65B
pTEjGm8evRwZHMfHSQiEUYt6DhiwLORJSkrCYahIJGWooCKq2n94tT6ZHMcn
DSqWNQidr2wRPum3iaXlFI0Z4Xhz8+L4op8jRZSZRsCyJFvgSP0o8cdSPXQ9
xPBqfYo0R1ph91S0sTKsTx7PKK2IK6femBGNN2cchcCRKh2qodLSpamF/H2E
hhxerU+jxpF6cLlmeKw0S1ZM8QMy8ph8alkz482jl6MnxsSVyz6f/HIkX0Ic
w/ntj9Q+faXZVDR7KOHV+vTE3LhyP/2RWoupNXjA0HxpY0kyIxxv/sS0uHKz
ORpmodD6NByVceUdqyZMWNUx2luh0LCZceXCWsy4L4iFQutR1MaVj4EfRleI
xZU/s2Jx5QaKxZU/s2Jx5QaKxZUzscY0UFHHERNTFGnMchRkPUwBxRrTQEUj
RywUWo9YXLmBYnHlz6zus7hy43SfxZU/q2Jx5QaKxZU/y2Jx5QYqeuP4WCi0
TrG4cgMV1RwZERCMH6JNxXqjuOhwQr/9B6RLo61H+0nlRIbGlUemGSVPhx9T
4erRy5FBodAo6nui5JnjFou/WPPwwqXHYpC1oXHlkWlGOkQfrWO0H/kuKnrj
YQ0Khcah5THvCc8ip55ArhL+LIYvQxlJrDQVEi6GLKPi+IU0yFp8U1K5n+Br
/GB0cc1G7LixceWRaUbp7wAIjRrsw+XzAj36PHxFL0cGhZ6RsBf+8ckk6e+B
pLJYJDp8jM6H0nRAmSQESTOOTzPwmapKK0A7dBkaxxeZZgw2qFz94fKrAz1E
XoeiN47PUI64FpcF9qsF4Kk8XnxIlj8knAPCa0WAp2ootDzYTTU+VCVWNDyZ
wJHZzagWhhf8w+WDePR52GIc8e2oCFxWD38O4gQgH3GSc0Bx8vv7FFXWHjUc
mdyMGj98EuTD5QN0kboUvRw9MSYUWtGO0l+wUXz88Z+u8uNCh0JLgtBxEbWT
XxlXHlmOnhgZVx6ZZtQ46YN9uHyAR5/r0RMWV/6sajgq48rHqIZZXPkzqaiN
Kx+LYnHlz6xYXLmBYnHlz6xYXLmBYnHlTKwxDVTUccTEFEViHDEx6dcY5ygt
LS02NvZzphAFjQZNxxrTEKk2ZhRxlJiUlJKSMjQ09P+YKCUlJf3Hf/yH/zLQ
aNB00ICsMf0rvMaMLo5iYmJu3brFAjllio+Pf/z4sf8y0GjQdNCArDH9K7zG
jC6OoEuFT4OINGc0KZhDD4KmgwZkjelf4TVm1HH0xz/+8TsmqbZv3/7o0aOA
xaDpZByxxlQqvMaMRo7uS7RvLYpuXruPf130vuTls6Bt27aNjIwELKbKkbIY
blBBepoSDsX7RWEvPUoKrzGjjiMYmt6RqI+Lbu7jX6G7erlXz4ji4uKg8SEx
SU1CMWg6GUeKxrxTsMxiWVYgvob2pF+GJqgs/IVHS+E1ZjRyJI2Sx/H7a7jQ
f3jx3hoqoL+Aij4uEIpzMcXcAsIt9WMm8D9Ubd26FdqfpGXHnS6mypGkIvq3
EOT5/huNyuKbWmx7UihKmjq8xow6juAa8KxE9SvGj19RD38Xp55NXUyS8Je8
Y4FMotTFFpxLZ0oKCItFn9auXXvjxg3hpXDcZcWg6WQcyRsTGkloD1ohNZqY
R1UXPU0dXmNGI0eDEtV/Om7cp/X4v3FCCv4bHEyBw5gilONeCe+SLKmo4tEk
OPTQ4HQOHHdlMVWOJCXoxtHK12g0STZXmDoA0dPU4TVm1HH06NGjkxK5fzdu
3O/ckEheaFmYTGdAguScJO/iXOHdk9J0NCsmJubKlSsBi0HTyThSNCZqJrHN
TuImgpcBG41ve2kBKjd6mjq8xow6jkZGRo5K5Pi3F174N4dGxldvCx+Ab3+l
Vhxeip+R0nqiR6tWrbp06VLAYtB0Mo4UjYlEtRnfbIEbTZIlNCRXlUqRsdvU
4TVm1HH08OHDI0xSwaG/ePFiwGLQdDKOWGMqFV5jRhdHpM+9c+fOISZKX3zx
xfnz5/2XgUaDppPdF8QaU6nwGjO6OEpKSkpOTr527dpDJkrx8fHQ2v7LQKNB
0yVRt1ayxlRVeI0ZXRyBdu7cCZ8D5t0S/7QKGg2ajjWmIVJtzOjiiIkpKsQ4
YmLSL8YRE5N+jXGOWCg006iLxZUzMfkXiytnYtIvFlfOxKRfLK6ciUm/WFw5
UaC4cq1gZ8gPMoYarUHUWI+cFvaL3vHgd/aZE4sr515Z/MeV6w92ltQgD8Qe
u4rKKO/Ii8WV35bHlQcKdpaES3NPpcfLSOLSFUHQsufXU8HYaqHT4hrlWyDU
ItlOC9oBWSWyAgW35VWrVkWW5rZWGuVN7YJ6JVy7aGzDWI4L1ysWVy6PK1eW
QimtYGdZPpTmQ9Hlkkdfc69VQ6dldaiGukvirKkFxMJ0AT5XrSq1XRe2lt5s
Pq25PXwutbaxGwpuqFhcuTyuPGCwsySMWhqFDm9ZVEOsFSWFWtRCp+WB2qqh
7vKwbaGEkFbbUPWqqK3g3qXfUdQcyvYoan46xeLK5XHloQU7S/Mhjf6qxkLT
9VKB2FoB13Smaqi7ZEm6ciEtK8AHyKtUpdxKoRK1mkPbHrX9f+rE4soVGYGC
nSWLQjaKocbLcDHo5IUiBFol8PooVV62PrE0KakMdZdHwgs1CmlJveIKFVVp
rJ9bgoryptYS3PZESVC4AWJx5U+v7OjEto/2VjwbYnHlT69qf/vCC7+tHe2t
eDbE4sqZmPSLxZUzMUVGLK6ciSkyYhwxMekX44iJSb8YR0xM+sU4YmLSL8YR
E5N+MY6YmPSLccTEpF+MIyYm/WIcMTHpF+OIiUm/GEdMTPo1ihwxMz9NHhWO
Ru+Tg4nJREWYIyamp1WMIyYm/WIcMTHpF+OIiUm/GEdMTPrFOGJi0q9QOfr/
E92bcQ==
     "], {{0, 278}, {280, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{200.00000317891795`, Automatic},
   ImageSizeRaw->{280, 278},
   PlotRange->{{0, 280}, {0, 278}}]], "Input",ExpressionUUID->
  "8d4ef904-9932-405f-9b29-9c44efb6fa52"],
 "\nHere you\[CloseCurlyQuote]ll find a matrix template, and lots of typical \
matrix commands.\n\n",
 StyleBox["Method #2",
  FontWeight->"Bold"],
 ": In addition, you can insert matrices using Insert...Table/Matrix from the \
toolbar at the top of the screen: ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnT2oJMl9wJ8/AiMlFgyyAic2DhQIOZCDxYmxNRsYf4GMcSzxZGEwY5AM
xonZ3GsFx9sX28EquVXgdyf2Rlg2ezx0KzBiMeLhFZMcx+HHbSJpJZ19llTu
6u7q/ld1VX/MdE/XdP1+ULszPd1V/VH1639XzZv6tc/99Wf+4ufPzs6+9EvZ
P5/57N/+7he/+Nm/+9Nfzt782eZLf/mFzefPf3/zN5//wue/eOdzv5At/MjP
nZ39fZZ+MXv93e9+V5FIJBIpnfTBBx+QSCQSKcH0/vvvq7fffju6pPdr7nND
IpFIS0zase+99150Se/X3OeGRCKRlpjwPolEIqWV8D6JRCKllYLef/5YvfLK
Y/V8Mrc/VQ9b8u/l/Zv76s7ZmToT6c79myOctyt1fue+ujk4nxt1/0697+dX
PY5Xl1v+P2bZZ2d31P2bkc6P2c++y6dKV+dW3dj7GPfeb1FPjn3sjbbRceyd
+yfr/Fj1v3+6Orfbh35/JvfBaRv99q1oA53tburr5DuOIdvskWbzfkf+vb1/
5Po3XrlFnavvU1lb6ts2D/a+W/YHpSPP1VU052eEpI/p/Gq+45nzPLhl63PR
ti9d+yo/n+G4bu7fsdtKVv7987q+2p/3TXg/6GX9/8OH6uG9e+qeTg+flus8
V49fKZdl6ZXHz+ttnz6sllfr5/ll+eTbvJK9Lj/PypjC+7oeNJ4B8vXPszpz
VjjOeq/Xu6piYLONzKdwiIiTD3GvZ99vbq6yVL6Xsapx11jeDzjg6ry877jn
yXse3PX6LhfuqGJR037tZ5CDn90C3ncdId+Hj9ONJfW+1vfprnoitw3Wzcxj
527ZE/ik9Ri9dU8ei7iuwfUnuJb5+an39TzLTx+HcbZdd8vzHTif1fGXx2Ly
CDujPo/5c4Z1jAc+J3d5v9MDnnbWI/Xy/r2H6qnpmzGvtdure4BY7sTxTx/e
Uw+flssz3z9+PnK8L59lLacYl4g4Ol8urpN8775utHOdT5nnGPFOWyzqqWt5
3RzJ+52xke88hc5DtZ6InazlvvNmP9vk7U2fC+uciO0OOceh+uHzd9f13nc7
N49g3ZTLDzz2ULw/6Bg9dS90XO76Y19LkUfl+6yMoh4HjsN3PuXy0h91nfVc
F8vt+jnjzrjPPZ6+an89DXjA1/56lNvL+5WfdYxfujv3uPsM4MT68lnA9fyU
/TyOU711t63+BuNSXzs/wEkh7zf6pcv4YyLv5zGMHGPwHV+P81Dl2+XHtv7/
seLdjnNsxYdynbbjbIn3O8+Ped2rbo4UR4b699v2tavuue2jbf0xr2V1zfS5
EX6uYvt+z2a+ut+8T9njCdU25X3G1J39+pY81ynkpJ4eaLS/HuXu7X25Xun3
PK63ngNa+vNPwftWn7cTm41xnw/lEfLV5P08gfPU8zwc7H15nH3HuruOs+3e
mn1mjRd2HWcjVi4/73N+5vB+qG207WtX3XNfd42hjHUtPzBxvhxTLu8BVdwf
ulaHed/keWU9Z1wdfo1816nPuZ3R+88fv2L5XffnVHF91Z9TjAFU/TzH8n7b
s/RQ75vznreXEb3vHdeVsVKg/2QM7/vGdcvyg94PnYe2/XTaXKifx9yHrkx/
j2h7B8VTrU7S/jjP01Wf43T7DuSx96knffp5juX9zmPsuKaN5+Hm+jdjX8uy
rLyfxRmbaTzLdPXJWee/q5+n3v7OHXHt9djBwQ7wXKce53bWfp7S9VV/jnR4
cFxXev5pMVZ8hHFd977dv5/nSowLndd1xCw/yL0iH9/Y15TjuqItymfI4HkK
nYd8vY7x21A/uNXXULvX2qcx+tLOAsf4gTtG13Wcxb5U+5cftxzDaK8noXFd
/zmf0Ps9jtE/TiuOxXodWn/kayn2wXKb+z20Hn1y9fnXLveP67r+zD+z8hvp
O+NtTurlgZHHdWdO/N3WCaRRnntIJNJe6YD2h/dJc9Q7Eol0YML7JBKJROqZ
8D6JRCKllfA+iUQipZWYd4VEIpHSSJp3332XRCIlmiBN5q53JBJpvgRpMne9
I5FI8yVIE+ocQFrQBgHvA6QFbRDwPkBayDb4gx/8QP34xz/Ov+fx05/+VP3s
Zz+be/fgCOB9gLSQbfD58+fqnXfeUd///vdz9+P9NMD7AGkh2+Drr7+u3nrr
rdz9P/rRj/KYH5YP3gdIC9kGv/zlL6tXX31Vfec738lj/p/85Cdz7x4cAbwP
kBZ4H6Ly/u5CrdcXajfa0W3VJpjfTl2sV2q1WqnNdrQCm3uwWan1hbMHox8n
zEddj+y61FL3uq7/xPUD78Oivd+W3zHcq8vYXGRe2KituxzvL4DC+fV9PXP9
aq3yt4fUPbwPExOl93NfbrI2VMZRJojKP8+Wr33LTTvRbVG3PRGHNdrQts57
lTnZyrdw9O5iXcVwVbt2yl9fbKsyGjG9KmJ9vYs6L+uZInQcgXL1Mpm/9X67
qdZfTfngAk08ft7ttlly6p5bv9ztsmto1R+8DxMTrfdXJkbWji5f58vLeKqM
tTZbFfC+uzxQViNf816WL/ILvfbeW8R+y8/zbU2fgHMcoXJ7HJ+5z8CR0Pfc
0Anvql94H2YkWu/38FwV947hfacdyvZc+TS0jS/uc2J0y8mW38W6oXLz1+KY
6oV1rO8+m8D0DPG+e9/X7z3Xb1U8IOJ9mJTleX+PPtbRvS/7kUSy4r9h3jef
+ZbBTOxbv4j3YWZOzvuhfh5fX9Ah7bKrv2XAfUN5j2NAP495n/cRizHi0PmA
I+Eb1101YxG8D5Fxct4PjIfqOLiIqfXnxoVl3O1rQz36aRrfzevl/V3z+zv1
Torn+O5xXdfh+TE2FzKuOyv2s517D1g16rPq930eX//PSOB9iMr7XfD9R4CD
wfuA9wHSAu/DSXkfAA4G7wPeB0gLvA94HyAt8D7gfYC0wPuA9wHSAu8D3gdI
C7wPeB8gLfA+4H2AtMD7gPcB0gLvA94HSAu8D3gfIC3wPuB9gLTA+xCf98Xc
pL1/f1b/Nv2+v9fWtm29L1P+xLH+feXGPFn8Bt1+OHNYeX9DW9L4DW2zXd86
ZdfXup60bM+86jAzcXnfncci8Jvzjc0OaCd952aZinzexIvmb/bj/eE485j1
noNHrt8yJ4NnA8+8KwPn/Nnn8wPB+xCV9wfNT27mYxHxVjXHhWdOkz7bNso1
cVxWvpVvsT9yjpSq7Tvlry+2VRm+uW/NvIk6L+v21nNuFpOnO5+v9T6VuVk6
XdtWL+T1zs6dr170mBdrt9tmqa1OmrrEfFswH1F5v8/8hF3z7rbNxXjo3Oty
3sO2uRhDr3vf08y2A+Zi7Hl81vy8C6Sad23leX5ayXnYPOe9K953/TxkXnW3
7uB9mJFFer9z7vU9vT/q3OvNGN1y8h5zr2834pjqhY353X3PHcvDxO9tz4qq
3/XynMP8Ggzxvm+exVC+eB8mJirvD4qJe8x3rkLe36MfdnTv2/OyVsmKEYd5
33zmW5Yqg+77Q+P9fesO8T7MTFTe7xrXlS4M9aG09fN0bdvYnY6229XfMuC+
UR+/7CMa0M9j3uf9yIGxTZnPEsnjZ9m/M7Cfb6j3veO6q+Z9Bu9DZMTlfU37
9zir/tvcb7K/tmNct8+2jV3p7qdp/b5gcPtd8/s79U6KZ/3ucV3X4d7vP6Uy
rqvsc9Mcbx/SR9hSLyzs5zb3HlDXyRbvNw8iv+c3+n9GAu9DfN4/EL7/CNAK
3ge8D5AWeB8W530AaAXvA94HSAu8D3gfIC3wPuB9gLTA+4D3AdIC7wPeB0gL
vA94HyAt8D7gfYC0wPuA9wHSAu/DnN4nkUjzJryfJnPWOQA4Pngf8D5AWuB9
wPsAaYH3Ae8DpAXeB7wPkBZ4H/A+QFrgfcD7AGmB9wHvA6QF3ge8D5AWeB/w
PkBa4H2Iz/sv1e56q7bbIj277TiAlzt1fb1TL83/+5yEattb9czk0Te/22fV
vvba37EIliuOIcQh52qh3D7bquudc0Z89SKcgXU9tttr5WbnbNCd50TgfYjL
+4Xz6/aXtY2u9jOG99283Ndt62+fqVvrfVd7H4G2cvvuN96v0efj2S6re+Kc
muV965b2/pCb/ozXAO9DVN73tIWXL2+zVL6RMZVpY21t01mmY7q6bep7jHTl
syz+KvOu8hPLfG26o+2+3F0H9rfO93p3Wz3fVPc733H2Klc8K2Wf79wY1rhJ
bt9VVgLoelGclmv7ec1XL+qN/OfWJb+nZHlY59i+TsHrYJX/bLTjxfsQlffb
YiaPw4sm1BaTCbfnz9XX/njel4cVu+vnDicWFPtRtNdArKic7d3Y3I3TQ8e5
T7nWc0HhmrZzFipr2TjXRtahtrrl877s5/Feg0BZbXV7gudHvA8n4/1G/2kZ
y3Y8i+sYLl+vbKe3z4p2VC0vVvJ7v8pP3j9C3JYxndv/4vT3hsowr0PH2bfc
xn47rj+orOVh1QPl3Pt89cJzzvI62xbv++pRR55W3R75mPE+ROX9tnre1a5C
25bLb80zfO7/W9vjo3jfZFXfZ7ZWnDfA+3sE3VW57nko8/Pe5/Ysaznc1v0v
oVh9SLx/iPf36EfcF7wPUXnfO64rYp/qmbe7z8LO8zrvJ63iYd3f2vU838f7
ltud/ZJtOV+vp/dDx9m33MZ5KO4519fOc0jfspaM17ceN0/t/a66PdoBF+B9
iMv7GjsGC/ah9hnXVWaVazEm595bRB6m7EZ+4XjfGrvdNu9Zxb4W43rB/hb3
dY+x1s5yxbnI15X5MK6rimvqH7Npjn83z6l3G+e5oeluZ7yp17gu3ofxic/7
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
5UM7B8P/A72OYGY=
     "], {{0, 273}, {382, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndUVNcWh8+9d3qhzTDSGXqvUgYQ6R2kV1EZZgYYygDDDIhdRFQwoohI
UwQJChgwGorEiigWgqIC9oAEATUGo4iK5d2RtaIrL++9vPz+OOu7++x97jl7
73PX1YhPD0mAAQBZBHQIYee4CIXs3FAZ9CFckMVPFPC4PgIRL5EnZMVDqNGb
gg6A4u3PF6TDqFeaQCQM8XJlRkXHMPH9AAZEgAMWALA5WRkBoZ5hEm8fDzdm
FuoEvghd6vWQZATgpol3EJMJ/j/JcjKEInSZIJQXcnlZHJTzUU7NEWVI7NMo
0+NTJAxjJCxEN4iygoQT59n4s888O0uYmybgoizZcwY3jSvhHpS3Zot5KCP+
KBdk83k5KN9CWTtVnMZH+Y0kNo3HzgIAI8mOtojHSULZXJIoYViIG8qLACBQ
Er/i+K9YxFspkhzKLT0jV8hPTBIx9TkGTAs7OxbTm5eTyhOJTILYnBS2kMt0
S0/LYAtyAZg/82fJSXLLRJNsY2FnY2NiaWrxVaL+6+TflKS28/Qy+HPNIEbf
F9tf+aXXAcCaQXOz84stvgKAjs0AKNz9YtM+AIA0Wrf2a1+dhyHplySRKMPe
zCwnJ8eUz+OYShL6h/6nw9/QV+8zlSz3R3qY7rwEtjhVxJTkjZOemi4WMrMy
2Bwe0+TPTfyPA/96H8YhvASekCdAIyLQLuMLEtFyC7h8ET9dwOQL/lMR/2HY
nzTf16ho9R8BfYUpkLlGB8ivfQBDIwMkdj86A/1RN39iBJDcvEj1ifm+/yzo
31eFiyUD+hn5HOcWEsbkiIXZ83OSawmwgASkAR0oAjWgBfSBCbAEtsABOAMP
4AsCQRiIBssBBySBNCAEOWAN2AgKQBHYCfaASlAD6kEjaAHHQAc4Cc6Bi+Aq
uA4GwT0wAsbBUzANXoM5CILwEBWiQYqQOqQDGUGWEAtaDHlA/lAIFA3FQYmQ
ABJDa6BNUBFUAlVCtVAj9D10AjoHXYYGoDvQKDQF/Q69gxGYAtNhVVgXNoNZ
sAvsB4fBy+BEOBNeBefDO+ByuA4+ArfD5+Cr8CA8Aj+FZxCAkBEGooGYICzE
DQlEYpAERIisQwqRMqQOaUG6kF7kJjKCPEPeYnAYGoaJMcE4YLwx4RgOJhOz
DrMdU4k5jGnH9GBuYkYx05iPWCpWBWuEtcf6YKOwidgcbAG2DNuAbcNewA5i
x7GvcTgcA6eHs8V546JxybjVuO24fbhW3FncAG4MN4PH4xXxRnhHfCCejRfh
C/AV+CP4M/gb+HH8GwKZoE6wJHgSYggCQh6hjNBEOE24QZggzBFliDpEe2Ig
kUvMJRYT64ldxGvEceIcSZakR3IkhZGSSRtJ5aQW0gXSfdJLMpmsSbYjB5P5
5A3kcvJR8iXyKPktRY5iSHGjxFLElB2UQ5SzlDuUl1QqVZfqTI2hiqg7qI3U
89SH1DdSNClTKR8prtR6qSqpdqkbUs+lidI60i7Sy6VXSZdJH5e+Jv1Mhiij
K+Mmw5ZZJ1Mlc0JmWGZGliZrIRsomya7XbZJ9rLspBxeTlfOQ44rly93UO68
3BgNoWnR3Ggc2iZaPe0CbZyOo+vRfejJ9CL6d/R++rS8nLyVfIT8Svkq+VPy
IwyEocvwYaQyihnHGEOMdwtUF7gs4C3YtqBlwY0FswrKCs4KPIVChVaFQYV3
ikxFD8UUxV2KHYoPlDBKhkrBSjlK+5UuKD1Tpis7KHOUC5WPKd9VgVUMVUJU
VqscVOlTmVFVU/VSzVCtUD2v+kyNoeaslqxWqnZabUqdpr5Yna9eqn5G/QlT
nunCTGWWM3uY0xoqGt4aYo1ajX6NOU09zXDNPM1WzQdaJC2WVoJWqVa31rS2
unaA9hrtZu27OkQdlk6Szl6dXp1ZXT3dSN0tuh26k3oKej56q/Sa9e7rU/Wd
9DP16/RvGeAMWAYpBvsMrhvChtaGSYZVhteMYCMbI77RPqMBY6yxnbHAuM54
2IRi4mKSbdJsMmrKMPU3zTPtMH1upm0WY7bLrNfso7m1eap5vfk9CzkLX4s8
iy6L3y0NLTmWVZa3FlIXei5cv7Bz4QsrIyue1X6r29Y06wDrLdbd1h9sbG2E
Ni02U7batnG21bbDLDoriLWddckOa+dqt97upN1bext7kf0x+98cTBxSHJoc
JhfpLeItql805qjpyHasdRxZzFwct/jA4hEnDSe2U53TI2ctZ65zg/OEi4FL
sssRl+eu5q5C1zbXWTd7t7VuZ90Rdy/3Qvd+DzmPcI9Kj4eemp6Jns2e017W
Xqu9znpjvf28d3kP+6j6cHwafaZ9bX3X+vb4UfxC/Sr9Hvkb+gv9uwLgAN+A
3QH3l+gsESzpCASBPoG7Ax8E6QVlBv0YjAsOCq4KfhxiEbImpDeUFroitCn0
dZhrWHHYvXD9cHF4d4R0RGxEY8RspHtkSeRIlFnU2qir0UrR/OjOGHxMRExD
zMxSj6V7lo7HWscWxA4t01u2ctnl5UrLU5efWiG9gr3ieBw2LjKuKe49O5Bd
x56J94mvjp/muHH2cp5ynbml3CmeI6+EN5HgmFCSMJnomLg7cSrJKaks6Rnf
jV/Jf5HsnVyTPJsSmHIo5VNqZGprGiEtLu2EQE6QIuhJV0tfmT6QYZRRkDGS
aZ+5J3Na6CdsyIKylmV1iujoz1SfWF+8WTyavTi7KvtNTkTO8ZWyKwUr+3IN
c7flTqzyXPXtasxqzuruNRprNq4ZXeuytnYdtC5+Xfd6rfX568c3eG04vJG0
MWXjT3nmeSV5rzZFburKV83fkD+22Wtzc4FUgbBgeIvDlpqtmK38rf3bFm6r
2PaxkFt4pci8qKzo/XbO9ivfWHxT/s2nHQk7+ottivfvxO0U7Bza5bTrcIls
yaqSsd0Bu9tLmaWFpa/2rNhzucyqrGYvaa9470i5f3lnhXbFzor3lUmVg1Wu
Va3VKtXbqmf3cffd2O+8v6VGtaao5t0B/oHbtV617XW6dWUHcQezDz6uj6jv
/Zb1bWODUkNRw4dDgkMjh0MO9zTaNjY2qTQVN8PN4uapI7FHrn/n/l1ni0lL
bSujtegoOCo++uT7uO+Hjvkd6z7OOt7yg84P1W20tsJ2qD23fbojqWOkM7pz
4ITvie4uh662H01/PHRS42TVKflTxadJp/NPfzqz6szM2Yyzz84lnhvrXtF9
73zU+Vs9wT39F/wuXLroefF8r0vvmUuOl05etr984grrSsdVm6vtfdZ9bT9Z
/9TWb9Pffs32Wud1u+tdA4sGTt9wunHupvvNi7d8bl0dXDI4MBQ+dHs4dnjk
Nvf25J3UOy/uZt+du7fhPvZ+4QOZB2UPVR7W/Wzwc+uIzcipUffRvkehj+6N
ccae/pL1y/vx/MfUx2UT6hONk5aTJ6c8p64/Wfpk/GnG07lnBb/K/lr9XP/5
D785/9Y3HTU9/kL44tPv218qvjz0yupV90zQzMPXaa/nZgvfKL45/Jb1tvdd
5LuJuZz3+PflHww+dH30+3j/U9qnT/8CDLcAuA==
       "], "RGB", "XYZ"], Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{250.33333856529683`, Automatic},
   ImageSizeRaw->{382, 273},
   PlotRange->{{0, 382}, {0, 273}}]],ExpressionUUID->
  "4c8374ba-33f9-4dd8-a75c-3dda0f536645"],
 "\n\nThere are lots of other ways to generate matrices - from data, from \
functions, etc.  See the tutorial ",
 ButtonBox["howto/CreateAMatrix",
  BaseStyle->"Link",
  ButtonData->"paclet:howto/CreateAMatrix"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.76096688093222*^9, 3.7609668890286717`*^9}, {
   3.7609669874653025`*^9, 3.760967104420253*^9}, {3.7609674429078455`*^9, 
   3.760967475528491*^9}, {3.7609675091651692`*^9, 3.7609675277005634`*^9}, {
   3.7609675719923177`*^9, 3.760967582288117*^9}, {3.7609679893331623`*^9, 
   3.7609679916887927`*^9}, {3.7609686817288404`*^9, 3.760968684271673*^9}, 
   3.760972576435296*^9, {3.7609738654932327`*^9, 
   3.7609739062362328`*^9}},ExpressionUUID->"6ccc4bc7-91db-4eb5-8988-\
79beb05970af"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Problem 1: Matrices three ways", "Subsection"]], \
"Subsection",
 CellChangeTimes->{3.7639157066984997`*^9, 
  3.763916102953438*^9},ExpressionUUID->"64013f56-df13-472d-9a5e-\
853aeb8ffeed"],

Cell[CellGroupData[{

Cell["\<\
a) Create three 3x2 matrices (3 rows, 2 columns) and name them M1, M2, and M3 \
in the following ways: 
 (1) Create M1 by typing in entries directly as a list of lists.  
 (2) Use the Palette to create M2.  
 (3) Use Insert...Table/Matrix to create M3.  Use whatever values you like \
but make each matrix different.  Make use of these keyboard shortcuts:

For the template-created matrices, use the keyboard commands
\tTab or arrow\tto move through the empty placeholders
\tCtrl-Enter\tto enter a new row immediately below the cursor
\tCtrl-,\t\tto enter a new column to the right of the cursor
\tCtrl-Space\tto move out of the matrix
You can also start a new matrix simply by typing Ctr-Enter or Ctrl-,

b) Enter each matrix name to evaluate it and verify that it is a list of \
lists, regardless of the entry method

c) On another line use MatrixForm to view each matrix in standard format\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7609671601624346`*^9, 3.76096735133191*^9}, {
   3.7609676142249317`*^9, 3.760967636957569*^9}, {3.760967688270956*^9, 
   3.7609679003270206`*^9}, {3.7609679419503546`*^9, 
   3.7609679643084416`*^9}, {3.760967995682444*^9, 3.7609680047617607`*^9}, {
   3.76096804295205*^9, 3.760968060268272*^9}, {3.7609680990357695`*^9, 
   3.760968176008156*^9}, {3.7609682299712477`*^9, 3.7609683709074554`*^9}, {
   3.760968474539584*^9, 3.7609685158177133`*^9}, 3.760972576435296*^9, 
   3.7609741369114943`*^9, {3.763102457069457*^9, 3.7631024639487686`*^9}, {
   3.763102541895861*^9, 3.763102553353861*^9}, {3.763915010820567*^9, 
   3.7639150109805703`*^9}, {3.7639150725638027`*^9, 
   3.7639150907581673`*^9}, {3.7639157101185684`*^9, 
   3.7639157235608377`*^9}},ExpressionUUID->"84eedbb4-ea3c-4aab-b278-\
a2c74f01c484"],

Cell["1D matrices vs \[OpenCurlyDoubleQuote]regular\[CloseCurlyDoubleQuote] \
vectors", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.4322919830895557`*^9, 3.4322919926991153`*^9}, {
   3.43240986271214*^9, 3.432409884118801*^9}, 3.432481573424904*^9, {
   3.432481650024447*^9, 3.432481651584505*^9}, {3.432488971793871*^9, 
   3.4324889887355337`*^9}, 3.4325637644577713`*^9, {3.4325876908230886`*^9, 
   3.432587690979342*^9}, {3.43265972397154*^9, 3.43265972409261*^9}, 
   3.4326643827380996`*^9, {3.432664440301705*^9, 3.4326644405048337`*^9}, {
   3.4326662098981805`*^9, 3.4326662332892547`*^9}, {3.432928083671734*^9, 
   3.432928086124953*^9}, {3.544886820682228*^9, 3.544886824506611*^9}, {
   3.608150745147316*^9, 3.6081507491373158`*^9}, {3.76096863019938*^9, 
   3.7609686569381227`*^9}, 3.760972576435296*^9, {3.7609738343912325`*^9, 
   3.7609738574032326`*^9}, {3.7609742674848013`*^9, 3.760974271724844*^9}, {
   3.76149017438315*^9, 3.7614901766531954`*^9}, {3.7639096536564217`*^9, 
   3.7639096590075293`*^9}},ExpressionUUID->"32641e95-bd35-419c-a13e-\
721fff65c1fe"],

Cell[TextData[{
 "It may seem like one-dimensional matrices are the same as vectors, but that\
\[CloseCurlyQuote]s not quite true.  Evaluate the examples below, which \
contain a \[OpenCurlyDoubleQuote]regular vector\[CloseCurlyDoubleQuote] v, \
and the 3x1 and 1x3 matrices A and B, respectively. Elements like A and B are \
often called \[OpenCurlyDoubleQuote]column vectors\[CloseCurlyDoubleQuote] \
and \[OpenCurlyDoubleQuote]row vectors\[CloseCurlyDoubleQuote], but ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " treats them a little differently than just \[OpenCurlyDoubleQuote]regular \
vectors\[CloseCurlyDoubleQuote] such as {1,2,3}. Specifically, these column \
and row vectors are 2D matrices whereas a regular vector is a 1D list of \
three elements, and you don\[CloseCurlyQuote]t have to specify whether it is \
a row or column vector. Most of the time Mathematica will figure out how to \
handle a \[OpenCurlyDoubleQuote]regular vector\[CloseCurlyDoubleQuote] as \
shown in the multiplication examples which follow."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.4326462223515873`*^9, 3.432646292980694*^9}, {
   3.432663821914832*^9, 3.432663834040065*^9}, {3.4326638678532143`*^9, 
   3.4326638682907224`*^9}, {3.4778516545943027`*^9, 3.477851655875577*^9}, {
   3.4778517454085464`*^9, 3.4778517485336065`*^9}, {3.477852724849226*^9, 
   3.477852724989854*^9}, {3.501282000243249*^9, 3.5012820008682327`*^9}, 
   3.544887031786337*^9, {3.5448870650996675`*^9, 3.544887170943251*^9}, {
   3.5448872124414005`*^9, 3.5448872522343793`*^9}, {3.5453982048846807`*^9, 
   3.5453982443736296`*^9}, {3.5620133854128056`*^9, 3.562013418354806*^9}, {
   3.5620134514648056`*^9, 3.562013462000806*^9}, {3.600188182939805*^9, 
   3.6001882098604965`*^9}, {3.608150690550316*^9, 3.6081507106343155`*^9}, {
   3.608292618486991*^9, 3.608292645687711*^9}, {3.6346646480331936`*^9, 
   3.6346646892031937`*^9}, {3.634664742732194*^9, 3.634664790576194*^9}, 
   3.760972576435296*^9, {3.760974789673849*^9, 3.7609748039461346`*^9}, {
   3.7609749181564193`*^9, 3.7609749209174747`*^9}, {3.7639144526463923`*^9, 
   3.7639145056994543`*^9}, 3.7639148982733145`*^9, {3.7639226450032*^9, 
   3.7639226769108386`*^9}, {3.763979237490177*^9, 3.7639792474742413`*^9}, {
   3.763979457694473*^9, 
   3.7639794725623684`*^9}},ExpressionUUID->"b99ca875-816a-453e-8b64-\
1cae2ea52219"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"v", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"regular", " ", "vector"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "4", "}"}], ",", 
      RowBox[{"{", "5", "}"}], ",", 
      RowBox[{"{", "6", "}"}]}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"3", "x1", " ", "column", " ", "matrix"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "9"}], "}"}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"1", "x3", " ", "row", " ", "matrix"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"matx4", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "a", " ", "2", "x3", " ", "matrix", " ", "to", " ", "test", " ", "out", 
    " ", "the", " ", "vectors", " ", "on"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"matx5", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "d"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e", ",", "f"}], "}"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "a", " ", "3", "x2", " ", "matrix", " ", "to", " ", "test", " ", "out", 
    " ", "the", " ", "vectors", " ", "on"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{"v", ",", "A", ",", "B", ",", "matx4", ",", "matx5"}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "the", " ", "command", " ", "MatrixForm", " ", "\"\<mapped\>\"", " ", 
     "onto", " ", "A"}], ",", " ", "B", ",", " ", "v", ",", " ", 
    RowBox[{"and", " ", "matx4"}]}], " ", "*)"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.432480721834132*^9, {3.432480924668118*^9, 3.432481007270282*^9}, {
   3.4324810660841084`*^9, 3.432481127075354*^9}, {3.432481161334613*^9, 
   3.4324812532303677`*^9}, {3.432481315698172*^9, 3.4324813347764606`*^9}, {
   3.432481476999614*^9, 3.432481486186317*^9}, {3.43256337192083*^9, 
   3.4325633961017036`*^9}, 3.432563435417654*^9, {3.432645004514413*^9, 
   3.432645005408175*^9}, {3.544887181097266*^9, 3.5448872184189982`*^9}, {
   3.608154322768316*^9, 3.608154323477316*^9}, {3.608155247739316*^9, 
   3.6081553791703157`*^9}, 3.760972576435296*^9, {3.7609748117562904`*^9, 
   3.7609748568511925`*^9}, {3.763910395431429*^9, 3.763910449025502*^9}, {
   3.7639104802021265`*^9, 3.763910481002142*^9}, {3.763910536477253*^9, 
   3.763910609343711*^9}, {3.763910752689892*^9, 3.763910781474028*^9}, {
   3.763914235626047*^9, 3.763914271824772*^9}, {3.7639143614765673`*^9, 
   3.7639143638576155`*^9}, {3.7639790282938795`*^9, 
   3.7639790321158795`*^9}, {3.7639790854834795`*^9, 
   3.7639791094918795`*^9}, {3.763979324148733*^9, 3.7639793400296345`*^9}, {
   3.7639794875384645`*^9, 3.7639795287395697`*^9}, {3.7639846159333487`*^9, 
   3.7639846178677735`*^9}},ExpressionUUID->"c475b1ae-d4c8-4b12-8658-\
8b634e47f446"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"matx4", ".", "v"}], "//", "MatrixForm"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "product", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"a", "b", "c"},
        {"d", "e", "f"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], 
    TagBox[
     RowBox[{"(", "\[NoBreak]", 
      TagBox[GridBox[{
         {"1"},
         {"2"},
         {"3"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       Column], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], " ", "Mathematica", " ", "treats", " ", "the",
     " ", "vector", " ", "v", " ", "as", " ", "a", " ", "column", " ", 
    "vector"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"matx4", ".", "A"}], "//", "MatrixForm"}], 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "product", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"a", "b", "c"},
        {"d", "e", "f"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], 
    TagBox[
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"4"},
         {"5"},
         {"6"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matx4", ".", "B"}], "//", "MatrixForm", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "product", " ", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "b", "c"},
       {"d", "e", "f"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"7", "8", "9"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], " ", 
    "which", " ", "does", " ", "NOT", " ", "work"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7639097515973825`*^9, 3.7639098808059683`*^9}, {
   3.7639099294279423`*^9, 3.7639099370810995`*^9}, {3.7639105284840927`*^9, 
   3.7639105341662064`*^9}, {3.763910649921523*^9, 3.763910696600574*^9}, {
   3.7639108002604647`*^9, 3.7639108050113225`*^9}, {3.763910871508328*^9, 
   3.763910876639174*^9}, {3.7639143794309273`*^9, 3.7639144213307657`*^9}, {
   3.7639145152516456`*^9, 3.7639146140456233`*^9}, {3.7639147759338655`*^9, 
   3.7639147883371134`*^9}, 3.7639227350320015`*^9, {3.76397916548028*^9, 
   3.763979196446314*^9}, {3.7639796623085737`*^9, 3.763979664118162*^9}, {
   3.763984591300633*^9, 
   3.763984592111843*^9}},ExpressionUUID->"6200b49d-ad8b-444a-a1f7-\
63ef0129ff6b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"v", ".", "matx5"}], "//", "MatrixForm"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "product", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "2", "3"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], 
    TagBox[
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"a", "b"},
         {"c", "d"},
         {"e", "f"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      "\[NoBreak]"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], " ", "Mathematica", " ", "treats", " ", "the",
     " ", "vector", " ", "v", " ", "as", " ", "a", " ", "row", " ", 
    "vector"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", ".", "matx5"}], "//", "MatrixForm"}], 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "product", " ", 
    TagBox[
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"4"},
         {"5"},
         {"6"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"a", "b"},
         {"c", "d"},
         {"e", "f"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]], " ", "which", " ", "does", " ", "NOT", " ", 
    "work"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", ".", "matx5"}], "//", "MatrixForm", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "product", " ", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"7", "8", "9"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "b"},
       {"c", "d"},
       {"e", "f"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7639097515973825`*^9, 3.7639098808059683`*^9}, {
   3.7639099294279423`*^9, 3.7639099370810995`*^9}, {3.7639105284840927`*^9, 
   3.7639105341662064`*^9}, {3.763910649921523*^9, 3.763910696600574*^9}, {
   3.7639108002604647`*^9, 3.7639108050113225`*^9}, {3.763910871508328*^9, 
   3.763910876639174*^9}, {3.7639143794309273`*^9, 3.7639144213307657`*^9}, {
   3.7639145152516456`*^9, 3.7639146140456233`*^9}, {3.7639147759338655`*^9, 
   3.7639147883371134`*^9}, 3.7639227350320015`*^9, {3.76397916548028*^9, 
   3.763979196446314*^9}, {3.7639795549323053`*^9, 3.7639796370523353`*^9}, {
   3.7639796785792694`*^9, 3.7639797075804834`*^9}, {3.763984597431512*^9, 
   3.7639845979151177`*^9}},ExpressionUUID->"b83b49fa-af6c-452d-b5cd-\
050797891ff1"],

Cell[CellGroupData[{

Cell["How to access individual matrix elements / vector components", \
"Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.5442876748283224`*^9, 3.544287684272267*^9}, 
   3.760972576425296*^9, {3.761490727233242*^9, 3.7614907317233315`*^9}, {
   3.763915846573305*^9, 
   3.7639158475533247`*^9}},ExpressionUUID->"69ec5fc5-998c-4afe-b088-\
7a9a2eab53dc"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses ",
 StyleBox["double square brackets ",
  FontWeight->"Bold"],
 "to indicate specific list elements. (This is technically a shortcut for the \
",
 StyleBox[ButtonBox["Part",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Part"],
  FontWeight->"Bold"],
 " function.) For example: "
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.5442876897158113`*^9, 3.5442877156494045`*^9}, {
   3.5555024102283983`*^9, 3.5555024331713986`*^9}, {3.5555024894093986`*^9, 
   3.555502489411399*^9}, {3.5555025427033987`*^9, 3.5555025453013983`*^9}, {
   3.5555026194623985`*^9, 3.5555026194643984`*^9}, 3.5976926340815554`*^9, 
   3.760972576425296*^9, {3.763985730176035*^9, 3.763985731751655*^9}, 
   3.7639857967258196`*^9},ExpressionUUID->"8cebcf9b-ea24-4a60-ae2c-\
9ca7e2b42f49"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"vec", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"vec", "[", 
  RowBox[{"[", "3", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.763915917630728*^9, 
  3.763915918121738*^9}},ExpressionUUID->"60e9c5d2-02f6-46be-b5d3-\
f37127f6a51e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vec", "[", "3", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"wrong", " ", 
     RowBox[{"way", "!"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.761489855173723*^9, 
  3.761489864614912*^9}},ExpressionUUID->"251bb618-7cee-4e37-adf2-\
fb731cdf6d7e"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Things to observe:",
  FontWeight->"Bold"],
 "\n1. If you accidentally try to access a list element using single square \
brackets instead of double, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will be very confused. In the example labeled \[OpenCurlyDoubleQuote]wrong \
way\[CloseCurlyDoubleQuote], it thinks that you want to evaluate the vec ",
 StyleBox["function",
  FontSlant->"Italic"],
 " at x=3. But no such function exists, so it is unable to comply with the \
request and spits out a garbage answer. ",
 StyleBox["Be very careful to use double square brackets to refer to list \
items.",
  FontWeight->"Bold"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.544287789687807*^9, 3.544288054173253*^9}, {
   3.5442880953913746`*^9, 3.5442881336732025`*^9}, {3.544364668420518*^9, 
   3.544364681604836*^9}, {3.5555023759263983`*^9, 3.5555024058363986`*^9}, {
   3.5619874699184313`*^9, 3.5619874706705065`*^9}, {3.597692653562504*^9, 
   3.5976926541385612`*^9}, 3.760972576425296*^9, {3.7614898881713877`*^9, 
   3.7614899057157393`*^9}},ExpressionUUID->"6a63d2b2-1714-4901-9f58-\
50a5a9ce3a2e"],

Cell[TextData[{
 StyleBox["Elements of a matrix",
  FontWeight->"Bold"],
 "\nYou can refer to an individual matrix element just as you would an \
element of a list of lists.  There are actually ",
 StyleBox["two",
  FontWeight->"Bold"],
 " ways of doing this. Look at the output of these two commands: "
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7609690662193704`*^9, 3.7609691562325244`*^9}, 
   3.760972576435296*^9, {3.760973281536641*^9, 3.760973312440259*^9}, {
   3.7609733495630016`*^9, 
   3.760973364664304*^9}},ExpressionUUID->"13287b07-8bb5-42ba-ad5f-\
8356cfdd70f6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"matx1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9", ",", "10"}], "}"}]}], "}"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{
  3.7614900606818714`*^9, {3.761490827647255*^9, 
   3.7614908417685375`*^9}},ExpressionUUID->"8872258e-4757-4296-9165-\
9ec86de3b52a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"matx1", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "             ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", "picks", " ", "out", " ", "the", 
    " ", "second", " ", "of", " ", "the", " ", "three", " ", "lists", " ", 
    "of", " ", "row", " ", "elements", " ", "in", " ", "matx1"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"matx1", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], " ", "then", " ", "takes", " ", "that", 
    " ", "row", " ", "list", " ", "and", " ", "returns", " ", "the", " ", "3",
     "rd", " ", 
    RowBox[{"element", "."}]}], "  ", "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.760973320050411*^9, {3.7609733686943846`*^9, 3.760973370874428*^9}, {
   3.7614900637959347`*^9, 3.761490066600992*^9}, {3.763914929670943*^9, 
   3.7639149582865157`*^9}},ExpressionUUID->"7119a03a-9864-48e1-8b38-\
cbe2e31843eb"],

Cell["\<\
Here\[CloseCurlyQuote]s the alternative, which is a little less \
awkward-looking:\
\>", "Text",
 CellChangeTimes->{{3.760973388907789*^9, 3.760973478488557*^9}, {
   3.7614899514466686`*^9, 3.7614899555667515`*^9}, 3.7614908635519757`*^9, {
   3.7639149730508113`*^9, 3.7639149768118863`*^9}, {3.763915973833853*^9, 
   3.763915988316143*^9}},ExpressionUUID->"96e6fd78-c743-48a5-95ac-\
481cea54deba"],

Cell[BoxData[
 RowBox[{"matx1", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "3"}], "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7609690316649275`*^9, 3.7609690503539667`*^9}, 
   3.760972576435296*^9, 
   3.761490069061041*^9},ExpressionUUID->"7f30bb46-f2cc-479f-b03a-\
b1167516a5bf"],

Cell["Much nicer, and in keeping with standard matrix notation", "Text",
 CellChangeTimes->{{3.7609738115892324`*^9, 3.7609738145192327`*^9}, {
  3.7614899736791134`*^9, 
  3.7614899910084624`*^9}},ExpressionUUID->"ad7e7b22-5008-49d9-b988-\
0b5fa6b7a655"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Problem 2: Matrix elements", "Subsubsection"]], \
"Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7631083904244323`*^9, 3.7631083966309237`*^9}, {
  3.763922819230687*^9, 
  3.7639228221507454`*^9}},ExpressionUUID->"a478c14e-4d7e-4b1a-bacc-\
806b57842355"],

Cell["\<\
The command Eigensystem[M] finds the eigenvalues and eigenvectors of matrix \
M.  (More on this in a bit).  Here\[CloseCurlyQuote]s what the output looks \
like:\
\>", "Text",
 CellChangeTimes->{{3.7614937352535877`*^9, 3.761493986053626*^9}, {
   3.7614941064590654`*^9, 3.761494113729211*^9}, {3.7614941463008633`*^9, 
   3.7614941832906055`*^9}, {3.7614942173332863`*^9, 3.7614942187373157`*^9}, 
   3.763108456564433*^9, {3.763922901649337*^9, 3.7639229261238265`*^9}, {
   3.763923035169009*^9, 
   3.7639230867300415`*^9}},ExpressionUUID->"1ef6c3c2-6be5-49e3-af92-\
9d6320979684"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"M", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Eigensystem", "[", "M", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eigensystem", "[", "M", "]"}], "//", "MatrixForm", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "easier", " ", "to", " ", "see", " ", "what", " ", "this", " ", "matrix", 
    " ", "looks", " ", "like", " ", "if", " ", "you", " ", "put", " ", "it", 
    " ", "in", " ", "standard", " ", "form"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7639229318949423`*^9, 3.7639230242267904`*^9}, {
  3.7639231020553484`*^9, 3.7639231481362705`*^9}, {3.763979770650879*^9, 
  3.7639797744416547`*^9}},ExpressionUUID->"49a6cfc3-eb12-4a1c-a988-\
ae7234e10523"],

Cell["\<\
The two elements (4 and -1) in the first row are the two eigenvalues of M.  \
The two vectors {1,1} and {-3,2} in the second row are the eigenvectors \
associated with each of the eigenvalues.

a) Use the Part function (double brackets [[ ]]) to pull out the second \
eigenvalue (i.e. -1) from the matrix returned by Eigensystem[M]
b) Use double brackets to pull out the second eigenvector (i.e. {-3,2}) from \
the matrix returned by Eigensystem[M] 
c) Use double brackets to pull out the first element (i.e. -3) of the second \
eigenvector.  Hint: There are several ways to do this, including an extension \
of the \[OpenCurlyDoubleQuote]alternative\[CloseCurlyDoubleQuote] method \
described above.  See if you can do this with just ONE set of double-brackets\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.7639231740397887`*^9, 3.7639233005483212`*^9}, {
  3.7639233350280113`*^9, 3.763923524241799*^9}, {3.763923563969594*^9, 
  3.7639235799929147`*^9}, {3.76398467688533*^9, 3.7639846838274193`*^9}, {
  3.7639856898963184`*^9, 
  3.7639857199423037`*^9}},ExpressionUUID->"ee1efb28-9431-4466-b1a3-\
f9149d936e85"],

Cell[CellGroupData[{

Cell["Matrix multiplication, dot product", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.4322919830895557`*^9, 3.4322919926991153`*^9}, {
   3.43240986271214*^9, 3.432409884118801*^9}, 3.432481573424904*^9, {
   3.432481650024447*^9, 3.432481651584505*^9}, {3.432488971793871*^9, 
   3.4324889887355337`*^9}, 3.4325637644577713`*^9, {3.4325876908230886`*^9, 
   3.432587690979342*^9}, {3.43265972397154*^9, 3.43265972409261*^9}, 
   3.4326643827380996`*^9, {3.432664440301705*^9, 3.4326644405048337`*^9}, {
   3.4326662098981805`*^9, 3.4326662332892547`*^9}, {3.432928083671734*^9, 
   3.432928086124953*^9}, {3.544886820682228*^9, 3.544886824506611*^9}, 
   3.760972576435296*^9, {3.7639799132027655`*^9, 
   3.7639799153555555`*^9}},ExpressionUUID->"49f63e08-43b9-480f-baf4-\
9577dff980e7"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s matrix multiplication operation is called ",
 StyleBox[ButtonBox["Dot",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Dot"],
  FontWeight->"Bold"],
 " (shortcut \".\").  This is the same operator used for vector dot products. \
\n\nIn order for two matrices to be multipliable, the number of columns in \
the first matrix must equal the number of rows in the second matrix.  If, for \
example, ",
 StyleBox["A",
  FontWeight->"Bold"],
 " is an m\[Cross]n matrix and ",
 StyleBox["B",
  FontWeight->"Bold"],
 " is an n\[Cross]p matrix, then ",
 StyleBox["A.B",
  FontWeight->"Bold"],
 " will be an m\[Cross]p matrix. "
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.43256301888938*^9, 3.432563108923813*^9}, {
   3.432563262210495*^9, 3.432563331810775*^9}, {3.4325634673929167`*^9, 
   3.432563470111743*^9}, {3.432644780277296*^9, 3.432644870704837*^9}, {
   3.432644920720172*^9, 3.4326449766143303`*^9}, {3.432645510510445*^9, 
   3.432645553607215*^9}, 3.439673017517312*^9, {3.439673226174897*^9, 
   3.4396732324718127`*^9}, {3.477851659188141*^9, 3.4778516606881695`*^9}, {
   3.477851690813748*^9, 3.4778517568150153`*^9}, {3.477852727036768*^9, 
   3.4778527301305776`*^9}, {3.4840848566786013`*^9, 3.484084863975523*^9}, {
   3.501281953525695*^9, 3.501281968056573*^9}, {3.5448868256837287`*^9, 
   3.5448868718853483`*^9}, {3.544886977703929*^9, 3.544886995934752*^9}, {
   3.5449774892586255`*^9, 3.5449775851722155`*^9}, {3.545398098137007*^9, 
   3.545398157499943*^9}, {3.5620133195688057`*^9, 3.562013331967806*^9}, 
   3.6001880582363358`*^9, {3.6081504913043156`*^9, 3.6081505215733156`*^9}, {
   3.6081505721983156`*^9, 3.608150641859316*^9}, 3.6081510023443155`*^9, {
   3.6081510447033157`*^9, 3.6081510466703157`*^9}, {3.6346643914431934`*^9, 
   3.634664392515194*^9}, 3.760972576435296*^9, {3.7609741609737353`*^9, 
   3.7609741633737593`*^9}, {3.7639798317088876`*^9, 
   3.7639798498983707`*^9}},ExpressionUUID->"0d7c23de-211d-44ab-bed4-\
8551e1d442bc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "6"}], "}"}]}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"a", " ", "3", "x2", " ", "matrix"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", " ", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"8", ",", "7", ",", "6", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
  "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"a", " ", "2", "x4", " ", "matrix"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", ".", "B"}], " ", "//", "MatrixForm"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"a", " ", "3", "x4", " ", "matrix"}], " ", "*)"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"also", ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"it", "'"}], "s", " ", "OK", " ", "to", " ", "do", " ", 
      "MaxtrixForm", " ", "like", " ", "this", " ", "here", " ", 
      RowBox[{"there", "'"}], "s", " ", "no", " ", "new", " ", "matrix", " ", 
      "being", " ", "defined", " ", "at", " ", "the", " ", "same", " ", 
      RowBox[{"time", ".", " ", "If"}], " ", "you", " ", "wanted", " ", "to", 
      " ", "define", " ", "C"}], "=", 
     RowBox[{"A", ".", "B"}]}], ",", " ", 
    RowBox[{
     RowBox[{"then", " ", "you", " ", 
      RowBox[{"couldn", "'"}], "t", " ", "use", " ", "the"}], " ", "//", 
     RowBox[{
     "MatrixForm", " ", "bit", " ", "on", " ", "the", " ", "same", " ", 
      "line"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", ".", "A"}], " ", "//", " ", "MatrixForm", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"doesn", "'"}], "t", " ", "work"}], ";", " ", 
    RowBox[{"wrong", " ", "dimensions"}]}], " ", "*)"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.432480721834132*^9, {3.432480924668118*^9, 3.432481045057135*^9}, {
   3.432481083754567*^9, 3.432481096858004*^9}, {3.432481345620285*^9, 
   3.4324813584335938`*^9}, {3.432563366160412*^9, 3.432563386349619*^9}, 
   3.4325634310654583`*^9, {3.432645979533834*^9, 3.43264600569566*^9}, {
   3.432647018997353*^9, 3.432647049804057*^9}, {3.5620133557288055`*^9, 
   3.5620133635288057`*^9}, {3.600188090124524*^9, 3.600188090491561*^9}, {
   3.6081512151413155`*^9, 3.6081512744343157`*^9}, {3.6082924328984337`*^9, 
   3.6082924624993935`*^9}, {3.634664409397194*^9, 3.6346644820871935`*^9}, 
   3.760972576435296*^9, {3.76097419644709*^9, 
   3.760974238641513*^9}},ExpressionUUID->"fca5f214-6038-4086-b19d-\
1155000778ea"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Element-wise operations: Watch out for * instead of . mistakes!!",
  FontWeight->"Bold"],
 "\nIt\[CloseCurlyQuote]s easy to forget you need to use \
\[OpenCurlyDoubleQuote].\[CloseCurlyDoubleQuote] when multiplying matrices.  \
If the matrices don\[CloseCurlyQuote]t have the same dimensions this will \
lead to an error message:"
}], "Text",
 CellChangeTimes->{{3.7609753708565655`*^9, 3.7609754219165936`*^9}, {
  3.760975797587113*^9, 3.7609758072483063`*^9}, {3.760976180009777*^9, 
  3.7609761868999147`*^9}},ExpressionUUID->"4ac1d7eb-e897-4c9e-afa4-\
1fb413ab2d06"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", ".", "B"}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "*", "B"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.760975428847732*^9, 
  3.7609754424600043`*^9}},ExpressionUUID->"4e98fe62-1a8c-4671-bdf6-\
9b49caa510b6"],

Cell["\<\
But if the matrices have the same dimensions you can get into trouble.  \
Consider this example:\
\>", "Text",
 CellChangeTimes->{{3.760975467252663*^9, 
  3.760975488744523*^9}},ExpressionUUID->"bb950d40-6304-4bc3-9d13-\
564401116226"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", " ", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", " ", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7609749888328333`*^9, 3.760974991753892*^9}, {
  3.7609750482650466`*^9, 3.7609750618573217`*^9}, {3.7609751194634824`*^9, 
  3.760975245147997*^9}, {3.760975286465828*^9, 3.760975342512998*^9}, {
  3.760975535619398*^9, 3.7609755577232823`*^9}, {3.760975631548237*^9, 
  3.760975666782647*^9}},ExpressionUUID->"2b0ba984-69a2-4691-88f0-\
4a27ba4de364"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F", ".", "G"}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "*", "G"}], "//", "MatrixForm", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "incorrect", " ", "format", " ", "for", " ", "matrix", " ", 
    "multiplication"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7609749888328333`*^9, 3.760974991753892*^9}, {
  3.7609750482650466`*^9, 3.7609750618573217`*^9}, {3.7609751194634824`*^9, 
  3.760975245147997*^9}, {3.760975286465828*^9, 3.760975342512998*^9}, {
  3.7609754968448467`*^9, 3.7609755100963774`*^9}, {3.7609755843973494`*^9, 
  3.760975586128419*^9}},ExpressionUUID->"3902f50c-3aa1-487d-8a3a-\
384cb17a59b5"],

Cell[TextData[{
 "You can see that when you use \[OpenCurlyDoubleQuote]*\
\[CloseCurlyDoubleQuote] mathematica multiplies ",
 StyleBox["individual matrix elements",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " together rather than mutiiplying the matrices themselves together.  Be \
alert to this!\nOther operations which work in this way on individual \
elements: +, -, ^\nThese are efficient ways to manipulate matrices if you are \
aware of what they are doing"
}], "Text",
 CellChangeTimes->{{3.7609756943287497`*^9, 3.7609757861858845`*^9}, {
  3.7609762012732024`*^9, 3.760976284549868*^9}, {3.7614902476516223`*^9, 
  3.761490247871627*^9}},ExpressionUUID->"e780e70a-f965-4403-bc83-\
43e19c117b46"],

Cell["Here\[CloseCurlyQuote]s an example of the vector dot product.", "Text",
 CellChangeTimes->{{3.7639799432641344`*^9, 
  3.763979953965803*^9}},ExpressionUUID->"a5dc43e0-fffa-42ee-9b86-\
cf15e1ced08d"],

Cell[BoxData[{
 RowBox[{"v1", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"v2", "=", 
  RowBox[{"{", 
   RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v1", ".", "v2"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "dot", " ", "product"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"v2", ".", "v1", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "dot", " ", "product", " ", "again"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7639799576318264`*^9, 3.763979982842588*^9}, {
  3.7639801663163643`*^9, 3.7639801827286696`*^9}, {3.7639847242319374`*^9, 
  3.7639847267591696`*^9}},ExpressionUUID->"2eac4b30-850c-4086-b06c-\
cd3c91df76dc"],

Cell["\<\
Things to notice: this is another example of the way Mathematica treats a \
\[OpenCurlyDoubleQuote]regular vector\[CloseCurlyDoubleQuote] - a simple list \
- differently from a 1D column or row matrix (for which order definitely \
matters)\
\>", "Text",
 CellChangeTimes->{{3.7639800076623473`*^9, 3.7639800628087006`*^9}, {
  3.763980140373398*^9, 
  3.763980163305545*^9}},ExpressionUUID->"cfcb9bdb-c128-48ee-b91d-\
54c1c0cd2a09"],

Cell["Matrix and vector manipulation", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.4322919830895557`*^9, 3.4322919926991153`*^9}, {
   3.43240986271214*^9, 3.432409884118801*^9}, 3.432481573424904*^9, {
   3.432481650024447*^9, 3.432481651584505*^9}, {3.432488971793871*^9, 
   3.4324889887355337`*^9}, 3.4325637644577713`*^9, {3.4325876908230886`*^9, 
   3.432587690979342*^9}, {3.43265972397154*^9, 3.43265972409261*^9}, 
   3.4326643827380996`*^9, {3.432664440301705*^9, 3.4326644405048337`*^9}, {
   3.4326662098981805`*^9, 3.4326662332892547`*^9}, {3.432928083671734*^9, 
   3.432928086124953*^9}, {3.544886820682228*^9, 3.544886824506611*^9}, 
   3.760972576435296*^9, {3.7609758413509884`*^9, 3.760975843532032*^9}, {
   3.76398019216673*^9, 
   3.763980194319544*^9}},ExpressionUUID->"46c287ce-b6da-4b3f-9515-\
2cb658758dfb"],

Cell[TextData[{
 "Mathematica contains all of the vector and matrix manipulation functions \
you would expect to find.  Some of the most useful are:\nMatrices\n\t\
Transpose[m]\t\t\ttranspose ",
 Cell[BoxData[
  SuperscriptBox[
   StyleBox["m", "TI"], "\[Transpose]"]],ExpressionUUID->
  "d430dcfe-ac90-4245-947e-19b3377ff193"],
 "\n\tConjugateTranspose[m]\tconjugate transpose ",
 Cell[BoxData[
  SuperscriptBox[
   StyleBox["m", "TI"], "\[ConjugateTranspose]"]],ExpressionUUID->
  "a72e1288-cd99-4ed0-b0a1-65d800c135b4"],
 " (Hermitian conjugate)\n\tInverse[m]\t\t\tmatrix inverse\n\tDet[m]\t\t\t\t\
determinant\n\tMinors[m]\t\t\tmatrix of minors\n\tMinors[m,k]\t\t\t",
 Cell[BoxData[
  StyleBox["k", "TI"]], "InlineFormula",ExpressionUUID->
  "d5735411-5626-40b2-810a-e816f7bbab50"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Null]", "th"], TraditionalForm]],ExpressionUUID->
  "de433634-bb5c-437a-b8eb-c42316796e53"],
 " minors\n\tTr[m]\t\t\t\ttrace\n\tMatrixRank[m]\t\trank of matrix\n\t\
Eigenvectors[",
 StyleBox["m",
  FontSlant->"Italic"],
 "]\t\tlist of eigenvectors\n\tEigenvalues[",
 StyleBox["m",
  FontSlant->"Italic"],
 "]\t\tlist of eigenvalues (not necessarily in same order as eigenvectors)\n\t\
Eigensystem[",
 StyleBox["m",
  FontSlant->"Italic"],
 "]\t\teigenvectors & their associated eigenvalues\n\tRowReduce[",
 StyleBox["m",
  FontSlant->"Italic"],
 "]\t\tthe row reduced form of ",
 StyleBox["m",
  FontSlant->"Italic"],
 "\nVectors\n\tDot (.)\t\t\t\tdot product.  Use a period for the dot.\n\t\
Cross (\[Cross]) \t\t\tcross product.  Enter using ",
 StyleBox["Esc",
  FontSlant->"Italic"],
 " cross ",
 StyleBox["Esc",
  FontSlant->"Italic"],
 "\n\tNorm[v]\t\t\tgives the norm of a vector (its length), complex number \
(its absolute value), or matrix\n\tDiv[v], Grad[v], Curl[v]\tthe divergence, \
gradient, curl\n\tNormalize[v]\t\t\tthe unit vector in the direction of v"
}], "Text",
 CellChangeTimes->{{3.760975849533152*^9, 3.7609758951000643`*^9}, {
   3.7609759402569757`*^9, 3.7609759744316597`*^9}, {3.760976065251478*^9, 
   3.760976067402521*^9}, {3.7609764444980683`*^9, 3.760976518805555*^9}, {
   3.7609765911230016`*^9, 3.7609765911230016`*^9}, 3.7609766426980333`*^9, {
   3.7631027424928613`*^9, 3.76310307090065*^9}, {3.76310314231079*^9, 
   3.763103168819441*^9}, {3.7631033936029167`*^9, 3.763103487538309*^9}, {
   3.7639151357860684`*^9, 3.7639151774159017`*^9}, {3.7639153043474445`*^9, 
   3.763915345627271*^9}, {3.7639153792229433`*^9, 
   3.763915508201525*^9}},ExpressionUUID->"6414e6a7-583c-4722-9ec9-\
f6cfc9cd83cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Problem 3: Determinants", "Subsubsection"]], \
"Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7631083904244323`*^9, 3.7631083966309237`*^9}, 
   3.763985505702757*^9},ExpressionUUID->"e0ba72a5-0249-4b95-9707-\
8dfa42b66ccd"],

Cell[TextData[{
 "(3.3.2 from HW#7) Find the determinant of:\n\t",
 Cell[BoxData[
  FormBox[
   TagBox[
    RowBox[{"(", GridBox[{
       {"5", "17", "3"},
       {"2", "4", 
        RowBox[{"\[Minus]", "3"}]},
       {"11", "0", "2"}
      }], ")"}],
    "MathMLPresentationTag",
    AutoDelete->True], TraditionalForm]],ExpressionUUID->
  "85ff5b5a-ae42-4f41-a2e9-a766b16c9884"]
}], "Text",
 CellChangeTimes->{{3.7614937352535877`*^9, 3.761493986053626*^9}, {
   3.7614941064590654`*^9, 3.761494113729211*^9}, {3.7614941463008633`*^9, 
   3.7614941832906055`*^9}, {3.7614942173332863`*^9, 3.7614942187373157`*^9}, 
   3.763108456564433*^9},ExpressionUUID->"e73727fb-dd11-4356-8e1a-\
c7397d5262ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inverting matrices to solve systems of linear equations", "Subsection",
 CellChangeTimes->{{3.4322913386865587`*^9, 3.432291347014843*^9}, {
   3.4322914131723633`*^9, 3.4322914151880274`*^9}, 3.432470192010652*^9, {
   3.432471282219102*^9, 3.432471283576335*^9}, 3.432480755039879*^9, {
   3.432480793555401*^9, 3.4324808120161247`*^9}, 3.432480854859672*^9, {
   3.43248165598464*^9, 3.4324816571925917`*^9}, 3.4325629132540216`*^9, 
   3.4325877117453656`*^9, {3.4325880147980595`*^9, 3.432588014938687*^9}, 
   3.4326596846686373`*^9, {3.4329281028130937`*^9, 3.4329281279390583`*^9}, {
   3.5448994337758827`*^9, 3.5448994383118825`*^9}, {3.5620157032408056`*^9, 
   3.5620157141108055`*^9}, 3.760972576435296*^9, 3.7631085599161935`*^9, {
   3.763916315617695*^9, 
   3.7639163274499316`*^9}},ExpressionUUID->"8c8402a5-5c0c-44b7-9142-\
87eb62f1b9ef"],

Cell[TextData[{
 "A vitally important application of matrices is to solve systems of linear \
equations. For example, consider these simulataneous equations: \n2x + 2y + \
3z = 4\n3x + 4y - 5z = 6\n2x - 2y + z = 1\n\nThey can be written in this \
equivalent matrix form:\nMr = k\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"2", "2", "3"},
      {"3", "4", 
       RowBox[{"-", "5"}]},
      {"2", 
       RowBox[{"-", "2"}], "1"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "2c670478-98d3-4e93-9c19-2a643c0fd26a"],
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"x"},
      {"y"},
      {"z"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "60e8bee1-502b-46ef-9b2d-aa2805542ee9"],
 "=",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"4"},
      {"6"},
      {"1"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "e40f6193-9837-4510-a763-faad8f84f1eb"],
 "\n\nWritten in matrix form, and with a nice program such as ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " around to do the matrix inversion, the solution is easily obtained by \
multiplying both sides by the inverse of the matrix: \n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["M", 
      RowBox[{"-", "1"}]], "Mr"}], " ", "=", " ", 
    RowBox[{
     SuperscriptBox["M", 
      RowBox[{"-", "1"}]], "k"}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"r", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["M", 
      RowBox[{"-", "1"}]], "k"}]}], TraditionalForm]}],ExpressionUUID->
  "576fdee0-329a-47c3-b3cd-58a3de1413ed"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"x"},
      {"y"},
      {"z"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "ccabe7ea-8732-4519-8caa-4a2ab377106e"],
 " = Inverse",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"2", "2", "3"},
      {"3", "4", 
       RowBox[{"-", "5"}]},
      {"2", 
       RowBox[{"-", "2"}], "1"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "25486218-41d5-46d9-be33-dd726574a0d8"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{".", "  ", 
    RowBox[{"(", GridBox[{
       {"4"},
       {"6"},
       {"1"}
      }], ")"}]}], TraditionalForm]],ExpressionUUID->
  "477c1ef7-d91b-45a2-af58-5cff2580c59e"]
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448999689258823`*^9}, {
   3.556889793517864*^9, 3.556889836726185*^9}, 3.7609725764452963`*^9, {
   3.7609767598064737`*^9, 3.7609769300878906`*^9}, 3.7631082103833833`*^9, 
   3.7631085599161935`*^9, 
   3.763916373990863*^9},ExpressionUUID->"0802a587-0388-438c-9b4e-\
aba45f96c280"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", 
       RowBox[{"-", "5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"M", " ", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6", ",", "1"}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "using", " ", "a", " ", "regular", " ", "vector", " ", "instead", " ", 
    "of", " ", "a", " ", "3", "x1", " ", "column", " ", "vector"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"k", " ", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.5448999752758827`*^9, 3.5449000818968825`*^9}, {
   3.6082926804581876`*^9, 3.6082928344635863`*^9}, {3.6346649021551933`*^9, 
   3.6346649094331937`*^9}, 3.7609725764452963`*^9, {3.7609769434391575`*^9, 
   3.760976952399337*^9}, {3.7609770098754864`*^9, 3.7609770108755064`*^9}, 
   3.7631085599161935`*^9, {3.763109345092975*^9, 3.763109357374277*^9}, {
   3.763916586024108*^9, 
   3.763916590475197*^9}},ExpressionUUID->"06fafd42-8eab-4e29-96b6-\
e4827ad21057"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{
    RowBox[{"Inverse", "[", "M", "]"}], ".", " ", "k"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", " ", "//", "MatrixForm"}], " ", "//", 
  RowBox[{"N", "  ", 
   RowBox[{"(*", 
    RowBox[{" ", 
     RowBox[{
      RowBox[{"show", " ", "r", " ", "in", " ", "standard", " ", "form"}], 
      ",", " ", 
      RowBox[{"evaluate", " ", "numerically", " ", "8"}]}], 
     ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.763916625964907*^9, 
  3.7639166450482893`*^9}},ExpressionUUID->"024beb72-2883-4106-85dd-\
b34c0baf5613"],

Cell[TextData[{
 StyleBox["Notice",
  FontWeight->"Bold"],
 ": In Mathematica the inverse of a matrix ",
 StyleBox["M",
  FontWeight->"Bold"],
 " is *not* ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["M", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "6544ebf4-52af-448a-96b2-29a2c15f8b88"],
 ".  It\[CloseCurlyQuote]s ",
 StyleBox["Inverse[M]",
  FontWeight->"Bold"],
 " \n\nThe solution to the three simultaneous equations above is x = 1.175, y \
= 0.7125, and z = 0.075.  In this particular case, the ",
 StyleBox["Solve ",
  FontWeight->"Bold"],
 "command also could have been used to solve the system of equations, but the \
technique of inverting matrices to solve systems of equations is very \
generally applicable and one you should know."
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448999689258823`*^9}, {
   3.5449000962058825`*^9, 3.5449001386658826`*^9}, {3.5449001690328827`*^9, 
   3.5449001840468826`*^9}, {3.5449003057048826`*^9, 
   3.5449003143028827`*^9}, {3.556889869040416*^9, 3.55688988958447*^9}, {
   3.6001884263801465`*^9, 3.6001884422837367`*^9}, 3.7609725764452963`*^9, {
   3.760976993262154*^9, 3.7609770562804146`*^9}, 3.7614910235321817`*^9, 
   3.7631085599161935`*^9},ExpressionUUID->"2d3ad531-c46f-488c-83c8-\
51acf501da51"],

Cell[CellGroupData[{

Cell["Problem 4: matrix inversion", "Subsubsection",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448994860368824`*^9}, {
   3.5449001887908826`*^9, 3.5449001984948826`*^9}, {3.544900323174883*^9, 
   3.5449003297118826`*^9}, {3.545420930038125*^9, 3.5454209301821394`*^9}, {
   3.5568366512698727`*^9, 3.5568366514998727`*^9}, {3.562015777698806*^9, 
   3.5620157777548056`*^9}, 3.6081504745853157`*^9, 3.7609725764452963`*^9, 
   3.7631085599161935`*^9, {3.763108843089053*^9, 3.763108852556796*^9}, 
   3.763916655940507*^9, 
   3.7639855160456896`*^9},ExpressionUUID->"6d2168fe-c464-4911-95cd-\
ffea6c509737"],

Cell[TextData[{
 "(3.2.12 from HW 7)  a) Set up the following set of simultaneous equations \
in the form ",
 StyleBox["M.r",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " = ",
 StyleBox["k",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", and solve for ",
 StyleBox["r",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " (i.e. the vector whose components are the values of x, y, and z) using \
matrix inversion as in the example above. b) check your answer by multiplying \
the matrix ",
 StyleBox["M",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " by the vector ",
 StyleBox["r",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " and formatting using MatrixForm to see that it gives you ",
 StyleBox["k",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ".\n\t2x + 5y + 1 = 2\n\tx + y + 2z = 1\n\tx + 5z = 3"
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448994860368824`*^9}, {
   3.5449001887908826`*^9, 3.5449001984948826`*^9}, {3.544900323174883*^9, 
   3.5449004720538826`*^9}, {3.5449007029598827`*^9, 
   3.5449007104138823`*^9}, {3.5449632964424424`*^9, 3.544963411985687*^9}, {
   3.5568899222187333`*^9, 3.5568899804275537`*^9}, {3.562015743053806*^9, 
   3.562015744118806*^9}, {3.600188768069312*^9, 3.600188769677473*^9}, {
   3.608155661030316*^9, 3.6081557001273155`*^9}, {3.6346668115871935`*^9, 
   3.6346668916301937`*^9}, {3.6346671395491934`*^9, 3.634667236647194*^9}, {
   3.634667362741194*^9, 3.6346674588151937`*^9}, {3.634672848189415*^9, 
   3.6346728668591*^9}, 3.7609725764452963`*^9, 3.7631085599161935`*^9, {
   3.763108682339187*^9, 3.7631088268363533`*^9}, {3.7631090589886703`*^9, 
   3.7631090726688175`*^9}, {3.7631091098281593`*^9, 3.76310915687514*^9}, {
   3.7631092149993353`*^9, 3.7631092917548914`*^9}, {3.7631094446877127`*^9, 
   3.7631095182251115`*^9}, 3.763923653518386*^9, 
   3.763985540631605*^9},ExpressionUUID->"7676ea0b-58a0-4223-abb3-\
9298d11fd001"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Eigenvalues and eigenvectors", "Section",
 CellChangeTimes->{{3.608155456228316*^9, 3.608155462498316*^9}, {
   3.608292935177657*^9, 3.608292936649804*^9}, 3.7609725764452963`*^9, 
   3.7631085599161935`*^9, {3.7639174696594257`*^9, 3.7639174772705784`*^9}, {
   3.763918563286324*^9, 
   3.7639185634563274`*^9}},ExpressionUUID->"ba16fad8-3799-4481-b8b7-\
35f2cf54ac0d"],

Cell[TextData[{
 "The functions ",
 StyleBox[ButtonBox["Eigenvalues",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Eigenvalues"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["Eigenvectors",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Eigenvectors"],
  FontWeight->"Bold"],
 " give you the eigenvalues and eigenvectors of a matrix. That is, they give \
you the only possible numbers and vectors which are solutions of the \
\[OpenCurlyDoubleQuote]eigenvalue equation\[CloseCurlyDoubleQuote]  ",
 StyleBox["M.r",
  FontWeight->"Bold"],
 " = \[Lambda] ",
 StyleBox["r",
  FontWeight->"Bold"],
 ", where \[Lambda] is a number, ",
 StyleBox["r",
  FontWeight->"Bold"],
 " is a generalized \[OpenCurlyDoubleQuote]vector\[CloseCurlyDoubleQuote] \
(i.e. not necessarily representing 3D space), and ",
 StyleBox["M ",
  FontWeight->"Bold"],
 "is the matrix. The matrix must be square. There are the same number of \
eigenvalues and eigenvectors as there are rows (or columns) of the matrix, \
although some eigenvalues could be repeated. The solutions are sometimes \
written as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "1"], TraditionalForm]],ExpressionUUID->
  "028b2137-369c-4059-9b26-fdf03d0ef0f1"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "2"], TraditionalForm]],ExpressionUUID->
  "f002b415-e7c7-4632-a03a-e1502f9325e0"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "3"], TraditionalForm]],ExpressionUUID->
  "a192f388-e10c-49be-ba88-b933d02a34cf"],
 ", ..., and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["r",
     FontWeight->"Bold"], "1"], TraditionalForm]],ExpressionUUID->
  "de60d38e-32c0-4f2e-9df4-475c9e8933ad"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["r",
     FontWeight->"Bold"], "2"], TraditionalForm]],ExpressionUUID->
  "72ce1ece-4ed1-43d9-ac54-2ad7b1bb450c"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["r",
     FontWeight->"Bold"], "3"], TraditionalForm]],ExpressionUUID->
  "51107a19-d749-4c69-9eaa-b3e40adfcbc1"],
 ", ..., meaning that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["M",
      FontWeight->"Bold"], 
     StyleBox[".",
      FontWeight->"Bold"], 
     FormBox[
      SubscriptBox[
       StyleBox["r",
        FontWeight->"Bold"], "1"],
      TraditionalForm]}], "=", 
    SubscriptBox["\[Lambda]", "1"]}], TraditionalForm]],ExpressionUUID->
  "143209ed-9613-4e00-9b6a-69edb4930b0f"],
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["r",
     FontWeight->"Bold"], "1"], TraditionalForm]],ExpressionUUID->
  "3adf9b0c-5a3b-4915-b63d-c5a4f93cce0f"],
 "  and so forth. \n\nThe command ",
 StyleBox["Eigenvalues",
  FontWeight->"Bold"],
 " outputs a list containing the allowed values of the constant \[Lambda]. \n\
\nThe command ",
 StyleBox["Eigenvectors",
  FontWeight->"Bold"],
 " outputs a matrix in which each ROW contains the allowed values of the \
vector ",
 StyleBox["r",
  FontWeight->"Bold"],
 ". Eigenvectors are only defined up to a multiplicative constant. That is, \
if you have a 2x2 matrix where (1,3) is an eigenvector, then ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " might report (1,3) for the eigenvector... or (2,6), or even (1/sqrt(10), \
3/sqrt(10)). They are all equivalent.\n\nEach eigenvalue has a particular \
eigenvector associated with it. Unfortunately, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " doesn\[CloseCurlyQuote]t always sort the eigenvectors returned by the ",
 StyleBox["Eigenvectors",
  FontWeight->"Bold"],
 " command in the same order that the eigenvalues are given in results of the \
",
 StyleBox["Eigenvalues",
  FontWeight->"Bold"],
 " command. The additional function called ",
 StyleBox[ButtonBox["Eigensystem ",
  BaseStyle->"Link",
  ButtonData->"paclet://ref/Eigensystem"],
  FontWeight->"Bold"],
 "allows you to see which ones correspond to which."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.4325829104031816`*^9, 3.432583012561393*^9}, {
   3.4325836538237047`*^9, 3.432583693355714*^9}, {3.432584484933412*^9, 
   3.4325844906522717`*^9}, {3.432663986855499*^9, 3.4326639964181824`*^9}, {
   3.4396734241449146`*^9, 3.4396734254261723`*^9}, {3.5448879032994795`*^9, 
   3.5448879314262915`*^9}, {3.608292910624202*^9, 3.60829291290443*^9}, {
   3.6082950829264107`*^9, 3.6082951019513125`*^9}, {3.60829514303242*^9, 
   3.608295261571273*^9}, {3.6082952968217974`*^9, 3.608295482981412*^9}, {
   3.6082955207901926`*^9, 3.608295552943407*^9}, {3.6082955955706697`*^9, 
   3.608295598466959*^9}, {3.608295636828795*^9, 3.6082959103881483`*^9}, {
   3.608295952901399*^9, 3.608295962453354*^9}, {3.60829600541565*^9, 
   3.6082960059597044`*^9}, {3.608298276208995*^9, 3.6082983319339604`*^9}, {
   3.6346677110561934`*^9, 3.6346680390731936`*^9}, {3.6346681119801936`*^9, 
   3.6346682010281935`*^9}, {3.6346682551921935`*^9, 
   3.6346683089951935`*^9}, {3.634672697374465*^9, 3.6346726982739916`*^9}, 
   3.7609725764452963`*^9, 3.7631085599317875`*^9, {3.763109776417967*^9, 
   3.763109794248996*^9}, {3.7631098299578533`*^9, 3.7631098373055477`*^9}, {
   3.7639167420982313`*^9, 3.763916769954789*^9}, {3.7639803840947604`*^9, 
   3.7639804742945385`*^9}, 
   3.763980506791547*^9},ExpressionUUID->"43b078ec-04c7-4b0e-a377-\
a49e1f74e1b1"],

Cell[CellGroupData[{

Cell["Problem 5: Eigenvectors & eigenvalues", "Subsubsection",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448994860368824`*^9}, {
   3.5449001887908826`*^9, 3.5449001984948826`*^9}, {3.544900323174883*^9, 
   3.5449003297118826`*^9}, {3.545420930038125*^9, 3.5454209301821394`*^9}, {
   3.5568366512698727`*^9, 3.5568366514998727`*^9}, {3.562015777698806*^9, 
   3.5620157777548056`*^9}, 3.6081504745853157`*^9, 3.7609725764452963`*^9, 
   3.7631085599161935`*^9, {3.763108843089053*^9, 3.763108852556796*^9}, 
   3.763916655940507*^9, {3.763917562830291*^9, 3.7639175705524454`*^9}, {
   3.7639184087992315`*^9, 3.763918417291402*^9}, 
   3.763985548510706*^9},ExpressionUUID->"90750a7e-4bb6-405e-a741-\
d5d815edbc26"],

Cell[TextData[{
 "(3.11.15 from HW 7)  a) Define the following matrix, then display it in \
standard form:  ",
 Cell[BoxData[
  TagBox[
   RowBox[{"M", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "3", "0"},
       {"3", "2", "0"},
       {"0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]],
  CellChangeTimes->{{3.7639168380321393`*^9, 3.7639168696281395`*^9}, {
    3.763917495164936*^9, 3.7639175211624565`*^9}, 3.763917759492235*^9},
  ExpressionUUID->"f4655611-4545-4fe9-8818-80cd97d5b580"],
 "\nb) Find the eigenvalues and eigenvectors of M using the commands \
Eigenvalues and Eigenvectors.  Display the output of each, then see what it \
looks like in standard form using MatrixForm as well.\nc) Use double brackets \
after the Eigenvectors command to pick out the second of the three \
eigenvectors.  Check to see that you did this correctly - the second \
eigenvector is the second ",
 StyleBox["row",
  FontWeight->"Bold"],
 " of the matrix output by the Eigenvectors command\nd) Find the eigenvalues \
and eigenvectors of M using the command Eigensystem.  On another line, \
display the output in standard form.\ne) Use double brackets to pick out the \
second eigenvalue from the Eigensystem command, and use double brackets to \
pick out its associated eigenvector."
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448994860368824`*^9}, {
   3.5449001887908826`*^9, 3.5449001984948826`*^9}, {3.544900323174883*^9, 
   3.5449004720538826`*^9}, {3.5449007029598827`*^9, 
   3.5449007104138823`*^9}, {3.5449632964424424`*^9, 3.544963411985687*^9}, {
   3.5568899222187333`*^9, 3.5568899804275537`*^9}, {3.562015743053806*^9, 
   3.562015744118806*^9}, {3.600188768069312*^9, 3.600188769677473*^9}, {
   3.608155661030316*^9, 3.6081557001273155`*^9}, {3.6346668115871935`*^9, 
   3.6346668916301937`*^9}, {3.6346671395491934`*^9, 3.634667236647194*^9}, {
   3.634667362741194*^9, 3.6346674588151937`*^9}, {3.634672848189415*^9, 
   3.6346728668591*^9}, 3.7609725764452963`*^9, 3.7631085599161935`*^9, {
   3.763108682339187*^9, 3.7631088268363533`*^9}, {3.7631090589886703`*^9, 
   3.7631090726688175`*^9}, {3.7631091098281593`*^9, 3.76310915687514*^9}, {
   3.7631092149993353`*^9, 3.7631092917548914`*^9}, {3.7631094446877127`*^9, 
   3.7631095182251115`*^9}, {3.7639176333867035`*^9, 3.763917685647749*^9}, {
   3.7639177970699873`*^9, 3.7639178490610275`*^9}, {3.763917897791003*^9, 
   3.763917956185172*^9}, {3.7639180214714785`*^9, 3.763918128698625*^9}, {
   3.7639182370337934`*^9, 3.763918252978113*^9}, {3.7639182942169385`*^9, 
   3.763918401798092*^9}, {3.7639184454569654`*^9, 3.7639184635413275`*^9}, {
   3.763980552640482*^9, 3.7639806000972905`*^9}, {3.763980657709709*^9, 
   3.763980681952265*^9}, 3.763985554391981*^9, {3.7639858217180195`*^9, 
   3.76398583769242*^9}},ExpressionUUID->"5b252e3a-0317-446a-9b03-\
a1bd45a1ced5"],

Cell[CellGroupData[{

Cell["Coupled harmonic oscillators: normal modes", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.432477774309512*^9, 3.4324777770699263`*^9}, 
   3.432481583502447*^9, {3.432481745099237*^9, 3.432481772636252*^9}, {
   3.432488494136977*^9, 3.43248849667303*^9}, 3.432488549452938*^9, 
   3.432516055748814*^9, 3.4325165331798553`*^9, {3.432565853630549*^9, 
   3.43256585438869*^9}, {3.432571609601345*^9, 3.4325716467573566`*^9}, 
   3.4325726686883163`*^9, 3.432585157540076*^9, {3.43258769530755*^9, 
   3.4325876954638033`*^9}, {3.4329280998754807`*^9, 
   3.4329281212981787`*^9}, {3.5448981760464635`*^9, 
   3.5448981866470375`*^9}, {3.5620299456949224`*^9, 
   3.5620299649068437`*^9}, {3.6082975149415874`*^9, 3.608297515588652*^9}, 
   3.7609725764452963`*^9, 
   3.763108559947382*^9},ExpressionUUID->"75e319af-2575-45d2-9be0-\
f3717e9b82b8"],

Cell[TextData[{
 "Here is an example that may help you understand what eigenvalues and \
eigenvectors represent and why they are useful in physics.\n\nThe following \
system of two masses and three springs is an example of coupled harmonic \
oscillators. The masses happen to be equal and two of the springs happen to \
have the same spring constant, but that wouldn\[CloseCurlyQuote]t necessarily \
need to be the case.\n\n",
 Cell[BoxData[
  GraphicsBox[
   {PointSize[0.075], Thickness[0.01], 
    GeometricTransformationBox[
     LineBox[{{-8.5, 0}, {-5, 
       0}, {-4.5, 1}, {-3.5, -1}, {-2.5, 1}, {-1.5, -1}, {-0.5, 1}, {
       0.5, -1}, {1.5, 1}, {2.5, -1}, {3.5, 1}, {4.5, -1}, {5, 0}, {
       8.5, 0}}], {-17, 0}], 
    LineBox[{{-8.5, 0}, {-5, 
      0}, {-4.5, 1}, {-3.5, -1}, {-2.5, 1}, {-1.5, -1}, {-0.5, 1}, {
      0.5, -1}, {1.5, 1}, {2.5, -1}, {3.5, 1}, {4.5, -1}, {5, 0}, {8.5, 0}}], 
    GeometricTransformationBox[
     LineBox[{{-8.5, 0}, {-5, 
       0}, {-4.5, 1}, {-3.5, -1}, {-2.5, 1}, {-1.5, -1}, {-0.5, 1}, {
       0.5, -1}, {1.5, 1}, {2.5, -1}, {3.5, 1}, {4.5, -1}, {5, 0}, {
       8.5, 0}}], {17, 0}], {RectangleBox[{-26, -5}, {-25, 5}], 
     {RGBColor[0, 0, 1], PointBox[{-8.5, 0}], PointBox[{8.5, 0}]}, 
     RectangleBox[{25, -5}, {26, 5}]}, {InsetBox[
      StyleBox["\<\"\!\(\*SubscriptBox[\(k\), \(b\)]\)\"\>",
       StripOnInput->False,
       FontSize->20], {-17, 3.5}], InsetBox[
      StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"m\\\",\\nFontSlant->\\\"Italic\\\
\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], {-8, -3.5}], InsetBox[
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(k\\), \\(s\\)]\\)\"\>",
       StripOnInput->False,
       FontSize->20], {0, 3.5}], InsetBox[
      StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"m\\\",\\nFontSlant->\\\"Italic\\\
\"]\\)\"\>",
       StripOnInput->False,
       FontSize->20], {9, -3.5}], InsetBox[
      StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(k\\), \\(b\\)]\\)\"\>",
       StripOnInput->False,
       FontSize->20], {17, 3}]}},
   ImagePadding->{{0., 0.909091}, {0.909091, 0.}},
   ImageSize->{325.4545462032996, Automatic},
   PlotRange->{{-27.083333333333332`, 27.083333333333332`}, {-6.04, 6.04}},
   PlotRangePadding->Automatic]],
  Editable->False,
  CellChangeTimes->{3.432651954851845*^9},ExpressionUUID->
  "91c2d32d-2980-4bf7-9c0a-06ae4d4e670d"],
 "\n\nBefore we solve this system, let\[CloseCurlyQuote]s review the simpler \
problem of a single mass connected to a single spring - the simple harmonic \
oscillator.  Using  Newton\[CloseCurlyQuote]s Second Law: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "net"], "=", 
    RowBox[{"m", " ", "a"}]}], TraditionalForm]],ExpressionUUID->
  "8b8abd5c-25ae-41e1-b1d0-79bbcf1a4cab"],
 ", the only force acting on the mass is from the spring;  the equation \
becomes:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", 
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "x"}], 
      SuperscriptBox["dt", "2"]]}], "=", 
    RowBox[{
     RowBox[{"-", "k"}], " ", "x"}]}], TraditionalForm]],ExpressionUUID->
  "dcac22e1-8fe3-4535-ab5b-5f95e435858d"],
 "\n\nFor this you might guess a solution of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{"A", " ", 
     RowBox[{"cos", "(", "\[Omega]t", ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"ee908c82-a85a-4981-9941-6f790711d0a8"],
 ", or perhaps ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     SubscriptBox["A", " "], 
     RowBox[{"sin", "(", "\[Omega]t", ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"73db88d0-68c0-4f6b-85ac-8e06137ef932"],
 ", depending on whether it starts with some displacement or at equilibrium. \
Plugging that trial solution into the equation, it\[CloseCurlyQuote]s easy to \
show that the equation is true as long as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", "=", 
    SqrtBox[
     RowBox[{"k", "/", "m"}]]}], TraditionalForm]],ExpressionUUID->
  "ee25bd2f-97dc-4c72-93aa-491b908657ef"],
 ". Problem solved!\n\nBack to coupled masses & springs. If the middle spring \
were not present the two masses would each oscillate at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", "=", 
    SqrtBox[
     RowBox[{
      SubscriptBox["k", 
       RowBox[{" ", "b"}]], "/", "m"}]]}], TraditionalForm]],ExpressionUUID->
  "77c9a851-ff41-4a0b-914e-a426830c0393"],
 ". However, the middle spring ",
 StyleBox["couples",
  FontSlant->"Italic"],
 " the oscillations, and (as you will see) there are now ",
 StyleBox["two",
  FontSlant->"Italic"],
 " different fundamental modes of oscillation at two different frequencies.\n\
\nTo analyze the coupled system, we\[CloseCurlyQuote]ll do it like the SHO \
and start with Newton\[CloseCurlyQuote]s Second Law--but applied to each mass \
individually. Let\[CloseCurlyQuote]s call \[OpenCurlyDoubleQuote]u\
\[CloseCurlyDoubleQuote] the displacement of the left mass and \
\[OpenCurlyDoubleQuote]v\[CloseCurlyDoubleQuote] the displacement of the \
right mass. The net displacement of the center spring is then v-u. Each \
spring supplies a force according to Hooke\[CloseCurlyQuote]s Law, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "spring"], "=", "k\[CapitalDelta]x"}], 
   TraditionalForm]],ExpressionUUID->"ab8a5b9c-e117-4f87-b743-ac86c664c590"],
 ". Here are the two equations, with signs chosen very carefully so that the \
springs push/pull in the right directions:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", 
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "u"}], 
      SuperscriptBox["dt", "2"]]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["k", "s"], "(", 
      RowBox[{"v", "-", "u"}], ")"}], "-", 
     RowBox[{
      SubscriptBox["k", "b"], "u"}]}]}], TraditionalForm]],ExpressionUUID->
  "b3168cd2-9031-4b77-8176-c0a8766eb71f"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", 
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "v"}], 
      SuperscriptBox["dt", "2"]]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["k", "b"]}], "v"}], "-", 
     RowBox[{
      SubscriptBox["k", "s"], "(", 
      RowBox[{"v", "-", "u"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "6222e95a-5fbe-423a-b2c1-bff836ff08b9"],
 "\n\nGrouping terms a little differently:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", 
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "u"}], 
      SuperscriptBox["dt", "2"]]}], "=", 
    RowBox[{
     RowBox[{"u", "(", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["k", "b"]}], "-", 
       SubscriptBox["k", "s"]}], ")"}], " ", "+", " ", 
     RowBox[{"v", "(", 
      SubscriptBox["k", "s"], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "a5a38e63-43ab-4e83-ba1e-ed29b08a277a"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", 
     FractionBox[
      RowBox[{
       SuperscriptBox["d", "2"], "v"}], 
      SuperscriptBox["dt", "2"]]}], "=", 
    RowBox[{
     RowBox[{"u", "(", 
      SubscriptBox["k", "s"], ")"}], "+", 
     RowBox[{"v", "(", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["k", "b"]}], "-", 
       SubscriptBox["k", "s"]}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "4afefec2-997f-4622-b31c-09d7a0d09d38"],
 "\n\nSince a single mass on a spring oscillates sinusoidally, let\
\[CloseCurlyQuote]s make a guess and assume that each mass here will just \
oscillate back and forth in a sinusoidal fashion, both of them at the same \
\[Omega] and each with a constant amplitude (not necessarily the same). This \
assumption turns out to NOT be true in general, as you will see in the next \
section. But it is true if the starting positions of the masses are chosen \
carefully. ",
 StyleBox["The oscillation modes for which this assumption is true are called \
the \[OpenCurlyDoubleQuote]normal modes\[CloseCurlyDoubleQuote] of the \
system.",
  FontWeight->"Bold"],
 " \n\nWith this assumption, the displacements u and v will then have \
solutions of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "=", 
    RowBox[{
     SubscriptBox["u", "0"], 
     RowBox[{"cos", "(", "\[Omega]t", ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"1dccd002-d109-4b43-91eb-7e0ccb97da65"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "=", 
    RowBox[{
     SubscriptBox["v", "0"], 
     RowBox[{"cos", "(", "\[Omega]t", ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"03c71b47-5f48-4326-8808-fe867210b28c"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "0"], TraditionalForm]],ExpressionUUID->
  "8dc802d9-796b-46c2-a3bb-98f798759c5c"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]],ExpressionUUID->
  "c171a072-7c5d-4c84-aa33-5352366946e7"],
 " are the amplitudes of oscillation. As with solving the SHO, the next thing \
to do is to plug those guesses into the equations and see under what \
conditions the equations can be true.\n\nThe time derivative on the left hand \
side of the top equation becomes: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox["d", "2"], 
      SuperscriptBox["dt", "2"]], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["u", "0"], "cos\[Omega]t"}], ")"}]}], " ", "=", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[Omega]", "2"]}], 
     SubscriptBox["u", "0"], 
     RowBox[{"cos", "(", "\[Omega]t", ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"817755c4-d40e-4c2d-b842-7dfea574adb2"],
 ", and the time derivative for the bottom equation is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[Omega]", "2"]}], 
    SubscriptBox["v", "0"], 
    RowBox[{"cos", "(", "\[Omega]t", ")"}]}], TraditionalForm]],
  ExpressionUUID->"68a1448c-8098-40e3-84fb-38ad69c60c4b"],
 ". Multiplying by -1 and dividing by cos(\[Omega]t), the simultaneous \
equations now simplify to:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", " ", 
     SuperscriptBox["\[Omega]", "2"], 
     SubscriptBox["u", "0"]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["u", "0"], "(", 
      RowBox[{
       SubscriptBox["k", "b"], "+", 
       SubscriptBox["k", "s"]}], ")"}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["v", "0"], "(", 
      RowBox[{"-", 
       SubscriptBox["k", "s"]}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "e0177137-1ad0-4abc-b435-9b0140b35198"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"m", " ", 
     SuperscriptBox["\[Omega]", "2"], 
     SubscriptBox["v", "0"]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["u", "0"], "(", 
      RowBox[{"-", 
       SubscriptBox["k", "s"]}], ")"}], "+", 
     RowBox[{
      SubscriptBox["v", "0"], "(", 
      RowBox[{
       SubscriptBox["k", "b"], "+", 
       SubscriptBox["k", "s"]}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "14cf7fbe-c4ed-49c6-be1c-65d794054e95"],
 "\n\nOr, in matrix form, with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"m", " ", 
     SuperscriptBox["\[Omega]", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "7e887146-405c-4d7a-bbc5-bc691a8ae51d"],
 ":\n\n\[Lambda]",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["u", "0"]},
      {
       SubscriptBox["v", "0"]}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "767de210-4d6c-4c3c-a5bf-5f69d62a4798"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        SubscriptBox["k", "b"], "+", 
        SubscriptBox["k", "s"]}], 
       RowBox[{"-", 
        SubscriptBox["k", "s"]}]},
      {
       RowBox[{"-", 
        SubscriptBox["k", "s"]}], 
       RowBox[{
        SubscriptBox["k", "b"], "+", 
        SubscriptBox["k", "s"]}]}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "f7869a54-2e86-4b9b-a4bc-92d771f85223"],
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       SubscriptBox["u", "0"]},
      {
       SubscriptBox["v", "0"]}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "b2560a6f-2d0e-4c51-be06-4e7f2ca89df1"],
 "\n\nThis is now an ",
 StyleBox["eigenvalue equation:",
  FontWeight->"Bold"],
 "  ",
 StyleBox["M.r ",
  FontWeight->"Bold"],
 "=",
 StyleBox[" ",
  FontWeight->"Bold"],
 "\[Lambda] ",
 StyleBox["r",
  FontWeight->"Bold"],
 " , where \[Lambda] is a constant, ",
 StyleBox["r",
  FontWeight->"Bold"],
 " is a two element \[OpenCurlyDoubleQuote]vector\[CloseCurlyDoubleQuote], \
and ",
 StyleBox["M ",
  FontWeight->"Bold"],
 "is a matrix. Not just any \[Lambda] and ",
 StyleBox["r ",
  FontWeight->"Bold"],
 "can work! In fact, in this case only two \[Lambda]\[CloseCurlyQuote]s will \
yield solutions to the equation. (Remember there are the same number of \
eigenvalues as there are simultaneous equations.) Finding the eigenvalues \
will tell you what the allowed oscillation frequencies are: one allowed \
\[Omega] for each \[Lambda] (because ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", "=", 
    SqrtBox[
     RowBox[{"\[Lambda]", "/", "m"}]]}], TraditionalForm]],ExpressionUUID->
  "e01bbaf5-46a1-4ba5-af9b-f3e517b686f4"],
 "). \n\nEach eigenvalue & frequency will also have a particular ",
 StyleBox["r",
  FontWeight->"Bold"],
 " (eigenvector) associated with it. In this example ",
 StyleBox["r",
  FontWeight->"Bold"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["u", "0"], ",", 
     SubscriptBox["v", "0"]}]}], TraditionalForm]],ExpressionUUID->
  "1864f229-f460-4640-883c-d8a9cc18abec"],
 ")... that means the eigenvectors give you information about the initial \
displacements of each mass that will give rise to the allowed frequencies. As \
mentioned above, eigenvectors can always be multiplied by a constant, so if a \
particular (u,v) combination \[OpenCurlyDoubleQuote]works\
\[CloseCurlyDoubleQuote], then any constant times that (u,v) pair will also \
work and will produce the same \[Lambda]--so the eigenvectors really only \
tell you about the ",
 StyleBox["ratios",
  FontVariations->{"Underline"->True}],
 " of the amplitudes, not about their absolute values. As an example, this \
means that if you get (1,3) as an eigenvector, then for that mode of \
oscillation the second mass would always have three times the amplitude of \
the first mass. It wouldn\[CloseCurlyQuote]t matter if the amplitudes of \
oscillation were 1 cm vs. 3 cm, 2 cm vs. 6 cm, etc., all such amplitudes will \
give rise to the same frequency. Or, if you get (-1,3) as an eigenvector, \
then that means the oscillations are out of phase: the ratio of amplitudes is \
still 3 to 1, but one starts out displaced to the left of its equilibrium \
point while the other is displaced to the right.\n\nEnough discussion, let\
\[CloseCurlyQuote]s solve the problem already!"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.432564721977771*^9, 3.432564737691535*^9}, {
   3.432564792103362*^9, 3.432565255468696*^9}, {3.432571484258397*^9, 
   3.4325714845708947`*^9}, {3.432572026911174*^9, 3.43257202753617*^9}, {
   3.4325720627703195`*^9, 3.4325722249880314`*^9}, {3.4325722829720354`*^9, 
   3.432572313253091*^9}, {3.4325724511272087`*^9, 3.432572662985228*^9}, {
   3.432573774078693*^9, 3.4325737746099358`*^9}, {3.4325738285154963`*^9, 
   3.4325738355779057`*^9}, {3.4325739204361944`*^9, 3.432574004356995*^9}, {
   3.4325743731049156`*^9, 3.4325744504047585`*^9}, {3.4325850464754434`*^9, 
   3.4325850971639166`*^9}, {3.4326681888268003`*^9, 3.432668192201865*^9}, {
   3.432732296729523*^9, 3.432732355449401*^9}, {3.4329100494962735`*^9, 
   3.432910061027745*^9}, {3.439673770584632*^9, 3.439673770584632*^9}, {
   3.475426102722923*^9, 3.475426121395156*^9}, 3.501282170832631*^9, {
   3.528717933816077*^9, 3.5287179531890774`*^9}, {3.528718001143077*^9, 
   3.528718002721077*^9}, {3.5448982104953327`*^9, 3.5448982167999163`*^9}, {
   3.5448982862210016`*^9, 3.544898314159413*^9}, {3.5449007436998825`*^9, 
   3.5449007505648823`*^9}, {3.5449008195278826`*^9, 
   3.5449009980248823`*^9}, {3.5449010646598825`*^9, 
   3.5449012200298824`*^9}, {3.5449012762048826`*^9, 3.544901791313883*^9}, {
   3.5449018355108824`*^9, 3.5449023822818823`*^9}, {3.5449025011068826`*^9, 
   3.5449025056828823`*^9}, {3.544902881162883*^9, 3.5449028889138823`*^9}, {
   3.5449029485908823`*^9, 3.5449029810438824`*^9}, {3.544956121634898*^9, 
   3.5449561631610503`*^9}, {3.544956205403274*^9, 3.544956281836917*^9}, {
   3.5449566287246017`*^9, 3.5449566462143507`*^9}, {3.544956685885318*^9, 
   3.5449567079055195`*^9}, {3.5449567379845266`*^9, 3.544957100532778*^9}, {
   3.5449571393206563`*^9, 3.5449573138191047`*^9}, {3.5449573471054325`*^9, 
   3.544957347905513*^9}, {3.544957449230644*^9, 3.5449575751872387`*^9}, {
   3.5449576293096504`*^9, 3.5449576838961086`*^9}, {3.5449597415008483`*^9, 
   3.5449598071594133`*^9}, {3.544960150405735*^9, 3.5449602646371565`*^9}, 
   3.5449719002797832`*^9, {3.5449719911348677`*^9, 3.544972078373591*^9}, {
   3.5449725773084793`*^9, 3.544972578001549*^9}, {3.544976442681978*^9, 
   3.5449764715658665`*^9}, {3.5449765488195906`*^9, 3.5449765727019787`*^9}, 
   3.5620286994993153`*^9, {3.56202876304867*^9, 3.562028764611826*^9}, {
   3.5620288193573*^9, 3.5620289602273855`*^9}, {3.562029003039666*^9, 
   3.562029541262483*^9}, {3.562029640018358*^9, 3.5620297518085356`*^9}, {
   3.5620297924536*^9, 3.562029888073161*^9}, {3.5620299715075035`*^9, 
   3.562030137939145*^9}, {3.5620301799703474`*^9, 3.5620303801083593`*^9}, {
   3.5620304151338615`*^9, 3.562030759973342*^9}, {3.5620308838607297`*^9, 
   3.5620309150378475`*^9}, {3.5620309541547585`*^9, 3.562031001654508*^9}, {
   3.5620310515444965`*^9, 3.5620310571210537`*^9}, {3.562031094052747*^9, 
   3.5620311070630474`*^9}, {3.5620315571480513`*^9, 
   3.5620317040637417`*^9}, {3.562032860391363*^9, 3.5620328871210356`*^9}, {
   3.5620329269970226`*^9, 3.5620329282041435`*^9}, {3.5620329664219646`*^9, 
   3.5620329672080436`*^9}, {3.5883493129976187`*^9, 3.588349312997677*^9}, {
   3.588349345764327*^9, 3.588349345764385*^9}, {3.58902976389154*^9, 
   3.589029763891602*^9}, {3.58902979997818*^9, 3.5890298017356167`*^9}, 
   3.5976805453698053`*^9, {3.600199207339304*^9, 3.600199288064376*^9}, {
   3.600199320877657*^9, 3.600199320992668*^9}, {3.600199412232791*^9, 
   3.6001994439619637`*^9}, 3.6001995015737247`*^9, {3.600199533843951*^9, 
   3.600199534280995*^9}, {3.6001996088844547`*^9, 3.600199655265092*^9}, {
   3.6001996886444297`*^9, 3.6001997165192165`*^9}, {3.6001997697135353`*^9, 
   3.600199811178682*^9}, {3.600199845823146*^9, 3.600199850083572*^9}, {
   3.600199897217285*^9, 3.600199935993162*^9}, {3.6001999912736893`*^9, 
   3.6002000157781396`*^9}, {3.600200090525614*^9, 3.6002003446460233`*^9}, {
   3.6002003951050687`*^9, 3.600200608327389*^9}, {3.6002006628918447`*^9, 
   3.6002006630178576`*^9}, {3.6002010097105227`*^9, 3.600201022829835*^9}, {
   3.608294749731094*^9, 3.6082947514182625`*^9}, {3.6082948417262926`*^9, 
   3.608294962972416*^9}, {3.608295125002618*^9, 3.608295125176635*^9}, {
   3.608296055603668*^9, 3.608296390567161*^9}, {3.608297530489142*^9, 
   3.6082975356856613`*^9}, {3.634672912550644*^9, 3.6346729619324503`*^9}, {
   3.634672998755345*^9, 3.634673012177734*^9}, {3.6346730483650475`*^9, 
   3.6346731340519857`*^9}, {3.6346732205144677`*^9, 
   3.6346732211469097`*^9}, {3.6346732834718323`*^9, 
   3.6346732866387825`*^9}, {3.6346733282582645`*^9, 3.634673437627065*^9}, {
   3.6346734682302437`*^9, 3.634673474747198*^9}, {3.6346735624214926`*^9, 
   3.634673645330166*^9}, 3.7609725764452963`*^9, {3.7609778431144905`*^9, 
   3.7609779719804907`*^9}, {3.76097802211349*^9, 3.7609780365644903`*^9}, 
   3.7631085599629765`*^9, {3.7631109045759325`*^9, 3.763110904965933*^9}, {
   3.763747512280568*^9, 3.763747561592484*^9}, {3.7639185497720537`*^9, 
   3.7639185523221045`*^9}, {3.7639237841190004`*^9, 
   3.7639238303709264`*^9}, {3.763980730765978*^9, 3.7639807341823997`*^9}, {
   3.7639808403732805`*^9, 
   3.7639808885775895`*^9}},ExpressionUUID->"f02231bd-f15b-4864-9c79-\
c9a9afb9e54b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 6. Coupled harmonic oscillators, normal modes", "Subsection",
 CellChangeTimes->{{3.763985262742242*^9, 3.7639852701991377`*^9}, 
   3.7639855625196857`*^9},ExpressionUUID->"01a83b8f-6755-44bb-8573-\
1298a8a552b8"],

Cell[TextData[{
 "For simplicity, let's set ",
 StyleBox["m",
  FontSlant->"Italic"],
 " = 1 and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "s"], "=", 
    RowBox[{
     SubscriptBox["k", "b"], "=", "1"}]}], TraditionalForm]],ExpressionUUID->
  "c95ed1a9-1d4f-4635-8696-6c92109c805b"],
 " for some choice of units. \na) Create the matrix ",
 StyleBox["M",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " of spring constants and the vector ",
 StyleBox["r",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " containing the initial positions ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "0"], TraditionalForm]],ExpressionUUID->
  "17913425-3c6f-4e85-aaae-bd1bba0a9917"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]],ExpressionUUID->
  "e69d618f-0f30-4ea8-80c4-52823df691bf"],
 ".\nb) Use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to solve the eigenvalue equation and determine what two frequencies are \
allowed, along with what the relationship is between ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "0"], TraditionalForm]],ExpressionUUID->
  "87292655-67f1-46a6-a88d-b38c46f76611"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]],ExpressionUUID->
  "462235c2-50b8-410a-b015-d892963fd5f4"],
 " for each allowed frequency. \nc) Compare the two frequencies of the two \
modes to the frequency the masses would have if they were not coupled \
together. Qualitatively explain why the allowed frequencies are higher, \
lower, or the same as the uncoupled case.\n\nBy the way, notice how easily \
this approach could straight-forwardly be applied to a MUCH larger system of \
coupled masses and springs. You just have to be able to specify the \
appropriate \[OpenCurlyDoubleQuote]spring constant matrix\
\[CloseCurlyDoubleQuote].  The answer to that problem turns out to be very \
closely connected to the allowed vibrational modes in a solid (you can think \
of the masses as being vibrating atoms and the springs as being the bonds \
between the atoms)."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.432564721977771*^9, 3.432564737691535*^9}, {
   3.432564792103362*^9, 3.432565255468696*^9}, {3.432571484258397*^9, 
   3.4325714845708947`*^9}, {3.432572026911174*^9, 3.43257202753617*^9}, {
   3.4325720627703195`*^9, 3.4325722249880314`*^9}, {3.4325722829720354`*^9, 
   3.432572313253091*^9}, {3.4325724511272087`*^9, 3.432572662985228*^9}, {
   3.432573774078693*^9, 3.4325737746099358`*^9}, {3.4325738285154963`*^9, 
   3.4325738355779057`*^9}, {3.4325739204361944`*^9, 3.432574004356995*^9}, {
   3.4325743731049156`*^9, 3.4325744504047585`*^9}, {3.4325850464754434`*^9, 
   3.4325850971639166`*^9}, {3.4326681888268003`*^9, 3.432668192201865*^9}, {
   3.432732296729523*^9, 3.432732355449401*^9}, {3.4329100494962735`*^9, 
   3.432910061027745*^9}, {3.439673770584632*^9, 3.439673770584632*^9}, {
   3.475426102722923*^9, 3.475426121395156*^9}, 3.501282170832631*^9, {
   3.528717933816077*^9, 3.5287179531890774`*^9}, {3.528718001143077*^9, 
   3.528718002721077*^9}, {3.5448982104953327`*^9, 3.5448982167999163`*^9}, {
   3.5448982862210016`*^9, 3.544898314159413*^9}, {3.5449007436998825`*^9, 
   3.5449007505648823`*^9}, {3.5449008195278826`*^9, 
   3.5449009980248823`*^9}, {3.5449010646598825`*^9, 
   3.5449012200298824`*^9}, {3.5449012762048826`*^9, 3.544901791313883*^9}, {
   3.5449018355108824`*^9, 3.5449022199348826`*^9}, {3.5449024130718822`*^9, 
   3.544902523089883*^9}, {3.5449027436528826`*^9, 3.5449027967918825`*^9}, {
   3.5449028395978823`*^9, 3.5449028477248826`*^9}, {3.5449563228170147`*^9, 
   3.544956398861618*^9}, {3.544956562589989*^9, 3.544956576718402*^9}, {
   3.5449766214438524`*^9, 3.5449766603107386`*^9}, {3.5453979547166667`*^9, 
   3.5453980690871024`*^9}, {3.562031159242265*^9, 3.5620313748888273`*^9}, {
   3.6002006999865537`*^9, 3.6002008722487783`*^9}, {3.634675586943308*^9, 
   3.6346756233049436`*^9}, 3.7609725764452963`*^9, 3.7631085599629765`*^9, {
   3.7631101105583153`*^9, 3.7631101127735014`*^9}, {3.7631118627302523`*^9, 
   3.763111874043397*^9}, {3.7639203077435565`*^9, 
   3.7639203485753736`*^9}},ExpressionUUID->"1be5f3a3-b7c8-4045-a424-\
84ac7af628b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting the positions as a function of time", "Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.763984953652479*^9, 
  3.7639849602201633`*^9}},ExpressionUUID->"27648fed-4c47-4d4e-a366-\
84a819c1e2cb"],

Cell["\<\
If you set up the matrix M correctly above, then the oscillation frequencies \
omega1 and omega2 corresponding to the two normal modes are:\
\>", "Text",
 CellChangeTimes->{
  3.7639849715615087`*^9},ExpressionUUID->"ea938417-6b92-4fe2-b039-\
31fdd0a3d453"],

Cell[BoxData[{
 RowBox[{"omega1", "=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "/", "m"}], "]"}], "/.", 
   RowBox[{"m", "\[Rule]", "1"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"omega2", "=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "/", "m"}], "]"}], "/.", 
   RowBox[{"m", "\[Rule]", "1"}]}]}]}], "Input",
 CellChangeTimes->{{3.7639218447377224`*^9, 3.7639218725550013`*^9}, {
   3.7639219476727552`*^9, 3.7639220422057023`*^9}, 
   3.763924013896603*^9},ExpressionUUID->"4e17dcc0-afeb-42dc-be47-\
bd115589399b"],

Cell["\<\
The initial positions u0 and v0 of the two masses for each of the two normal \
modes are given by the eigenvectors.  Let\[CloseCurlyQuote]s call these \
uinit1 & vinit1 for the first mode, and uinit2 & vinit2 for the second mode.  \
\>", "Text",
 CellChangeTimes->{{3.763924025643855*^9, 3.7639241094415417`*^9}, {
  3.7639850258502045`*^9, 
  3.7639850403749905`*^9}},ExpressionUUID->"42cc71a4-fd71-4f9b-aa1f-\
96c157ef632b"],

Cell[BoxData[{
 RowBox[{"uinit1", "=", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"vinit1", "=", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"uinit2", "=", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"vinit2", "=", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7639240196927357`*^9},ExpressionUUID->"3f915198-7289-409d-8e2c-\
3daa4b5cb249"],

Cell["\<\
Finally, add in the time dependence cos[\[Omega]t] for each to get the \
time-dependent positions of the masses for each normal mode:\
\>", "Text",
 CellChangeTimes->{{3.763924117803709*^9, 
  3.7639241681437163`*^9}},ExpressionUUID->"ace38aaf-ce9b-4927-9f29-\
c29673ff05ed"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"upos1", "[", "t_", "]"}], "=", 
  RowBox[{"uinit1", "*", 
   RowBox[{"Cos", "[", 
    RowBox[{"omega1", "*", "t"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vpos1", "[", "t_", "]"}], "=", 
  RowBox[{"vinit1", "*", 
   RowBox[{"Cos", "[", 
    RowBox[{"omega1", "*", "t"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"upos2", "[", "t_", "]"}], "=", 
  RowBox[{"uinit2", "*", 
   RowBox[{"Cos", "[", 
    RowBox[{"omega2", "*", "t"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vpos2", "[", "t_", "]"}], "=", 
  RowBox[{"vinit2", "*", 
   RowBox[{"Cos", "[", 
    RowBox[{"omega2", "*", "t"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.763921899071267*^9, 3.7639219327596054`*^9}, {
  3.7639220587688684`*^9, 
  3.763922108548457*^9}},ExpressionUUID->"94be396a-e5ed-4786-acdf-\
ca6fa6b8520c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 7.  Coupled harmonic oscillators, plots", "Subsection",
 CellChangeTimes->{{3.7639852136328125`*^9, 3.763985223055333*^9}, 
   3.763985286455546*^9, {3.763985567277746*^9, 
   3.7639855677769527`*^9}},ExpressionUUID->"3468a829-3974-4b1a-ba22-\
7a3f902832f8"],

Cell["\<\
a) Plot the positions of the masses as a function of time for the first \
normal mode.  Plot them both on the same graph.
b) Repeat for normal mode 2\
\>", "Text",
 CellChangeTimes->{{3.7639243308219748`*^9, 3.763924350715372*^9}, {
  3.763985056989204*^9, 
  3.763985098315134*^9}},ExpressionUUID->"b5df1397-b23a-4445-af91-\
f387caca591d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 8. Coupled harmonic oscillators, general solution", "Subsection",
 CellChangeTimes->{{3.763981172658908*^9, 3.763981205701132*^9}, 
   3.7639852369707117`*^9, 3.7639852888111763`*^9, {3.763985571599002*^9, 
   3.7639855718798056`*^9}},ExpressionUUID->"9db8713a-cbb7-4327-a0df-\
a666dabb90cf"],

Cell[TextData[{
 "If you shook this oscillator to get it moving it probably would NOT \
oscillate in a normal mode.  So what good are they?  The normal modes of \
oscillation are important because they serve as \[OpenCurlyDoubleQuote]basis \
functions\[CloseCurlyDoubleQuote] from which you can build ANY general \
oscillation.  As a simple example, let\[CloseCurlyQuote]s construct an \
oscillation by adding together equal amounts of the two normal modes - so the \
oscillation will be ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],ExpressionUUID->
  "2fb9e177-649c-4a23-8f3d-9d3bc7428411"],
 " mode 1 + ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],ExpressionUUID->
  "b812d9a3-002e-4889-89cb-1267225c3522"],
 " mode 2.  Then for example the position of mass 1 will be ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"upos1", "[", "t", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"upos2", "[", "t", "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "31796f66-18d6-4f47-a712-d35831a9fe19"],
 ".  \na) Make a plot of the two masses undergoing this type of vibration\nb) \
Does the oscillation pattern repeat itself?  Do the two masses have the same \
oscillation frequencies?"
}], "Text",
 CellChangeTimes->{{3.7639812259657917`*^9, 3.7639812410833855`*^9}, {
  3.763981288149189*^9, 3.7639814209380913`*^9}, {3.763981454306919*^9, 
  3.7639814706559286`*^9}, {3.7639815169729223`*^9, 3.76398153319713*^9}, {
  3.7639815633211164`*^9, 3.763981614598974*^9}, {3.763981707031595*^9, 
  3.7639818487127953`*^9}, {3.7639818893195953`*^9, 3.763981891628395*^9}, {
  3.7639819304411955`*^9, 3.7639819621715956`*^9}, {3.7639851245546703`*^9, 
  3.763985152775432*^9}},ExpressionUUID->"119877ed-19d3-41eb-8012-\
15d1a68abf79"],

Cell["Animations", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.432477774309512*^9, 3.4324777770699263`*^9}, 
   3.432481583502447*^9, {3.432481745099237*^9, 3.432481772636252*^9}, {
   3.432488494136977*^9, 3.43248849667303*^9}, 3.432488549452938*^9, 
   3.432516055748814*^9, 3.4325165331798553`*^9, {3.432565853630549*^9, 
   3.43256585438869*^9}, {3.432571609601345*^9, 3.4325716467573566`*^9}, 
   3.4325726686883163`*^9, 3.432585157540076*^9, {3.43258769530755*^9, 
   3.4325876954638033`*^9}, {3.4329280998754807`*^9, 
   3.4329281212981787`*^9}, {3.5448981760464635`*^9, 
   3.5448981866470375`*^9}, {3.5449029209038825`*^9, 
   3.5449029267828827`*^9}, {3.562031428925231*^9, 3.562031430709409*^9}, 
   3.7609725764452963`*^9, 3.7631085599629765`*^9, {3.7637466275528927`*^9, 
   3.7637466313281164`*^9}},ExpressionUUID->"31502879-2542-4319-a98c-\
6027a5bbffb8"],

Cell["\<\
A little animation goes a long way in helping you visualize the normal modes. \
 You do that with a combination of Animate and Graphics.  Here is an example \
of each:\
\>", "Text",
 CellChangeTimes->{{3.7637431550960636`*^9, 3.7637431740657854`*^9}, {
   3.7637442143156614`*^9, 3.7637443255317745`*^9}, {3.7637464105530996`*^9, 
   3.763746412955515*^9}, 3.763746634806939*^9, {3.763982051794164*^9, 
   3.7639820714970903`*^9}},ExpressionUUID->"852ee623-25a0-40a8-90ff-\
634678b94682"],

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{"Thick", ",", "Green", ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "0"}], "}"}]}], "}"}], "]"}], ",", "Blue", ",", 
    RowBox[{"Ball", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.5", ",", "0"}], "}"}], ",", ".15"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.763744657524503*^9, 3.7637446678049693`*^9}, {
  3.7637447204085064`*^9, 3.76374483021961*^9}, {3.76374497517774*^9, 
  3.7637449756301427`*^9}, {3.7637456073775845`*^9, 
  3.7637456075491915`*^9}},ExpressionUUID->"7718b885-d75e-4d4e-b584-\
88cb2ad70b75"],

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Green", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "0"}], "}"}]}], "}"}], "]"}], ",", "Blue", ",", 
       RowBox[{"Ball", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.5", "+", 
            RowBox[{"upos1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
         ".15"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7637443283553925`*^9, 3.763744446214148*^9}, {
   3.763744496321669*^9, 3.7637446180406504`*^9}, {3.7637448501409383`*^9, 
   3.763744958688434*^9}, {3.763744990138236*^9, 3.763745002009912*^9}, {
   3.763745049107614*^9, 3.763745049747218*^9}, {3.7637456106849117`*^9, 
   3.763745610872119*^9}, 
   3.763922302726347*^9},ExpressionUUID->"d59dda8e-51bf-4720-987a-\
501ae06c0fe8"],

Cell[TextData[{
 StyleBox["Things to notice",
  FontWeight->"Bold"],
 ":\n- All of the Graphics elements are collected together into a list and \
enclosed in {curly brackets}.\n- Items are plotted in the order in which they \
are called.  Try switching Blue and Green in one of the Graphics calls above.\
\nTry altering some of the other graphics parameters to see if they behave as \
you would expect\nThere are many other options you can add to these commands. \
 Put your cursor on Animate and press F1 to see some examples\n\n",
 StyleBox["Important",
  FontWeight->"Bold"],
 ":  Animate is fussy - it wants to see all of the time-dependent functions \
directly inside the Animate call.  So THIS doesn\[CloseCurlyQuote]t work, \
even though it seems like it should behave exactly the same as the call above:"
}], "Text",
 CellChangeTimes->{{3.763745089232071*^9, 3.763745266923292*^9}, {
  3.763745563023079*^9, 3.7637455703085594`*^9}, {3.7637456269875393`*^9, 
  3.763745650809655*^9}, {3.763745773946665*^9, 3.763745774835882*^9}, {
  3.7637464383212776`*^9, 3.763746462704234*^9}, {3.7639858499540195`*^9, 
  3.76398585099922*^9}},ExpressionUUID->"b2b11fd2-b070-4985-8512-\
567361efbabe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"testposn", "=", 
    RowBox[{"upos1", "[", "t", "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"This", " ", 
    RowBox[{"doesn", "'"}], "t", " ", "work", " ", "inside", " ", "the", " ", 
    "Animate", " ", "command"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Green", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "0"}], "}"}]}], "}"}], "]"}], ",", "Blue", ",", 
       RowBox[{"Ball", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.5", "+", "testposn"}], ",", "0"}], "}"}], ",", ".15"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.763745959016024*^9, 3.7637459934332867`*^9}, {
   3.763746201250559*^9, 3.763746203106982*^9}, {3.7637462996489887`*^9, 
   3.7637463106168585`*^9}, {3.7637463434706697`*^9, 
   3.7637463678546257`*^9}, {3.7637464682120695`*^9, 3.76374650732152*^9}, 
   3.763922350249299*^9, {3.7639820901860104`*^9, 
   3.7639820979548597`*^9}},ExpressionUUID->"1f31b714-ced7-4193-95ee-\
ee66c4dcbe08"],

Cell[TextData[{
 StyleBox["Back to the problem:",
  FontWeight->"Bold"],
 " For this problem we want to show the strings stretching in time, attached \
to the balls which move in time.  We\[CloseCurlyQuote]ll set this inside a \
frame containing the outer walls, and some tickmarks which show the \
equilibrium points.  \n\nTo start a complicated Animate command like this, \
break it down into managable parts which you can debug then combine together. \
\nI\[CloseCurlyQuote]ll start with the piece \
\[OpenCurlyDoubleQuote]wallgraphics\[CloseCurlyDoubleQuote] which contains \
the info needed to plot the walls & equilibrium points.  \n\nThrough trial \
and error I found that good values to use for the equilibrium positions of \
the two masses (i.e. the places where u=0 and v=0) are at -1.5 and +1.5, and \
that a good position for the walls that the springs are attached to are -3.5 \
and +3.5.  I made the walls extend from y = - 0.5 to +0.5, and the \
equilibrium markers extend from y = - 0.1 to + 0.1.  Nothing sacred about \
these values!"
}], "Text",
 CellChangeTimes->{
  3.763744318262128*^9, {3.7637452821827555`*^9, 3.763745437761861*^9}, {
   3.7637456591715765`*^9, 3.76374566158967*^9}, {3.7637465246220307`*^9, 
   3.7637465318614774`*^9}, {3.7639825572662926`*^9, 3.763982636250105*^9}, {
   3.763982667887311*^9, 
   3.7639827398364334`*^9}},ExpressionUUID->"9ea70513-d601-44d6-9e68-\
3d2acd63d7d3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x0", "=", "1.5"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "equilib", " ", "positions", " ", "of", " ", "the", " ", "masses", " ", 
     "are", " ", "at"}], " ", "\[PlusMinus]", "x0"}], " ", "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xwall", "=", "3.5"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"wall", " ", "positions", " ", "are", " ", "at"}], " ", 
    "\[PlusMinus]", "xwall"}], " ", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wallgraphics", "=", 
   RowBox[{"{", 
    RowBox[{"Thick", ",", "Black", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "xwall"}], ",", 
          RowBox[{"-", ".5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "xwall"}], ",", ".5"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xwall", ",", 
          RowBox[{"-", ".5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"xwall", ",", ".5"}], "}"}]}], "}"}], "]"}], ",", "Thin", 
     ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "x0"}], ",", 
          RowBox[{"-", ".1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "x0"}], ",", ".1"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x0", ",", 
          RowBox[{"-", ".1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x0", ",", ".1"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.760980914313774*^9, 3.760980951347515*^9}, {
   3.760981091911327*^9, 3.7609811056426015`*^9}, {3.763112987830597*^9, 
   3.7631129946791286`*^9}, {3.763113463364294*^9, 3.763113536601511*^9}, 
   3.7637386082296286`*^9, {3.7637386550017285`*^9, 3.7637387054846525`*^9}, 
   3.763738822589004*^9, {3.763738864600073*^9, 3.7637388656930804`*^9}, {
   3.763738912806382*^9, 3.7637389136487875`*^9}, {3.76373907894836*^9, 
   3.76373918813746*^9}, {3.7637392660141597`*^9, 3.763739365404397*^9}, {
   3.763739436884055*^9, 3.7637395237796125`*^9}, {3.76373959675688*^9, 
   3.7637396014837103`*^9}, {3.7637396584396753`*^9, 
   3.7637396615284953`*^9}, {3.7637397376569834`*^9, 3.763739752882681*^9}, {
   3.7637398193421073`*^9, 3.7637398238505363`*^9}, {3.7637399157195253`*^9, 
   3.7637400235796165`*^9}, 3.763740055825023*^9, {3.7637400878218284`*^9, 
   3.763740117993422*^9}, {3.763740161645502*^9, 3.7637402004429507`*^9}, {
   3.763740242019845*^9, 3.763740258555951*^9}, {3.763740289054147*^9, 
   3.7637402931881733`*^9}, {3.7637403431104937`*^9, 3.76374034568451*^9}, {
   3.763740671848802*^9, 3.7637407027067995`*^9}, {3.763742980633145*^9, 
   3.763743072850336*^9}, {3.763743103522133*^9, 3.763743128841096*^9}, {
   3.763743183644247*^9, 3.763743194283515*^9}, 
   3.7637437063591995`*^9},ExpressionUUID->"ef79ccf5-d0fb-4c2c-80da-\
a31e70b72ed3"],

Cell["Nothing to see if you just call it:", "Text",
 CellChangeTimes->{{3.7637436737061896`*^9, 
  3.7637436930211134`*^9}},ExpressionUUID->"0319e25b-9e12-442e-83dd-\
4761383e1fde"],

Cell[BoxData["wallgraphics"], "Input",
 CellChangeTimes->{{3.7637436996667566`*^9, 
  3.7637437021003723`*^9}},ExpressionUUID->"50dfe180-6e55-4d86-a2a0-\
2ca327ce42b9"],

Cell["\<\
The way to see what it holds is to insert it into the Graphics command:\
\>", "Text",
 CellChangeTimes->{{3.7637432026607685`*^9, 3.7637432099460154`*^9}, {
  3.763743714143649*^9, 3.7637437336779747`*^9}, {3.7637455251136208`*^9, 
  3.763745527188501*^9}},ExpressionUUID->"e11227e4-c7d2-4994-a7d2-\
f07c0c8dcdf2"],

Cell[BoxData[
 RowBox[{"Graphics", "[", "wallgraphics", "]"}]], "Input",
 CellChangeTimes->{{3.7637432722060146`*^9, 
  3.763743278773657*^9}},ExpressionUUID->"ee7f3981-886d-4acb-9dd4-\
a31df581b8b5"],

Cell[TextData[{
 "Now we want to animate the balls & springs.  You do this by assembling \
another Graphics call which tells Mathematica where the spring endpoints are \
(using Line), where the balls are located and what their size is (using \
Ball), then placing that inside an Animate command.  Here\[CloseCurlyQuote]s \
what that looks like for the ",
 StyleBox["first",
  FontWeight->"Bold"],
 " ball & spring oscillating in the ",
 StyleBox["first",
  FontWeight->"Bold"],
 " normal mode:"
}], "Text",
 CellChangeTimes->{{3.7637438520341377`*^9, 3.7637440150651836`*^9}, {
  3.7639822194484386`*^9, 3.7639822308983135`*^9}, {3.7639827803969536`*^9, 
  3.76398278559182*^9}, {3.7639828620806007`*^9, 
  3.7639828747323627`*^9}},ExpressionUUID->"e60b961e-5b12-48b0-b583-\
4bff3bd6dfdd"],

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Blue", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "xwall"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x0"}], "+", 
             RowBox[{"upos1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Ball", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x0"}], "+", 
            RowBox[{"upos1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
         ".15"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "xwall"}], ",", "xwall"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"AnimationRate", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7637440574088554`*^9, {3.76392237676483*^9, 3.7639223879670544`*^9}, 
   3.7639822801323385`*^9, {3.7639823491556244`*^9, 3.7639823512460513`*^9}, {
   3.763983301590036*^9, 
   3.7639833020580416`*^9}},ExpressionUUID->"93e83972-df89-421d-9e81-\
7cbcbce0d957"],

Cell["\<\
Once you have everything as you wish, put it together under a single Animate \
call:\
\>", "Text",
 CellChangeTimes->{{3.7637440828838186`*^9, 
  3.7637441025087442`*^9}},ExpressionUUID->"6fe07f39-7ad7-4564-a3fa-\
b2a43f235ce9"],

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"wallgraphics", ",", "Thick", ",", "Blue", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "xwall"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x0"}], "+", 
             RowBox[{"upos1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Ball", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "x0"}], "+", 
            RowBox[{"upos1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
         ".15"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "xwall"}], ",", "xwall"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"AnimationRate", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763924459762556*^9, 3.763924468034722*^9}, {
   3.7639823837422676`*^9, 3.763982392946386*^9}, 
   3.7639833156926165`*^9},ExpressionUUID->"4b591aba-1858-4779-a1f5-\
6a2cb9b08f92"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 9. Coupled harmonic oscillators, animation", "Subsection",
 CellChangeTimes->{{3.763981172658908*^9, 3.763981205701132*^9}, {
   3.7639824518839417`*^9, 3.7639824534595613`*^9}, 3.7639834296208773`*^9, {
   3.7639855765286655`*^9, 
   3.76398557690407*^9}},ExpressionUUID->"42202abe-231c-42d4-b44b-\
67ef8874a1a5"],

Cell["\<\
a) Modify the animation above to include the second oscillating mass and the \
other two springs.  Give them all different colors.  Mathematica recognizes \
color names such as Blue, Yellow, Red, Green, Magenta, Brown, Black, White, \
and others.  Mathematica draws the object in the order you list them, so you \
may have to play around with the order in which you call them to get them \
placed properly in front of or behind other objects.

b) When you have finished (a), copy & paste the animation command to another \
line, then modify it so that it shows the second normal mode.\
\>", "Text",
 CellChangeTimes->{{3.7639812259657917`*^9, 3.7639812410833855`*^9}, {
  3.763981288149189*^9, 3.7639814209380913`*^9}, {3.763981454306919*^9, 
  3.7639814706559286`*^9}, {3.7639815169729223`*^9, 3.76398153319713*^9}, {
  3.7639815633211164`*^9, 3.763981614598974*^9}, {3.763981707031595*^9, 
  3.7639818487127953`*^9}, {3.7639818893195953`*^9, 3.763981891628395*^9}, {
  3.7639819304411955`*^9, 3.7639819621715956`*^9}, {3.7639824678117456`*^9, 
  3.7639825238818645`*^9}, {3.763982909521809*^9, 3.7639829412838163`*^9}, {
  3.76398305466807*^9, 3.7639830562436905`*^9}, {3.763983119299699*^9, 
  3.763983272369861*^9}, {3.763983342571761*^9, 
  3.763983419387146*^9}},ExpressionUUID->"08652fee-4982-40bb-bdb6-\
a2c3ba32f780"],

Cell[TextData[{
 StyleBox["What to turn in", "Section"],
 "\nWhen you are done, SAVE this entire file, with all your work.  Then SAVE \
it again under the new name \[OpenCurlyDoubleQuote]HW#10-",
 StyleBox["yourname",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote], where ",
 StyleBox["yourname",
  FontSlant->"Italic"],
 " is of course, ",
 StyleBox["your",
  FontWeight->"Bold"],
 " name.  Delete all but the Assignments themselves (of which there are 9).  \
Make sure the entire worksheet runs correctly and that you haven\
\[CloseCurlyQuote]t deleted anything important!  Turn in this assignment \
worksheet, with all of its input and output code, through the link on our \
Moodle page."
}], "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{
  3.747319247022073*^9, {3.747319299594073*^9, 3.747319343466073*^9}, 
   3.747321684996185*^9, 3.7473279456052113`*^9, {3.7639863838902135`*^9, 
   3.7639863929851303`*^9}},ExpressionUUID->"54e97c3f-35d2-458b-a16b-\
8268f0dadb85"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{1388, 966},
WindowMargins->{{87, Automatic}, {Automatic, 0}},
ShowSelection->True,
ShowCellTags->True,
Magnification:>1.5 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 929, 13, 146, "Title",ExpressionUUID->"1fa6df21-d632-4fc8-82ec-2aa0e347861f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1499, 37, 813, 13, 125, "Subtitle",ExpressionUUID->"406c5b3f-39ab-4a46-ba53-da1f60d1b9d9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2315, 52, 2177, 34, 220, "Text",ExpressionUUID->"cdfaad9a-b536-4b60-ba2d-92bec4b43bc7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4495, 88, 315, 8, 43, "Input",ExpressionUUID->"bb907516-e1eb-47b7-bb23-93c2861f5580",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[4813, 98, 813, 12, 99, "Section",ExpressionUUID->"23518fb2-602c-452d-ad5e-5bc2372a2304",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[5629, 112, 1584, 26, 220, "Text",ExpressionUUID->"f13d1b12-c257-4bed-b99a-a29602c6ed95",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[7216, 140, 399, 6, 80, "Subsection",ExpressionUUID->"e6d3de99-64d0-4fd6-9a47-1499144c2ea6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[7618, 148, 899, 17, 74, "Text",ExpressionUUID->"40fc755c-a817-42e4-804b-4a138d39a209",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8520, 167, 410, 9, 45, "Input",ExpressionUUID->"ac19727a-4d4e-45e8-bcf4-a8e4830033cf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8933, 178, 318, 6, 45, "Input",ExpressionUUID->"9c8a6e1f-eba6-4728-ae5f-332715b5cde1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9254, 186, 338, 7, 45, "Input",ExpressionUUID->"c963e0b1-9485-4aff-9f47-5c22ce7939d0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9595, 195, 261, 5, 45, "Input",ExpressionUUID->"bfc1ebff-40ba-409b-9f1c-f670c3e583bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[9859, 202, 709, 16, 45, "Input",ExpressionUUID->"cea963b3-4d8b-485e-b398-3bb007d2cd14",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10571, 220, 317, 6, 45, "Input",ExpressionUUID->"d77920a6-e8d3-40ea-9c0b-e9454647df5d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10891, 228, 289, 6, 45, "Input",ExpressionUUID->"f9f8c764-c29b-4a21-a88e-834249218970",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[11183, 236, 764, 15, 45, "Input",ExpressionUUID->"ea749994-566e-42df-8414-0d350bbc600d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[11950, 253, 396, 10, 45, "Input",ExpressionUUID->"c075705c-57c4-425c-9d4e-42c0db97f085",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[12349, 265, 483, 11, 45, "Input",ExpressionUUID->"d7ac0a23-e3fb-4d35-95f6-16d147c537b5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[12835, 278, 885, 19, 45, "Input",ExpressionUUID->"c255761b-85f9-4adf-a9fa-e3f0d2757561",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[13723, 299, 429, 10, 75, "Input",ExpressionUUID->"c3a8ec4e-f915-4424-b3d4-564b1a0cb118",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[14155, 311, 382, 9, 45, "Input",ExpressionUUID->"6526b3e0-cf0d-4e82-ad80-f684236633e0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[14540, 322, 2177, 33, 188, "Text",ExpressionUUID->"89fa540a-07b7-4965-a6a4-20c18f296e60",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[16754, 360, 254, 5, 72, "Subsection",ExpressionUUID->"81b30072-9cb1-4056-8750-d0d55d489876"],
Cell[17011, 367, 190, 3, 45, "Text",ExpressionUUID->"889c0fcc-1354-404b-ac98-2f83d7bd92ff"],
Cell[CellGroupData[{
Cell[17226, 374, 338, 8, 45, "Input",ExpressionUUID->"8fe98694-cb3f-48e5-8c6b-92f18572fea6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[17567, 384, 1774, 25, 106, "Section",ExpressionUUID->"78b71755-f510-4fde-b21b-1b00f8e33972",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[19344, 411, 923, 15, 72, "Subsection",ExpressionUUID->"c2342b09-1d6d-45d0-b733-530f407bc169",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[20270, 428, 535, 11, 45, "Text",ExpressionUUID->"ca6f11a1-fd0e-49b1-af9a-ad5e15db1f54",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[20808, 441, 1023, 27, 104, "Input",ExpressionUUID->"0d37bc91-1ae6-4be1-9ea7-00d2c4605e11",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[21834, 470, 359, 5, 45, "Text",ExpressionUUID->"9f8bdf37-6061-4dcb-96a3-db3368e6b934",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[22196, 477, 704, 15, 104, "Input",ExpressionUUID->"9ba46e72-4d70-4a3e-9f16-8891a8afb5e2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[22915, 495, 243, 4, 45, "Text",ExpressionUUID->"f087750f-d986-4a74-b841-8bb7c4a241bf"],
Cell[23161, 501, 223, 4, 75, "Input",ExpressionUUID->"cd4356ab-6560-4279-b52b-b70e3c6da0bd"],
Cell[CellGroupData[{
Cell[23409, 509, 1688, 27, 74, "Text",ExpressionUUID->"8437a187-1b60-45f7-a55d-21eb3cf45df5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[25100, 538, 1550, 41, 191, "Input",ExpressionUUID->"d1ef1d29-5fc1-41f6-b1be-1bceb3854353",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[26653, 581, 720, 14, 74, "Text",ExpressionUUID->"728b2ba8-b061-4d50-88bd-47c204fe02b5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[27376, 597, 945, 13, 72, "Subsection",ExpressionUUID->"bff244e5-5b02-46c9-9004-d9022ed501ea",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[28324, 612, 39776, 668, 815, "Text",ExpressionUUID->"6ccc4bc7-91db-4eb5-8988-79beb05970af",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68149, 1286, 214, 4, 72, "Subsection",ExpressionUUID->"64013f56-df13-472d-9a5e-853aeb8ffeed"],
Cell[CellGroupData[{
Cell[68388, 1294, 1812, 33, 473, "Text",ExpressionUUID->"84eedbb4-ea3c-4aab-b278-a2c74f01c484",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[70203, 1329, 1134, 16, 72, "Subsection",ExpressionUUID->"32641e95-bd35-419c-a13e-721fff65c1fe",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[71340, 1347, 2427, 36, 188, "Text",ExpressionUUID->"b99ca875-816a-453e-8b64-1cae2ea52219",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[73770, 1385, 3475, 86, 220, "Input",ExpressionUUID->"c475b1ae-d4c8-4b12-8658-8b634e47f446",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[77260, 1474, 5116, 130, 232, "Input",ExpressionUUID->"6200b49d-ad8b-444a-a1f7-63ef0129ff6b"],
Cell[82379, 1606, 5059, 127, 259, "Input",ExpressionUUID->"b83b49fa-af6c-452d-b5cd-050797891ff1"],
Cell[CellGroupData[{
Cell[87463, 1737, 394, 7, 72, "Subsection",ExpressionUUID->"69ec5fc5-998c-4afe-b088-7a9a2eab53dc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[87860, 1746, 883, 21, 74, "Text",ExpressionUUID->"8cebcf9b-ea24-4a60-ae2c-9ca7e2b42f49",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[88758, 1770, 316, 8, 75, "Input",ExpressionUUID->"60e9c5d2-02f6-46be-b5d3-f37127f6a51e"],
Cell[89077, 1780, 295, 9, 45, "Input",ExpressionUUID->"251bb618-7cee-4e37-adf2-fb731cdf6d7e"],
Cell[CellGroupData[{
Cell[89397, 1793, 1183, 24, 159, "Text",ExpressionUUID->"6a63d2b2-1714-4901-9f58-50a5a9ce3a2e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[90583, 1819, 625, 14, 102, "Text",ExpressionUUID->"13287b07-8bb5-42ba-ad5f-8356cfdd70f6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[91223, 1836, 546, 16, 75, "Input",ExpressionUUID->"8872258e-4757-4296-9165-9ec86de3b52a"],
Cell[91772, 1854, 1143, 29, 75, "Input",ExpressionUUID->"7119a03a-9864-48e1-8b38-cbe2e31843eb"],
Cell[92918, 1885, 411, 8, 45, "Text",ExpressionUUID->"96e6fd78-c743-48a5-95ac-481cea54deba"],
Cell[93332, 1895, 339, 8, 45, "Input",ExpressionUUID->"7f30bb46-f2cc-479f-b03a-b1167516a5bf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[93674, 1905, 255, 4, 45, "Text",ExpressionUUID->"ad7e7b22-5008-49d9-b988-0b5fa6b7a655"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93966, 1914, 300, 6, 82, "Subsection",ExpressionUUID->"a478c14e-4d7e-4b1a-bacc-806b57842355"],
Cell[94269, 1922, 596, 11, 74, "Text",ExpressionUUID->"1ef6c3c2-6be5-49e3-af92-9d6320979684"],
Cell[94868, 1935, 935, 21, 162, "Input",ExpressionUUID->"49a6cfc3-eb12-4a1c-a988-ae7234e10523"],
Cell[95806, 1958, 1149, 20, 228, "Text",ExpressionUUID->"ee1efb28-9431-4466-b1a3-f9149d936e85"],
Cell[CellGroupData[{
Cell[96980, 1982, 837, 12, 72, "Subsection",ExpressionUUID->"49f63e08-43b9-480f-baf4-9577dff980e7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[97820, 1996, 2095, 41, 131, "Text",ExpressionUUID->"0d7c23de-211d-44ab-bed4-8551e1d442bc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[99918, 2039, 2969, 71, 278, "Input",ExpressionUUID->"fca5f214-6038-4086-b19d-1155000778ea",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[102902, 2113, 598, 11, 102, "Text",ExpressionUUID->"4ac1d7eb-e897-4c9e-afa4-1fb413ab2d06"],
Cell[103503, 2126, 295, 7, 75, "Input",ExpressionUUID->"4e98fe62-1a8c-4671-bdf6-9b49caa510b6"],
Cell[103801, 2135, 246, 6, 45, "Text",ExpressionUUID->"bb950d40-6304-4bc3-9d13-564401116226"],
Cell[104050, 2143, 962, 24, 133, "Input",ExpressionUUID->"2b0ba984-69a2-4691-88f0-4a27ba4de364"],
Cell[105015, 2169, 688, 14, 75, "Input",ExpressionUUID->"3902f50c-3aa1-487d-8a3a-384cb17a59b5"],
Cell[105706, 2185, 709, 14, 131, "Text",ExpressionUUID->"e780e70a-f965-4403-bc83-43e19c117b46"],
Cell[106418, 2201, 205, 3, 45, "Text",ExpressionUUID->"a5dc43e0-fffa-42ee-9b86-cf15e1ced08d"],
Cell[106626, 2206, 766, 19, 133, "Input",ExpressionUUID->"2eac4b30-850c-4086-b06c-cd3c91df76dc"],
Cell[107395, 2227, 442, 9, 74, "Text",ExpressionUUID->"cfcb9bdb-c128-48ee-b91d-54c1c0cd2a09"],
Cell[107840, 2238, 880, 13, 72, "Subsection",ExpressionUUID->"46c287ce-b6da-4b3f-9515-2cb658758dfb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[108723, 2253, 2578, 59, 594, "Text",ExpressionUUID->"6414e6a7-583c-4722-9ec9-f6cfc9cd83cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111338, 2317, 269, 5, 82, "Subsection",ExpressionUUID->"e0ba72a5-0249-4b95-9707-8dfa42b66ccd"],
Cell[111610, 2324, 699, 19, 125, "Text",ExpressionUUID->"e73727fb-dd11-4356-8e1a-c7397d5262ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112346, 2348, 863, 12, 72, "Subsection",ExpressionUUID->"8c8402a5-5c0c-44b7-9142-87eb62f1b9ef"],
Cell[113212, 2362, 2788, 90, 548, "Text",ExpressionUUID->"0802a587-0388-438c-9b4e-aba45f96c280"],
Cell[116003, 2454, 1349, 33, 133, "Input",ExpressionUUID->"06fafd42-8eab-4e29-96b6-e4827ad21057"],
Cell[117355, 2489, 602, 18, 75, "Input",ExpressionUUID->"024beb72-2883-4106-85dd-b34c0baf5613"],
Cell[117960, 2509, 1447, 32, 161, "Text",ExpressionUUID->"2d3ad531-c46f-488c-83c8-51acf501da51"],
Cell[CellGroupData[{
Cell[119432, 2545, 767, 11, 58, "Subsubsection",ExpressionUUID->"6d2168fe-c464-4911-95cd-ffea6c509737"],
Cell[120202, 2558, 2074, 47, 188, "Text",ExpressionUUID->"7676ea0b-58a0-4223-abb3-9298d11fd001"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[122325, 2611, 378, 6, 106, "Section",ExpressionUUID->"ba16fad8-3799-4481-b8b7-35f2cf54ac0d"],
Cell[122706, 2619, 5361, 141, 444, "Text",ExpressionUUID->"43b078ec-04c7-4b0e-a377-a49e1f74e1b1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[128092, 2764, 875, 12, 58, "Subsubsection",ExpressionUUID->"90750a7e-4bb6-405e-a741-d5d815edbc26"],
Cell[128970, 2778, 3506, 63, 318, "Text",ExpressionUUID->"5b252e3a-0317-446a-9b03-a1bd45a1ced5"],
Cell[CellGroupData[{
Cell[132501, 2845, 899, 14, 72, "Subsection",ExpressionUUID->"75e319af-2575-45d2-9be0-f3717e9b82b8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[133403, 2861, 20196, 482, 2226, "Text",ExpressionUUID->"f02231bd-f15b-4864-9c79-c9a9afb9e54b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[153648, 3349, 228, 3, 72, "Subsection",ExpressionUUID->"01a83b8f-6755-44bb-8573-1298a8a552b8"],
Cell[153879, 3354, 4277, 86, 330, "Text",ExpressionUUID->"1be5f3a3-b7c8-4045-a424-84ac7af628b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[158193, 3445, 226, 4, 84, "Subsection",ExpressionUUID->"27648fed-4c47-4d4e-a366-84a819c1e2cb"],
Cell[158422, 3451, 267, 6, 74, "Text",ExpressionUUID->"ea938417-6b92-4fe2-b039-31fdd0a3d453"],
Cell[158692, 3459, 796, 22, 75, "Input",ExpressionUUID->"4e17dcc0-afeb-42dc-be47-bd115589399b"],
Cell[159491, 3483, 436, 8, 74, "Text",ExpressionUUID->"42cc71a4-fd71-4f9b-aa1f-96c157ef632b"],
Cell[159930, 3493, 829, 23, 133, "Input",ExpressionUUID->"3f915198-7289-409d-8e2c-3daa4b5cb249"],
Cell[160762, 3518, 285, 6, 45, "Text",ExpressionUUID->"ace38aaf-ce9b-4927-9f29-c29673ff05ed"],
Cell[161050, 3526, 868, 24, 133, "Input",ExpressionUUID->"94be396a-e5ed-4786-acdf-ca6fa6b8520c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161955, 3555, 272, 4, 72, "Subsection",ExpressionUUID->"3468a829-3974-4b1a-ba22-7a3f902832f8"],
Cell[162230, 3561, 350, 8, 74, "Text",ExpressionUUID->"b5df1397-b23a-4445-af91-f387caca591d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162617, 3574, 306, 4, 72, "Subsection",ExpressionUUID->"9db8713a-cbb7-4327-a0df-a666dabb90cf"],
Cell[162926, 3580, 1845, 39, 210, "Text",ExpressionUUID->"119877ed-19d3-41eb-8012-15d1a68abf79"],
Cell[164774, 3621, 917, 14, 72, "Subsection",ExpressionUUID->"31502879-2542-4319-a98c-6027a5bbffb8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[165694, 3637, 498, 9, 74, "Text",ExpressionUUID->"852ee623-25a0-40a8-90ff-634678b94682"],
Cell[166195, 3648, 748, 20, 45, "Input",ExpressionUUID->"7718b885-d75e-4d4e-b584-88cb2ad70b75"],
Cell[166946, 3670, 1178, 30, 75, "Input",ExpressionUUID->"d59dda8e-51bf-4720-987a-501ae06c0fe8"],
Cell[168127, 3702, 1196, 20, 245, "Text",ExpressionUUID->"b2b11fd2-b070-4985-8512-567361efbabe"],
Cell[169326, 3724, 1452, 37, 104, "Input",ExpressionUUID->"1f31b714-ced7-4193-95ee-ee66c4dcbe08"],
Cell[170781, 3763, 1422, 24, 273, "Text",ExpressionUUID->"9ea70513-d601-44d6-9e68-3d2acd63d7d3"],
Cell[172206, 3789, 3144, 76, 133, "Input",ExpressionUUID->"ef79ccf5-d0fb-4c2c-80da-a31e70b72ed3"],
Cell[175353, 3867, 181, 3, 45, "Text",ExpressionUUID->"0319e25b-9e12-442e-83dd-4761383e1fde"],
Cell[175537, 3872, 168, 3, 45, "Input",ExpressionUUID->"50dfe180-6e55-4d86-a2a0-2ca327ce42b9"],
Cell[175708, 3877, 324, 6, 45, "Text",ExpressionUUID->"e11227e4-c7d2-4994-a7d2-f07c0c8dcdf2"],
Cell[176035, 3885, 200, 4, 45, "Input",ExpressionUUID->"ee7f3981-886d-4acb-9dd4-a31df581b8b5"],
Cell[176238, 3891, 789, 17, 102, "Text",ExpressionUUID->"e60b961e-5b12-48b0-b583-4bff3bd6dfdd"],
Cell[177030, 3910, 1503, 44, 75, "Input",ExpressionUUID->"93e83972-df89-421d-9e81-7cbcbce0d957"],
Cell[178536, 3956, 238, 6, 45, "Text",ExpressionUUID->"6fe07f39-7ad7-4564-a3fa-b2a43f235ce9"],
Cell[178777, 3964, 1442, 42, 104, "Input",ExpressionUUID->"4b591aba-1858-4779-a1f5-6a2cb9b08f92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180256, 4011, 328, 5, 72, "Subsection",ExpressionUUID->"42202abe-231c-42d4-b44b-67ef8874a1a5"],
Cell[180587, 4018, 1336, 21, 216, "Text",ExpressionUUID->"08652fee-4982-40bb-bdb6-a2c3ba32f780"],
Cell[181926, 4041, 989, 23, 210, "Text",ExpressionUUID->"54e97c3f-35d2-458b-a16b-8268f0dadb85"]
}, Open  ]]
}, Open  ]]
}
]
*)

