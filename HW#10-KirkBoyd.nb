(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    279973,       5748]
NotebookOptionsPosition[    266575,       5511]
NotebookOutlinePosition[    267017,       5530]
CellTagsIndexPosition[    266974,       5527]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Problem 1: Matrices three ways", "Subsection"]], \
"Subsection",
 CellChangeTimes->{3.7639157066984997`*^9, 
  3.763916102953438*^9},ExpressionUUID->"c1a3599c-7d58-4e61-8e95-\
78df617c86e0"],

Cell["\<\
a) Create three 3x2 matrices (3 rows, 2 columns) and name them M1, M2, and M3 \
in the following ways: 
 (1) Create M1 by typing in entries directly as a list of lists.  
 
 (2) Use the Palette to create M2.  
 (3) Use Insert...Table/Matrix to create M3.  Use whatever values you like \
but make each matrix different.  Make use of these keyboard shortcuts:

b) Enter each matrix name to evaluate it and verify that it is a list of \
lists, regardless of the entry method

c) On another line use MatrixForm to view each matrix in standard format\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7609671601624346`*^9, 3.76096735133191*^9}, {
   3.7609676142249317`*^9, 3.760967636957569*^9}, {3.760967688270956*^9, 
   3.7609679003270206`*^9}, {3.7609679419503546`*^9, 
   3.7609679643084416`*^9}, {3.760967995682444*^9, 3.7609680047617607`*^9}, {
   3.76096804295205*^9, 3.760968060268272*^9}, {3.7609680990357695`*^9, 
   3.760968176008156*^9}, {3.7609682299712477`*^9, 3.7609683709074554`*^9}, {
   3.760968474539584*^9, 3.7609685158177133`*^9}, 3.760972576435296*^9, 
   3.7609741369114943`*^9, {3.763102457069457*^9, 3.7631024639487686`*^9}, {
   3.763102541895861*^9, 3.763102553353861*^9}, {3.763915010820567*^9, 
   3.7639150109805703`*^9}, {3.7639150725638027`*^9, 
   3.7639150907581673`*^9}, {3.7639157101185684`*^9, 3.7639157235608377`*^9}, 
   3.7640705064631257`*^9, {3.7647879399797764`*^9, 
   3.7647879410349207`*^9}},ExpressionUUID->"f7e9895d-05c6-454b-8a0a-\
6ee282dbac95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "a", "*)"}], "\[IndentingNewLine]", "\t", 
  RowBox[{"(*", "a1", "*)"}], "\[IndentingNewLine]", "\t", 
  RowBox[{"M1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w", ",", "u"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "z"}], "}"}]}], "}"}], " "}]}]], "Input",
 CellChangeTimes->{{3.764070515594045*^9, 3.764070536165859*^9}, {
  3.764070567054833*^9, 3.7640706232137423`*^9}, {3.76407083143233*^9, 
  3.764070846214116*^9}, {3.764788767193324*^9, 3.764788774191571*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4fcd5e8f-994c-4e5a-a6c6-0ebecd83fbf0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"w", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "z"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7647888427584343`*^9, 3.764788893255308*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"e3632275-acbd-4b7b-a3f1-0140cf8f55a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{"(*", "a2", "*)"}], "\[IndentingNewLine]", "\t", 
  RowBox[{"M2", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {"6", "7"},
      {"7", "8"},
      {"8", "9"}
     }], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.764070521821759*^9, 3.764070522414901*^9}, {
  3.764070665257474*^9, 3.7640707231315165`*^9}, {3.7640708648085194`*^9, 
  3.7640709059506483`*^9}, {3.7647887858479085`*^9, 3.764788795710525*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a53103e8-de58-4de8-87ff-5c731207bc99"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.764788844789033*^9, 3.764788912644488*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"03c5a782-84ac-42f2-893e-fa1307682ce7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{"(*", "a3", "*)"}], "\[IndentingNewLine]", "\t", 
  RowBox[{"M3", " ", "=", " ", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", "1"}], 
       RowBox[{"-", "2"}]},
      {"2", "7"},
      {
       RowBox[{"-", "4"}], 
       RowBox[{"-", "5"}]}
     }], "\[NoBreak]", ")"}]}]}]], "Input",
 CellChangeTimes->{{3.764070730600539*^9, 3.764070731772456*^9}, {
  3.7640707872901*^9, 3.76407081729119*^9}, {3.7640709112633343`*^9, 
  3.7640709385455976`*^9}, {3.7647888074631557`*^9, 3.7647888144963036`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"eafbc1ab-5e5f-405d-8469-2fc37b29e3b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "5"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.764788846711864*^9, 3.7647889173498993`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"9790302a-6933-4b1b-bfa1-a116c41ef0b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "b", "*)"}], "\[IndentingNewLine]", "M1"}]], "Input",
 CellChangeTimes->{{3.7640709536555233`*^9, 3.7640709667497244`*^9}, {
  3.764788717259698*^9, 3.7647887282738037`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"3472a211-3dc3-47d5-8bc6-011d8c332b1b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"w", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "z"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7647887542344217`*^9, 3.7647888499711094`*^9, 
  3.764788921613523*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"d0a97b96-7f55-4061-a7c7-b6e31e205a71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["M2"], "Input",
 CellChangeTimes->{{3.7647887218130355`*^9, 3.764788726107585*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a8b95155-8263-4ded-92b0-70ee20f23e89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7647887566250334`*^9, 3.764788852688839*^9, 
  3.7647889288330956`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"d59215d9-1d07-4b45-9c11-d3b3249a1ad1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["M3"], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"dd5af7fc-b98a-4002-817c-2050da30c39b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "5"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.764788758823722*^9, 3.7647888545199814`*^9, 
  3.7647889320764184`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"6351ece8-7ab0-4230-b6c5-6170d752007b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "c", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"M1", " ", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.7640709894224477`*^9, 3.7640710171265793`*^9}, {
  3.7647886832688956`*^9, 3.7647887009533253`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"9f9b78f4-74cf-4851-91cd-1f0580dbb08d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"w", "u"},
     {"v", "x"},
     {"y", "z"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764788856311146*^9, 3.7647889386029253`*^9},
 CellLabel->
  "Out[7]//MatrixForm=",ExpressionUUID->"6854ea0b-55a2-42c5-81f9-\
19782569efd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M2", " ", "//", "MatrixForm"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"a0b0a250-efe1-4955-9a2b-b6dd3a9d43cb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"6", "7"},
     {"7", "8"},
     {"8", "9"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764788858932164*^9, 3.7647889404749174`*^9},
 CellLabel->
  "Out[8]//MatrixForm=",ExpressionUUID->"51d67294-0d86-41af-9a80-\
150aacdfe3cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M3", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.764788835377181*^9, 3.7647888397953587`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"8c98bf07-fb30-42b7-8831-ee01363a5065"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "2"}]},
     {"2", "7"},
     {
      RowBox[{"-", "4"}], 
      RowBox[{"-", "5"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7647888608520036`*^9, 3.7647889423000345`*^9},
 CellLabel->
  "Out[9]//MatrixForm=",ExpressionUUID->"e3d3cc5e-85df-48b4-955d-\
34d2dde26df4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Problem 2: Matrix elements", "Subsubsection"]], \
"Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7631083904244323`*^9, 3.7631083966309237`*^9}, {
  3.763922819230687*^9, 
  3.7639228221507454`*^9}},ExpressionUUID->"b7a4cc63-12ba-4ef8-b26d-\
886bd84044f3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"M", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Eigensystem", "[", "M", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eigensystem", "[", "M", "]"}], "//", "MatrixForm", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "easier", " ", "to", " ", "see", " ", "what", " ", "this", " ", "matrix", 
    " ", "looks", " ", "like", " ", "if", " ", "you", " ", "put", " ", "it", 
    " ", "in", " ", "standard", " ", "form"}], " ", "*)"}]}]}], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"db1109a1-ec85-4cf5-9eb0-cb4bb3c05471"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "3"},
     {"2", "2"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7647889973652425`*^9},
 CellLabel->
  "Out[12]//MatrixForm=",ExpressionUUID->"679cb1bc-a4f1-41b5-8143-\
a432f4be2533"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", "2"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7647889973702292`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"258a4a7a-c99a-4606-a092-1aa9d3ce2529"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "2"}], "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764788997374219*^9},
 CellLabel->
  "Out[14]//MatrixForm=",ExpressionUUID->"49deb444-14e4-4857-90fb-\
67725e47dce1"]
}, Open  ]],

Cell["\<\
The two elements (4 and -1) in the first row are the two eigenvalues of M.  \
The two vectors {1,1} and {-3,2} in the second row are the eigenvectors \
associated with each of the eigenvalues.

a) Use the Part function (double brackets [[ ]]) to pull out the second \
eigenvalue (i.e. -1) from the matrix returned by Eigensystem[M]
b) Use double brackets to pull out the second eigenvector (i.e. {-3,2}) from \
the matrix returned by Eigensystem[M] 
c) Use double brackets to pull out the first element (i.e. -3) of the second \
eigenvector.  Hint: There are several ways to do this, including an extension \
of the \[OpenCurlyDoubleQuote]alternative\[CloseCurlyDoubleQuote] method \
described above.  See if you can do this with just ONE set of double-brackets\
\>", "Text",
 CellChangeTimes->{{3.7639231740397887`*^9, 3.7639233005483212`*^9}, {
  3.7639233350280113`*^9, 3.763923524241799*^9}, {3.763923563969594*^9, 
  3.7639235799929147`*^9}, {3.76398467688533*^9, 3.7639846838274193`*^9}, {
  3.7639856898963184`*^9, 3.7639857199423037`*^9}, {3.7647881531181164`*^9, 
  3.764788154587204*^9}},ExpressionUUID->"01498197-436c-4e24-8541-\
b759f5e5af05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"2", "a"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7640714952282257`*^9, 3.7640715630431643`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"aec2a18b-d268-4469-a66d-c34c00810962"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.7640715908723016`*^9, 3.764788867965002*^9, 
  3.764788948299982*^9, 3.764789001337616*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"852ce8fb-b6bf-4a0b-be79-aa0775c4a67d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"2", "b"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.764071593653654*^9, 3.764071614935677*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ab7641ee-cef0-4717-99ed-d20905b61135"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "3"}], ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.764071619170208*^9, 3.7647890199179096`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"b60f5165-7068-458f-bbaf-8ed170b69c10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"2", "c"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7640716221859426`*^9, 3.764071634280154*^9}, {
  3.764071728861717*^9, 3.7640717824105167`*^9}, {3.7640718161617656`*^9, 
  3.764071826490269*^9}, {3.7640718978522115`*^9, 3.764071957198118*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"87ddba56-b72d-4602-917d-6fedfbac6028"],

Cell[BoxData[
 RowBox[{"-", "3"}]], "Output",
 CellChangeTimes->{
  3.764071827255895*^9, {3.764071902274246*^9, 3.764071957666888*^9}, 
   3.764789022741957*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"db4c9a92-81ae-4de0-9c49-d7ef21bd891b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "using", " ", "only", " ", "one", " ", "set", " ", "of", " ", "double", 
    " ", "brackets"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7640719818708897`*^9, 3.7640720134033127`*^9}, {
  3.76407205409229*^9, 3.764072076296256*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"5342e358-89ab-46d8-acce-4463a2ff649f"],

Cell[BoxData[
 RowBox[{"-", "3"}]], "Output",
 CellChangeTimes->{3.76407205865493*^9, 3.764789026073017*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"b5ff4262-c329-428f-af91-846f4253d0b6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Problem 3: Determinants", "Subsubsection"]], \
"Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7631083904244323`*^9, 3.7631083966309237`*^9}, 
   3.763985505702757*^9},ExpressionUUID->"846274e2-26e5-4974-8eea-\
408192ab34a1"],

Cell[TextData[{
 "(3.3.2 from HW#7) Find the determinant of:\n\t",
 Cell[BoxData[
  FormBox[
   TagBox[
    RowBox[{"(", GridBox[{
       {"5", "17", "3"},
       {"2", "4", 
        RowBox[{"\[Minus]", "3"}]},
       {"11", "0", "2"}
      }], ")"}],
    "MathMLPresentationTag",
    AutoDelete->True], TraditionalForm]],ExpressionUUID->
  "0b33fe76-5d3c-451e-8ebb-a1c4a52e26a4"]
}], "Text",
 CellChangeTimes->{{3.7614937352535877`*^9, 3.761493986053626*^9}, {
   3.7614941064590654`*^9, 3.761494113729211*^9}, {3.7614941463008633`*^9, 
   3.7614941832906055`*^9}, {3.7614942173332863`*^9, 3.7614942187373157`*^9}, 
   3.763108456564433*^9, {3.764072544151039*^9, 
   3.7640725580267253`*^9}},ExpressionUUID->"68111252-87c1-48b8-ab98-\
a36a71e215da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "3", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"M3A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "17", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "0", ",", "2"}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7640725659958687`*^9, 3.764072600450672*^9}, {
  3.7647877350768566`*^9, 3.764787739592787*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"3a300de0-ac95-4c13-aa4a-2dab8cb3f0bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "17", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "0", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7640726037633333`*^9, 3.7647890321527505`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"ff33902e-d90c-4b96-a39b-dbc9881e2291"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M3A", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7647890365031137`*^9, 3.7647890407617197`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"04c7d49c-3bfe-428a-bfa2-cdaaf2fa7a54"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"5", "17", "3"},
     {"2", "4", 
      RowBox[{"-", "3"}]},
     {"11", "0", "2"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764789042523007*^9},
 CellLabel->
  "Out[20]//MatrixForm=",ExpressionUUID->"8843e3b6-d5c5-4305-b83f-\
7707a802023c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "M3A", "]"}]], "Input",
 CellChangeTimes->{{3.764072605950941*^9, 3.764072618217198*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"a1c1e562-b838-4f63-a866-08f434c1f88b"],

Cell[BoxData[
 RowBox[{"-", "721"}]], "Output",
 CellChangeTimes->{3.7640726190453396`*^9, 3.7647890460166597`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"7586b99d-a222-4db2-8593-e64f25b09040"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 4: matrix inversion", "Subsubsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448994860368824`*^9}, {
   3.5449001887908826`*^9, 3.5449001984948826`*^9}, {3.544900323174883*^9, 
   3.5449003297118826`*^9}, {3.545420930038125*^9, 3.5454209301821394`*^9}, {
   3.5568366512698727`*^9, 3.5568366514998727`*^9}, {3.562015777698806*^9, 
   3.5620157777548056`*^9}, 3.6081504745853157`*^9, 3.7609725764452963`*^9, 
   3.7631085599161935`*^9, {3.763108843089053*^9, 3.763108852556796*^9}, 
   3.763916655940507*^9, 
   3.7639855160456896`*^9},ExpressionUUID->"5aba9b93-e72b-42d9-9eb0-\
d2dadade72b5"],

Cell[TextData[{
 "(3.2.12 from HW 7)  a) Set up the following set of simultaneous equations \
in the form ",
 StyleBox["M.r",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " = ",
 StyleBox["k",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", and solve for ",
 StyleBox["r",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " (i.e. the vector whose components are the values of x, y, and z) using \
matrix inversion as in the example above. b) check your answer by multiplying \
the matrix ",
 StyleBox["M",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " by the vector ",
 StyleBox["r",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " and formatting using MatrixForm to see that it gives you ",
 StyleBox["k",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ".\n\t2x + 5y + 1 = 2\n\tx + y + 2z = 1\n\tx + 5z = 3"
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448994860368824`*^9}, {
   3.5449001887908826`*^9, 3.5449001984948826`*^9}, {3.544900323174883*^9, 
   3.5449004720538826`*^9}, {3.5449007029598827`*^9, 
   3.5449007104138823`*^9}, {3.5449632964424424`*^9, 3.544963411985687*^9}, {
   3.5568899222187333`*^9, 3.5568899804275537`*^9}, {3.562015743053806*^9, 
   3.562015744118806*^9}, {3.600188768069312*^9, 3.600188769677473*^9}, {
   3.608155661030316*^9, 3.6081557001273155`*^9}, {3.6346668115871935`*^9, 
   3.6346668916301937`*^9}, {3.6346671395491934`*^9, 3.634667236647194*^9}, {
   3.634667362741194*^9, 3.6346674588151937`*^9}, {3.634672848189415*^9, 
   3.6346728668591*^9}, 3.7609725764452963`*^9, 3.7631085599161935`*^9, {
   3.763108682339187*^9, 3.7631088268363533`*^9}, {3.7631090589886703`*^9, 
   3.7631090726688175`*^9}, {3.7631091098281593`*^9, 3.76310915687514*^9}, {
   3.7631092149993353`*^9, 3.7631092917548914`*^9}, {3.7631094446877127`*^9, 
   3.7631095182251115`*^9}, 3.763923653518386*^9, 
   3.763985540631605*^9},ExpressionUUID->"7633ad2f-e4cf-42f0-8c58-\
b306c668835e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"4", "a"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M4", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "5"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"M4", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.7640727149404774`*^9, 3.7640728576184974`*^9}, {
  3.764788464670565*^9, 3.7647884717466288`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"56340be4-2aa9-45fd-aeb5-a86f145c0518"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "5", "1"},
     {"1", "1", "2"},
     {"1", "0", "5"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764788481568376*^9, 3.7647890497812834`*^9},
 CellLabel->
  "Out[23]//MatrixForm=",ExpressionUUID->"b40d9d12-23a1-451b-b36b-\
9ca49d890530"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k4", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "3", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"k4", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"d6104ac2-4f44-4feb-bab1-9efa62a82c0f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2"},
     {"1"},
     {"3"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764788483710658*^9, 3.7647890780093355`*^9},
 CellLabel->
  "Out[25]//MatrixForm=",ExpressionUUID->"dbbcd58e-da3d-4ec3-a62f-\
eacd6e7b37c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r4", " ", "=", " ", 
   RowBox[{
    RowBox[{"Inverse", "[", "M4", "]"}], ".", "k4"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"r4", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7647884758476615`*^9, 3.764788487482534*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"b639a3b6-daee-4419-8864-7a0946b14bb5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "2"}]},
     {"1"},
     {"1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764788489816283*^9, 3.764789080548543*^9},
 CellLabel->
  "Out[27]//MatrixForm=",ExpressionUUID->"f9eacaed-932e-4cf7-9709-\
f3d42dd3fe41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "b", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M4", ".", "r4"}], "//", "MatrixForm"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.764072870665934*^9, 3.7640728732285223`*^9}, {
  3.764434128028977*^9, 3.764434214647681*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"2d7a8cd8-68ce-4915-b753-67e33a27961d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2"},
     {"1"},
     {"3"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764788492964859*^9, 3.764789083053519*^9},
 CellLabel->
  "Out[28]//MatrixForm=",ExpressionUUID->"4aeb186e-30ba-40ce-be5d-\
6c26d49a65b3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 5: Eigenvectors & eigenvalues", "Subsubsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448994860368824`*^9}, {
   3.5449001887908826`*^9, 3.5449001984948826`*^9}, {3.544900323174883*^9, 
   3.5449003297118826`*^9}, {3.545420930038125*^9, 3.5454209301821394`*^9}, {
   3.5568366512698727`*^9, 3.5568366514998727`*^9}, {3.562015777698806*^9, 
   3.5620157777548056`*^9}, 3.6081504745853157`*^9, 3.7609725764452963`*^9, 
   3.7631085599161935`*^9, {3.763108843089053*^9, 3.763108852556796*^9}, 
   3.763916655940507*^9, {3.763917562830291*^9, 3.7639175705524454`*^9}, {
   3.7639184087992315`*^9, 3.763918417291402*^9}, 
   3.763985548510706*^9},ExpressionUUID->"fc9b47d5-6b0f-4682-9557-\
dd05176bd6ce"],

Cell[TextData[{
 "(3.11.15 from HW 7)  a) Define the following matrix, then display it in \
standard form:  ",
 Cell[BoxData[
  TagBox[
   RowBox[{"M", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "3", "0"},
       {"3", "2", "0"},
       {"0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]],
  CellChangeTimes->{{3.7639168380321393`*^9, 3.7639168696281395`*^9}, {
    3.763917495164936*^9, 3.7639175211624565`*^9}, 3.763917759492235*^9},
  ExpressionUUID->"35d6656b-1612-4031-b04a-28388dfe110f"],
 "\nb) Find the eigenvalues and eigenvectors of M using the commands \
Eigenvalues and Eigenvectors.  Display the output of each, then see what it \
looks like in standard form using MatrixForm as well.\nc) Use double brackets \
after the Eigenvectors command to pick out the second of the three \
eigenvectors.  Check to see that you did this correctly - the second \
eigenvector is the second ",
 StyleBox["row",
  FontWeight->"Bold"],
 " of the matrix output by the Eigenvectors command\nd) Find the eigenvalues \
and eigenvectors of M using the command Eigensystem.  On another line, \
display the output in standard form.\ne) Use double brackets to pick out the \
second eigenvalue from the Eigensystem command, and use double brackets to \
pick out its associated eigenvector."
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448994860368824`*^9}, {
   3.5449001887908826`*^9, 3.5449001984948826`*^9}, {3.544900323174883*^9, 
   3.5449004720538826`*^9}, {3.5449007029598827`*^9, 
   3.5449007104138823`*^9}, {3.5449632964424424`*^9, 3.544963411985687*^9}, {
   3.5568899222187333`*^9, 3.5568899804275537`*^9}, {3.562015743053806*^9, 
   3.562015744118806*^9}, {3.600188768069312*^9, 3.600188769677473*^9}, {
   3.608155661030316*^9, 3.6081557001273155`*^9}, {3.6346668115871935`*^9, 
   3.6346668916301937`*^9}, {3.6346671395491934`*^9, 3.634667236647194*^9}, {
   3.634667362741194*^9, 3.6346674588151937`*^9}, {3.634672848189415*^9, 
   3.6346728668591*^9}, 3.7609725764452963`*^9, 3.7631085599161935`*^9, {
   3.763108682339187*^9, 3.7631088268363533`*^9}, {3.7631090589886703`*^9, 
   3.7631090726688175`*^9}, {3.7631091098281593`*^9, 3.76310915687514*^9}, {
   3.7631092149993353`*^9, 3.7631092917548914`*^9}, {3.7631094446877127`*^9, 
   3.7631095182251115`*^9}, {3.7639176333867035`*^9, 3.763917685647749*^9}, {
   3.7639177970699873`*^9, 3.7639178490610275`*^9}, {3.763917897791003*^9, 
   3.763917956185172*^9}, {3.7639180214714785`*^9, 3.763918128698625*^9}, {
   3.7639182370337934`*^9, 3.763918252978113*^9}, {3.7639182942169385`*^9, 
   3.763918401798092*^9}, {3.7639184454569654`*^9, 3.7639184635413275`*^9}, {
   3.763980552640482*^9, 3.7639806000972905`*^9}, {3.763980657709709*^9, 
   3.763980681952265*^9}, 3.763985554391981*^9, {3.7639858217180195`*^9, 
   3.76398583769242*^9}},ExpressionUUID->"3489b19d-c071-47a2-9df4-\
0ce8197c4316"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"5", "a"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"M5", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"M5", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.764434280607787*^9, 3.7644343431945076`*^9}, {
  3.764434430692443*^9, 3.76443443328635*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"0563cc32-cd7d-4b0a-a3aa-9bfdd22baea8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7644344393027163`*^9, 3.764670246354483*^9, 
  3.7647890925336585`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"b3c855ed-1630-4f1f-bfb2-3f72a3145b63"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "0"},
     {"3", "2", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7644344393027163`*^9, 3.764670246354483*^9, 
  3.7647890925396433`*^9},
 CellLabel->
  "Out[30]//MatrixForm=",ExpressionUUID->"3c5cbff5-8ec4-4a39-999c-\
e48ab10e7ac1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"5", "b"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"M5b1", "=", 
    RowBox[{"Eigenvalues", "[", "M5", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"M5b2", " ", "=", " ", 
    RowBox[{"Eigenvectors", "[", "M5", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7644343506783695`*^9, 3.7644344676972055`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"977a7a69-f672-4473-b1bd-c38deb35a129"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.76443439921933*^9, 3.764434468228391*^9, 
  3.764670248315237*^9, 3.7647890983231688`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"e32eb802-b17a-4f04-a6f0-f600120ade41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.76443439921933*^9, 3.764434468228391*^9, 
  3.764670248315237*^9, 3.7647890983301506`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"a3f065fd-fa42-4c55-8169-fcc464e51d83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"5", "b", " ", "continued"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"M5b1", " ", "//", "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{"M5b2", " ", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.76443447471362*^9, 3.7644345022018285`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"619ccb36-9e29-4ab0-8703-86bdf9999c74"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"5"},
      {
       RowBox[{"-", "1"}]},
      {"1"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7644345029829526`*^9, 3.7646702500067186`*^9, 
  3.764789103364681*^9},
 CellLabel->
  "Out[33]//MatrixForm=",ExpressionUUID->"d79b4022-b44c-43c4-8989-\
31feb10ae498"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "0"},
     {
      RowBox[{"-", "1"}], "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7644345029829526`*^9, 3.7646702500067186`*^9, 
  3.7647891033686705`*^9},
 CellLabel->
  "Out[34]//MatrixForm=",ExpressionUUID->"7a21f763-3f96-447a-85bb-\
f66197bee008"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"5", "c"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Eigenvectors", "[", "M5", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.764434533424675*^9, 3.7644345376908555`*^9}, {
  3.7644346457830534`*^9, 3.764434685365403*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"9cfa4143-53e3-4497-a031-2884ae0ae780"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7647891060435143`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"17fd49a1-8370-4a5a-ac93-196e27b032f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"5", "d"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Eigensystem", "[", "M5", "]"}]}]], "Input",
 CellChangeTimes->{{3.764434725963942*^9, 3.7644347299485283`*^9}, {
  3.7644347619208565`*^9, 3.764434770359474*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"3d63fde8-5c9e-4862-89c5-ba20d4f69a6e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7644347714531746`*^9, 3.764670255131012*^9, 
  3.7647891186926737`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"e04f4950-1405-4af0-baa1-a885a1d531c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigensystem", "[", "M5", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7644347888457503`*^9, 3.7644347995815544`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"33673a28-79f0-466b-bd99-e3530598d610"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"5", 
      RowBox[{"-", "1"}], "1"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7644348003626633`*^9, 3.764670259029585*^9, 
  3.7647891226361227`*^9},
 CellLabel->
  "Out[37]//MatrixForm=",ExpressionUUID->"f3607e02-ce22-456c-ae5a-\
e004b5f69140"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"5", "e"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "M5", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7644348507747884`*^9, 3.76443488271586*^9}, {
  3.7644349421756296`*^9, 3.7644349627244635`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"1dd2951e-7bcc-4050-8b7c-51e3c9e34cd9"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.7644349495512304`*^9, 3.764434963412031*^9}, 
   3.764670261587741*^9, 3.7647891254326425`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"ca6a0933-5b83-4ffc-8833-8c332c6113f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigensystem", "[", "M5", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7644349510201025`*^9, 3.764434984289234*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"b119356c-6991-448a-873f-ef9b22aa3e0b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7644349858362703`*^9, 3.764670262976015*^9, 
  3.764789127410383*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"445d9496-8b75-4688-a817-18db76bed123"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 6. Coupled harmonic oscillators, normal modes", "Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.763985262742242*^9, 3.7639852701991377`*^9}, 
   3.7639855625196857`*^9},ExpressionUUID->"07f8423f-dda2-4c47-bc95-\
fad96c09b4c9"],

Cell[TextData[{
 "For simplicity, let's set ",
 StyleBox["m",
  FontSlant->"Italic"],
 " = 1 and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "s"], "=", 
    RowBox[{
     SubscriptBox["k", "b"], "=", "1"}]}], TraditionalForm]],ExpressionUUID->
  "7523a573-5fbb-42ae-b853-ee6c3abaeaa6"],
 " for some choice of units. \na) Create the matrix ",
 StyleBox["M",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " of spring constants and the vector ",
 StyleBox["r",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " containing the initial positions ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "0"], TraditionalForm]],ExpressionUUID->
  "ba72cb8e-478d-44fc-811e-3cf6c4763385"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]],ExpressionUUID->
  "b320d25b-97b8-4b0d-a5c4-faf5abbec83e"],
 ".\nb) Use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to solve the eigenvalue equation and determine what two frequencies are \
allowed, along with what the relationship is between ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "0"], TraditionalForm]],ExpressionUUID->
  "652ebf4d-c656-4d22-9795-88974aed4050"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]],ExpressionUUID->
  "b9d465aa-5f8d-4c7d-acfa-e4b3aca6516c"],
 " for each allowed frequency. \nc) Compare the two frequencies of the two \
modes to the frequency the masses would have if they were not coupled \
together. Qualitatively explain why the allowed frequencies are higher, \
lower, or the same as the uncoupled case."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.432564721977771*^9, 3.432564737691535*^9}, {
   3.432564792103362*^9, 3.432565255468696*^9}, {3.432571484258397*^9, 
   3.4325714845708947`*^9}, {3.432572026911174*^9, 3.43257202753617*^9}, {
   3.4325720627703195`*^9, 3.4325722249880314`*^9}, {3.4325722829720354`*^9, 
   3.432572313253091*^9}, {3.4325724511272087`*^9, 3.432572662985228*^9}, {
   3.432573774078693*^9, 3.4325737746099358`*^9}, {3.4325738285154963`*^9, 
   3.4325738355779057`*^9}, {3.4325739204361944`*^9, 3.432574004356995*^9}, {
   3.4325743731049156`*^9, 3.4325744504047585`*^9}, {3.4325850464754434`*^9, 
   3.4325850971639166`*^9}, {3.4326681888268003`*^9, 3.432668192201865*^9}, {
   3.432732296729523*^9, 3.432732355449401*^9}, {3.4329100494962735`*^9, 
   3.432910061027745*^9}, {3.439673770584632*^9, 3.439673770584632*^9}, {
   3.475426102722923*^9, 3.475426121395156*^9}, 3.501282170832631*^9, {
   3.528717933816077*^9, 3.5287179531890774`*^9}, {3.528718001143077*^9, 
   3.528718002721077*^9}, {3.5448982104953327`*^9, 3.5448982167999163`*^9}, {
   3.5448982862210016`*^9, 3.544898314159413*^9}, {3.5449007436998825`*^9, 
   3.5449007505648823`*^9}, {3.5449008195278826`*^9, 
   3.5449009980248823`*^9}, {3.5449010646598825`*^9, 
   3.5449012200298824`*^9}, {3.5449012762048826`*^9, 3.544901791313883*^9}, {
   3.5449018355108824`*^9, 3.5449022199348826`*^9}, {3.5449024130718822`*^9, 
   3.544902523089883*^9}, {3.5449027436528826`*^9, 3.5449027967918825`*^9}, {
   3.5449028395978823`*^9, 3.5449028477248826`*^9}, {3.5449563228170147`*^9, 
   3.544956398861618*^9}, {3.544956562589989*^9, 3.544956576718402*^9}, {
   3.5449766214438524`*^9, 3.5449766603107386`*^9}, {3.5453979547166667`*^9, 
   3.5453980690871024`*^9}, {3.562031159242265*^9, 3.5620313748888273`*^9}, {
   3.6002006999865537`*^9, 3.6002008722487783`*^9}, {3.634675586943308*^9, 
   3.6346756233049436`*^9}, 3.7609725764452963`*^9, 3.7631085599629765`*^9, {
   3.7631101105583153`*^9, 3.7631101127735014`*^9}, {3.7631118627302523`*^9, 
   3.763111874043397*^9}, {3.7639203077435565`*^9, 3.7639203485753736`*^9}, {
   3.7647876658839006`*^9, 
   3.7647876676033335`*^9}},ExpressionUUID->"72b6bf95-7831-4196-8c20-\
ba00d427acdb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"6", "a"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"M", " ", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.7644353235917234`*^9, 3.7644353348117933`*^9}, {
  3.764435376005102*^9, 3.764435437841133*^9}, {3.7644355190236893`*^9, 
  3.764435562920052*^9}, {3.764435594549423*^9, 3.764435630085121*^9}, {
  3.7645921518429766`*^9, 3.764592153879746*^9}, {3.764592241150858*^9, 
  3.764592276523937*^9}, {3.764789142705431*^9, 3.764789143899237*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"ffa7c708-31ce-489d-90d6-303839862b9c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], "2"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7644356314759264`*^9, 3.764592279579277*^9, 3.764601259224285*^9, 
   3.764614228281336*^9, 3.7646702685122013`*^9, {3.7647891313049307`*^9, 
   3.764789152931075*^9}},
 CellLabel->
  "Out[45]//MatrixForm=",ExpressionUUID->"1768405e-2e67-4d5c-afc4-\
dd25620a98b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      SubscriptBox[
       StyleBox["u",
        FontSlant->"Italic"], "0"], "}"}], ",", 
     RowBox[{"{", 
      SubscriptBox[
       StyleBox["v",
        FontSlant->"Italic"], "0"], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"r", " ", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"fc55a281-aacb-428e-8828-a88a83c66dce"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["u", "0"]},
     {
      SubscriptBox["v", "0"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7647891549736104`*^9},
 CellLabel->
  "Out[47]//MatrixForm=",ExpressionUUID->"8ad1e0b5-63b4-4f1c-bd3b-\
cb9f2b265c62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"6", "b"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.7644360509298115`*^9, 3.7644360631813965`*^9}, {
  3.7645923349919415`*^9, 3.764592336741385*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"63c37203-ee50-4005-b6f6-8b68dc0d5b64"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", "1"},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7644360648376174`*^9, 3.7645923376709023`*^9, 
  3.764601262486582*^9, 3.764614237094466*^9, 3.7646702706066127`*^9, 
  3.764789161380469*^9},
 CellLabel->
  "Out[48]//MatrixForm=",ExpressionUUID->"08b32ff0-b2a8-44e6-8ee7-\
fae58fb57a9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", " ", "=", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Eigensystem", "[", "M", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7645926995292463`*^9, 3.764592711090688*^9}, {
  3.7645936907655506`*^9, 3.7645937110890903`*^9}, {3.764593796867087*^9, 
  3.7645938287679105`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"40dd4942-0f05-49a5-b2c6-e39d35f90f68"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox["3"], "1"},
     {
      RowBox[{"{", 
       RowBox[{"\[ImaginaryI]", ",", "1"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7645938295488544`*^9, 3.764601265263791*^9, 
  3.764614238967367*^9, 3.764670272511518*^9, 3.7647891638064847`*^9},
 CellLabel->
  "Out[50]//MatrixForm=",ExpressionUUID->"66de33b4-e134-4b2a-8f00-\
cac8b2bd6689"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Omega]1", " ", "=", " ", 
  RowBox[{"\[CapitalOmega]", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Omega]2", " ", "=", " ", 
  RowBox[{"\[CapitalOmega]", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7645938439226933`*^9, 3.7645938957713714`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"bccaea70-85b1-4746-84c9-35ecd29dd97f"],

Cell[BoxData[
 SqrtBox["3"]], "Output",
 CellChangeTimes->{3.7645938633364267`*^9, 3.7645938972835693`*^9, 
  3.764601266921341*^9, 3.7646142414013414`*^9, 3.764670274071336*^9, 
  3.764789178715596*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"283c8e41-185e-481f-ac0d-e46ced433246"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7645938633364267`*^9, 3.7645938972835693`*^9, 
  3.764601266921341*^9, 3.7646142414013414`*^9, 3.764670274071336*^9, 
  3.764789178721581*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"f8fc03b1-e588-47c9-8cbf-315f58c3aeff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"6", "c"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"uncoupled", " ", "frequencies"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Omega]O1", " ", "=", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "/", "1"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"\[Omega]O2", " ", "=", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "/", "1"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.764786727100362*^9, 3.7647867313848953`*^9}, {
  3.7647869905828505`*^9, 3.764787046335942*^9}, {3.7647870808636017`*^9, 
  3.764787087297411*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"0beea76f-dd34-4589-b220-52f01158a930"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.764787075951742*^9, 3.764787088153161*^9}, 
   3.7647891830769286`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"239c67a5-81cd-4549-9b46-af9b7db292ea"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.764787075951742*^9, 3.764787088153161*^9}, 
   3.764789183081916*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"914bd3ef-d7c3-43fb-b3b9-acb1023e5ece"]
}, Open  ]],

Cell["\<\
Each mass would have an uncoupled frequency of 1. Qualitatively this makes \
sense that the coupled frequencies would be greater than or equal to their \
uncoupled frequencies. This is because with more springs in the system, there \
could only be an increase in oscillation since more spring force is applied.\
\>", "Text",
 CellChangeTimes->{
  3.76478920843808*^9},ExpressionUUID->"f6fb5558-4fce-4121-b788-7a23de2a929c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "please", " ", "run", " ", "these", " ", "before", " ", "the", " ", "next",
     " ", 
    RowBox[{"problem", ".", " ", "They"}], " ", "will", " ", "not", " ", 
    "output", " ", "anything", " ", "but", " ", "the", " ", "info", " ", 
    "needs", " ", "to", " ", "be", " ", "made"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"omega1", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "/", "m"}], "]"}], "/.", 
      RowBox[{"m", "\[Rule]", "1"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"omega2", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "/", "m"}], "]"}], "/.", 
      RowBox[{"m", "\[Rule]", "1"}]}]}], ";"}]}]}]], "Input",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7647892205616426`*^9, 3.7647892656051807`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"86a906aa-f519-4a25-899c-2fcfd22e2be2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"uinit1", "=", 
   RowBox[{
    RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vinit1", "=", 
   RowBox[{
    RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uinit2", "=", 
   RowBox[{
    RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vinit2", "=", 
   RowBox[{
    RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.764789269176587*^9, 3.7647892742625704`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"ad188dc5-03a8-4474-9fb4-3ac2db145937"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"upos1", "[", "t_", "]"}], "=", 
   RowBox[{"uinit1", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"omega1", "*", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vpos1", "[", "t_", "]"}], "=", 
   RowBox[{"vinit1", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"omega1", "*", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"upos2", "[", "t_", "]"}], "=", 
   RowBox[{"uinit2", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"omega2", "*", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vpos2", "[", "t_", "]"}], "=", 
   RowBox[{"vinit2", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"omega2", "*", "t"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7647892836484303`*^9, 3.764789287222187*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"70de1c2c-bc57-4299-8576-80c55d68066f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 7.  Coupled harmonic oscillators, plots", "Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7639852136328125`*^9, 3.763985223055333*^9}, 
   3.763985286455546*^9, {3.763985567277746*^9, 
   3.7639855677769527`*^9}},ExpressionUUID->"d8f08601-8ca6-46a7-8809-\
f3bbe9aa609f"],

Cell["\<\
a) Plot the positions of the masses as a function of time for the first \
normal mode.  Plot them both on the same graph.
b) Repeat for normal mode 2\
\>", "Text",
 CellChangeTimes->{{3.7639243308219748`*^9, 3.763924350715372*^9}, {
  3.763985056989204*^9, 
  3.763985098315134*^9}},ExpressionUUID->"dfdefbd9-d014-4a6a-9e99-\
f7595199da11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"7", "a"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"upos1", "[", "t", "]"}], ",", 
      RowBox[{"vpos1", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{
       RowBox[{"-", "2"}], "*", "Pi"}], ",", 
      RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.764436407355435*^9, 3.7644365078153715`*^9}, {
  3.764436559943658*^9, 3.76443662747967*^9}, {3.764594002089637*^9, 
  3.7645940329027777`*^9}, {3.764594111465822*^9, 3.764594130848951*^9}, {
  3.7645942080845814`*^9, 3.764594230088846*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"30f3a1a2-1909-48ab-8a1e-14dc0b2418ff"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
30f/P8q1s0w=
          "]]}, Annotation[#, "Charting`Private`Tag$10139#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
hZIlDgMEOrNbP+NeGAl3E/zQU9BNIM2woC2W/iS8KtRuZ0obgbRFOt/Yvyfh
tlG0cLVGAl1ivX/N/TkJr5l67qJaRiADh+8FXnYk/Nq8FinpL4EMCYbsJwsS
/uXNJrH8XALd6XyyHmdIwu3UMZbKBALd1/9tmqJPwnPtKHyF0QQyq2Cpy9Ii
4YW144wbYcz+zfaILlMl4Wf9vsU+eUcgO4V/5DolEt4kUp8870ygJ3HCT9pk
SXiZvsuKBLP/XwaEnh3fRMJ/OTOaTt0hkOfDRAZplQ83iHrCq65EIK+RySuU
WT78ONk7sn4PgXxvHcrfTOfDDxAmb0gbCRR0HvzkO/nwoubnNaYsBIqVrj2i
+4cPDy60rKwuZiDTPT/znTP48JSK++J1mQwks9vn3M9EPlzEc/TD83gGStp2
wVA4nA+/MT0WU/6WgTLFap0aXvLhd+3l/XRPMZAj5Sc35xM+PEZ5QC74IAOp
ivj4KFvz4ZspKhae2xkI578QFXiLDxcePhpluUJHpZy1xQYYH+55w69DPomO
3rH/1PE4woeXOzlblwfTkRarT0u2Ah8+INN5Q+g1HdWu6I5JbufD2506VSKv
0VHbdA25k5UPP1PzIKGJlY7Ge2v0bxfw4ikT2fsLMBpK6k7p9MnlxQ+9e6Gp
uIeGbDq97/9N48XZZoyHdMk0NNOi67AzmhcfMf3493PLOFqprgkddOPFOxu+
3Xv5YBzx59X0mWnw4pPxk5kRrszzIaTG5lEZD650yXo132EEvdV6zLaI8+A/
Dz66UKg3gnrWNvo7ZfHgV7JvFtrJjqCPd00y38fx4Ar/+vj6uoYRQ3ZtNfY1
D15WGuO0goZRAuzzbD/Gg2+PMr8UNz2ImJfjmJM53Hii95up3F39aLuCWhv1
Bxd+PU352Y6IVqSlNxooH8WF25X+/BZ4tBU52AVc1Ajlwr2mxQbwphb0L4te
ae/JhYuJBW9UJbUgx2Ph0PCAC79qL7mJYduEGvTWo31luXCfYI/dpw/XI3f7
fGv+pA342jGlZB3ZMjSWc4pzw09O/Bt3KSFh6Q0/fDLLbeM5cW/bP1UrLZ/A
wlTau/cLJ24TRX7/4eQXoFPIG/94ceJK5p9UpMlxMGHToGBnwYlr5zrkmhCp
MCd117BvDyf+a7OYbXgrDmx+zml54Ry40Ds7p6gH1VBgNuUgG8iBF4yMa7fs
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
30f/P97fBVs=
          "]]}, Annotation[#, "Charting`Private`Tag$10139#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{(-2) Pi, 2 Pi}, {-0.9999999932910578, 
        0.9999999932910578}}, {{-6.283185307179586, 
       6.283185307179586}, {-0.9999999932910578, 0.9999999932910578}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"upos1", "(", "t", ")"}], 
       RowBox[{"vpos1", "(", "t", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.764436496064357*^9, 3.7644365085651975`*^9}, {
   3.764436555115205*^9, 3.7644366286201515`*^9}, 3.764594037226889*^9, 
   3.764594112759569*^9, {3.7645942209935093`*^9, 3.764594231108201*^9}, 
   3.7646703130670033`*^9, 3.7647893016436033`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"b84564ca-5c38-4ee0-8d1f-a3538ef35f50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"7", "b"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"upos2", "[", "t", "]"}], ",", 
      RowBox[{"vpos2", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{
       RowBox[{"-", "2"}], "*", "Pi"}], ",", 
      RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.02", "]"}], ",", "Dashed"}], "}"}], ",", 
       RowBox[{"{", "Thick", "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.764594144154632*^9, 3.764594149864729*^9}, {
  3.764594244404683*^9, 3.764594244763771*^9}, {3.7645948611238327`*^9, 
  3.7645949395305567`*^9}, {3.764594987647361*^9, 3.7645951613373747`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"8a1fca71-3722-441c-9e11-1f9b64c834af"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.02], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
u1lvQpfJQ1s7hetsiv/ffVD4/++D/h/a3tkY
          "]]}, Annotation[#, "Charting`Private`Tag$10358#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJw1mnk41N/7/+1m7AkztCHJlmzvFtQ5pU3JXklSqdCmxVKJ0EKlREoJLUgR
hWwh55Ct7EvIln0ZM3NEJOv39bmu32/+mLke13ld17mfz/u+z7zOuY6S03nr
k3w8PDyx1Nf/fnebSpjMKMnjlvkF6kOAUabPKG25PM79rn52lGItpZEYOQV5
3EkrTSukeNmDg3tU5OTxhnV8de4US/wrm9KVlse+yhrfhSheOLEuAUjI4w7y
NsZ7noDR2nibvSLyOFJawKxmjoAu48W8h4Tksb9l/w8BiuveBXxw5ZPHe7CU
8ZJZAopkRg95zTNxV/kpP+kZAtL9Hem3ppn4guLYK9Y/AuLYlVlhk0zsX/Ht
ddwUAY/tjE68HGPiuiVrb276S8Dt4sRFKVwmVv14fUfOBAFeOkyUy2LiP+f0
OYv/EGBHm5Bv6mHi2z4WI+dGCTD1OF7W28nEywS37TjLJcCwq87jdysTn1id
E7yHTcDSnA81Yg1MbBMW2Jk8SIC4yjJfhRpqvpVHR7X7CZh/GKyhVsHEpt3Z
E2E9lD4X19smX5n45KxW/3Q7pa+hSc8KMXHjhbxGnlZKH9je5ZhHzb8hqWiw
iYB4hrKR9ycmDhJufmNXS4BLWdtoahwTvwnY3V9aSMWrv/tFwUsmvivar/zj
CwG7XubsqYxi4lpDM+/izwRoXH6SMBjOxItKLwXuSCOAq2rhsPwWE+tyre+1
vCDg16MvdC1/Jt5qmy46GklA7bxm9kYfJqa9qPk29Jjyt4kmvc+DiX20JyWv
36P8CiwqCz7BxGVHHG03eFDxjOl4Rh5l4jWGO/bYu1HxOL5UfuvAxFOvDyYe
dqX8WufjW2TLxJWZF9JpDgTM9f+n/28bNV98V+zoFgJubU984byKid2FV6aL
0wjAwd6WK5So8ZArl14tcMFs3R6+lqVMLF8XlCf5lwvcHbknTWWYOGlcW/JW
Pxc4XdZfo8VP6e+bbinGXAASv+T97mJgbgM+nHqBC7xJyLmkdgb+MzkfKeXM
BVn/HV1xvIWB+5XeSZgf4gLtIr6bjTUMnHH4df3R7VywtG3n7uwCBo7VSVg9
yOCCabH6Fp9oBrYI3RV1I4sD1tnE3fvvGQPzX+f1zk/kgEuRHsbccAa2S49x
bYzmgOFVjFdHghn4YVx26osbHNCy2cFlqzcD54S5hb8w44CsCwMTwnYMPHFB
6uDBVja42DgtHb6Yge8o/HPS6RgBEdYW9o8lGfi68yerM1UjIL827vUTUQbe
qlh+696XESBUZabzjJ+B7Rdd/usZMwKiS17sjRmXwy9Dter4HEZAedbWO28b
5HBwcFYhXyMLLI+8N5cXLoctmnSvyaQOg22MX9u+PJTDD1Nb0qeih8GpJ/r3
C4Ll8B3bgcNf7w6DjLB2hcKbctgwctxe7PgwML2nvaHUXQ5PG4VKnpcZBh7X
6i/V2shhvitTSXcuDYHvhxWG+hbL4Z2b4/9GLR0EFi+NwbSkHC6MeyHVLzQI
GrscIyTF5LAc+6cs8/cA6Dget81QQA5L2n/dYFwyAEZPab1++EcW4/gKbb+z
A4Dhtdne8IcsFtmzNJwvux+cCHGqfBghi8H+QysijfvAXEFSqqG8LM4bunNi
sWQ36E3/HWZFl8F2TT5/zbLqwbrXQo0PRBdjFSP1qqVCicBYuV47eGoRbtgm
FHqqrwItvSbhe58lhcsDtcpAQQc6Ff+dETMghaerV5v/nuhAWVWB6Sk9Utj8
KOfH7TWdyEpxYbC6VQpfPVIudSC6EwWWEOtFFVLYdM1Du8dXfiEiWacW8V4K
V+sbtr150oWK4sMbX56VwkFTPSKKxj1IstrifKqrFD775HLnxL4e5PBXVKTw
hBTeISM3/vl8D/pregv0OEjhwtNF18TiepAW8UhS2SuFSVaXbQutFz3ZuN8/
cQ31fMqp1InaXlQbrWvn3CGJ80uDlry07kc88ecjOholcUBhqKHw2X6k8z6l
0bZSEs8q507tv92PQj+rW5nkSWKbcatfydn9yLJJabdipCROeDX639olA6hW
Utq41VYST5WPuXp2UHxjbIV5pQRGuu+6d5kPIZ57Oo4lXyXwEV1lk/MnhpBO
mFu0cZ4EXqt1vOeq9xAKfcliaiZJ4E+HBLyMEoaQZX7PItodCfxeeovRudkh
VDtRz19kIoGlwhnjnnHDqMb10+B/eeKYK83rd6WNhep//bXc/EkcW1fTPxew
Wahpv3HujvfimNemaTNrjoXat5XcPxAljgNssodHV4wglmKz7tVr4ph/wmYg
12kECfycvpZvJI4bROoU9XtHEM0S9Bfri2MvveX7S8dGkGjZTfMqTXG85ure
hk18bCSdKabUuUQc/2lc5PpTkY1WhC0vXZgRw+/oV2wLHdjI0HSrlEm+GN71
SdFxZw0bbcaBV/dkiOHY9kvLmB1stGV9RY9NshgWVNtiXMlio12rbDNPRIvh
SdVFTp2CHLSP19k+0EcMs9+Nt7wz5KALn+/GfzMWwz4RHqsqXnCQh061eL2B
GH60TCu/IomDLr+VvtyqJYaX9Bwa+JDFQdefRJmOLBXD+gHM0qXVHBR8MYUr
NieKtf4uufBkhoMS1Os2WH4RxeG117NHLbnIdXVaoX+mKJ7bKubZY89FGqvC
dqeliGIYk2KSfYKLPihaOUi/EMWppIJLv8JF2Yw6v8bronj0WY+PdQwXlQvW
ldpBUdww0d/k2sNF9/jTLO5uEMW1tU2+QSwuMuMNa/msI4rPdY4m3xnjorpZ
S5aCkii2blt/W4+PoNbxWvEOXlEccMnBYqUiQSPdtbbHvorgcN1pHff9BH34
ldoRlieCX398KZDtQNCFjlDnok8iWGDi6Xi7E0F/WiyvrIwXwchHS6zGjaDZ
mtqo/lsiOIPx496e2wQVVKWqyPmK4F65jVEv7xHkXxGassNTBAflron68ZAg
wTJL9PYk9XyQ8P7BSIIkCmp7Tu0Qwapa3vqvkwmqzUs983yzCL5e+tRIII2g
R59D/3xfJ4J581MkTDMJksu0FNJaLYKf/H0meOULQS3pOg8dVohgfPK1klMh
Qc9TpZgPGCI4J5D2b00JQSuSa9W5wiL4x6WIitOVBPUkpqYv5xHBy/WbUVsN
QfFvQ40spuhY7GnSMe0GgtTiLPemDtGxA/3a6ys/CWK90mnq6qJjRZOrGy+0
E5T8QurIop90vOAj5m76iyCd57UXLn2j44YYPfyqj6A7Zl58/zAda38oiLcZ
JKhrfsljvxw6FlxSkN8zTNCGtMJVQql03FpjJWjOJujhcZfs+2/pmDtQdO0J
l6ABWXHTxS/p2Cb5xrLPowRtLk9vjYyg46JXGkM5YwRxtebnEm7TMZ+uEzGb
JGjHr7iHa3zpeJ7NWd39l6AXYaZKGR503LHUPsDqH0GTJiTd8CwdPzpHn46Z
Jmjv5ONthcfp2KQ6MLR0htL/zrBp5yE67r1426RilsqnfZdLtTUdp9V2LUqe
I8hWPPCf7W46vpIYPe06T+lHmsFtW+g4na9/lneBIIFLdUudNtLxeU0J5mWK
HVQufxjSoWNm/uM95RRnNC2F59XomP/psqcTFIveLaqbWEHpH/KcnqfYycj1
uA+D8k8t3LOP4lyO+ASfJB3nMcNpCRRLv/oUeFeIjn8U530yofi09UGm1DwN
h9y8dvkLFU+RwEJixAQNz/1xtV1MsUJ2vNEyDg0b85ns2U7Ff+nU7qq4Php+
3D7qYEPp+7Zk1FGjnYY9ZwPubaL0K1Y/GU1toGFTRe0f/JQ/V/yNbqyvoGHZ
Pfs2J0xR9ajXvbigiIY5RX5lKpS/av2Bb7bl0vAmScdLfhNUfT/VWl+RRsP9
k+Uwa5yqR9P6cqtEGla5Xmjw7TdVH7OX7Vte0bBd3wXLHEJQ0IdlbMdnVDyv
1SJucgjqPPrVt/8hDQuecKJpjhC0bvEpybNBNKwhjhM/DFH1cDlD76oXDYM7
62/v7qXqQcO+eOEcDdvwOZY4dREU0b6wL/AkDUckF8IDHQRt37LnargtDRde
Xfy3sYnKr0gPStGjYfu1ZypWllP5zQ+yMtCg4Z697L3Li6n8nl/Tm6tEw/Xx
TpoTiCD+xitC5VI0bJDJL7Ihm8pPjOTeHq4w7mS96ZGOp/JjkdnpOiCMF+nu
LB99QeWH79AF0iGMm02f6L2n+rnIOSF8tlIYn/6PnpIZQpCSzqZWuffCOOJE
3pDSZYLMrIcjtOOEcUfqRIzlRcpvjyc2O6KEMX/m8aijZwiqzuFUegYL49rv
WoEqRwjy3vICNZ4Rxg/8N5cYbyfozfHdPuzjwvjea8mTXpup/Nye3CDgIIwf
JhZdD1tP0Orv5un6ZsLYf3mH4Vl1ghqtF+IfaQnjXRerIjNECVrweH8sSUUY
t34orZjmJ0jj6YHlRUuFMTpcnKo8y0X+bR+f/haj4uWEpTPYXLTmxNF7lhwh
7G1j7v70OxcFehael/gghM/5p2yYCOCitKfntFQThHBWAq+7PbVet3+WH970
QgjblBQNvXbjIr35i07nQoQwN+NNcjO13v8KVN5X6SaEHx+aSfily0Ubnt00
vLdWCP81Z+w93cpBrNztgkJpgjhaVP1KtiwHvQ/L/u7+ThCPe6tl2gtz0FlX
9dDul4J4rVXOy/YpNuLIii/5EiKIPz80xD5tbDR6oVHH46wgjvGdouu8ZKNJ
1eMOPasFcflhmtwl6v+TL9z/U8ELAdyZxesyIDKCvp4au6IVIYDjdOinb0yx
0C14YvPzBwJYL/XE5YV+FhLk7vzm6UPxDUOhGMxCNFPJX1r2AvipppSlqwcL
SSzEiETJCuC9H6v7rJuG0ZIzeccu3+fH+3Zdjpe/NYSel5fvEL/Fjy1Vop1P
uw0hBdUmzbhr/Djwi4/SKzuKu0cnqk/z40Qy052rNYSYB1TvqZry49ow4w2p
DYNIxiQs/YcgPz7hdYr9cekgElviwm/gx4ftU9exsqL60fx36TejF3mx4NXw
cy02PcjqmWom4zQv/rcLn5Qx7EHxJw1LNjvx4h7p1Y2bFXvQbh6n/vvWvNhL
WvnyEXY3ivgvbZW6Pi8ezB8Nq7/Zjda8skg49ocH626s0o342IUcPO+/rffi
wcIlq5aFTHYgdyBme+rvPNrEz3HeVN+EcvSr8ETmNHr/fuulNf99Rh8XlaYy
vkyidVNy15pkvgJ3w0j+zefHUFtozughgVbw+PGS9v2OY2hj0L9di7e2ggxu
TMb5vWNoVaWoTYpfK5iMjT35WnMM3Q4pPnVnuhVcEU0uExj6jeJXpqs0cNvA
9faC4Iqjv9FWLWDvV9cB7lzvW3zQehSFVJsYfyzoAoa3j+waOs1G72ZevwzW
6QPfpnzfOO5ho6eqF1L+7eoDdmej+X5ospH+Hyhse6wPeNr8zC9kj6C3X47A
qrA+kKpkoxvlNoLOfeJZX/O7D6wu2KFgfomFXKUihmdT+oHM3zXsT1eHUJNq
3MpjcoMg7rSZqYb9ENI/quyopTUI9DpPJ7wyHELq7xLkurcMAsuSt0cfzAyi
a8p+KULnBkFwuNIPZ99BNKgRqA6LBgGfjmyBfMAAiszMdLB3HQLEdfah350+
dHmFjeur2GHQ+EFXyty5Dw3PfZuiZQ+D3D/OoUu39SFlvU4t24phcMu/LvTz
Qi/SYlqtfDQ+DBSeJYSNe/WiJIXe8sStLLCtzDLc5WQPskeBTgZtLKAuHrh4
nUkPUrB8/DyfwwISNnnhAko9SNnh+mJVnhHws3PV49ft3Uhd9o97tMoIcJuc
ftxm043istzfy5wdAc9WvYmw2NqFbnz9Y6o0MQJ8z7TKLVfsQr4bC/gyBNmg
xGmF9s+ZX6hKIS9fVY4N7L3/aC92/4V2NNgOv1/HBrcTX+gEHetENMX1ivpe
bNAqPK5/fnM78n/lcWAVYYObxVGGYKoZbbfwWLuynAOGqjeGn8xpRsFmVpuK
GjjA/GfzSPCVZsTXqRRl8osDFLiLY1qmmtDxv2wmZ4IDUhn3Fy7++4GUdtX1
/lTigo7TPsXx0w2IxZ+9d5EHF2z1VFhWkduAFpW921TrywXv/HI8f3s3oJdZ
exovBHGBx+M/qptn6lG6/Pma/c+5QKTg7N3mmTpU8dJqKqOAC9yUc6NlpmvQ
ZJSbVTovARvXT+495l2D3h+ZuxBEJ0DATG8hZboa7XFak7xpEQFRnknHds5U
ITFO2/69igSUlz9X9Z6tQKqFSz5MGRMQ3tHUXOpTgbzlA1t/mBDgOCZ9d/Hc
d/RG9u5Q+G4CJpYEjyTPfUO7RF+FpB8gQPn8tdRf82XI4Xul+dULBHBuZh/T
8itDn6521jt4EZDzbFz66kIpKrHeLKTkQ4BF0RlPaZ5S9O+G9Ik9QQT4yDoY
buctRtnfhY6vjiZgp8azkbCAr8j9fWKZ5GsCpEFjdCfvV7S4SyGt5Q0Bia5m
C5f5itDNXu8F0Y8ENOUZFyfxY/TqZKjYFCJg6VWnzjExhKICAj7WfiXgvvce
g1DpAnT+3Vlyr4yAM77Lur4vy0e1xSIb4qsJaL0utM51ZR5abjq+kb+egN3+
JFhQPRftmoUVJj8I0LhZuB4a5KCoHdkPT7UR8PxW0oOOjdloydH5fPNOAkQC
w3u9QRYqSR88J9tNAOvOyYeZuzPQNF5uuXOAAPt75v3Wlp+Qu5mHT/oQAd+D
1xuN7ktH6ZnXlBdYlJ4Q+qDGsVT0uX+03pgQoKfYfzW06gOSlbP8ueY3pX9l
9qqKlmS0dcbEimecgLFVd+sE+5KQhL3Exow/BNSpHfKF5B3iMZB4aDpJQKrm
GvVr0wmorxxZ4b8EhGovNGYKvkFbn+X7Mf8RcEG3zn9UKg59dMpjWE8TYGkQ
p6W59DWS1Axlnpsh4IgbK7XC/AX6uF4r4NQsAcs9QmhbTj5HOxe/sNw5R0Dn
Vb2jWdci0OCDRYFC8wTE+DVlaz56hAq+1Ci+pThHZGL5VqsHqHRhs6L6AgHr
5TZVa12/jRynem7ep/iMiciM9v5rKC/cYU8dxbUZBp9oR13QDqHTXn8pbvRI
3qyXZgHaKwcE/ndeGnN5+7BltDsYSa6YHKTYMtW+ZNPrABCQoW2WTnFdvLSc
jcddoGNoIuhIcaLZSf2MuFDQ035QeYSKh7WjsG3zg8fgzs2uuIMUa2xZduub
1zPwycHpXiKl54zRVS3bo9FAqjOoqZXS2/T89Gmi8goUfZW7y6H8mHz6rCBD
PhYkS47FdlN+yT0plfaWiAehNIVV2ZSf6x/9cQb8CUBpY7KU2xQBdg+V8wSm
3gKOW6+zEOX/lfuWkt/ZiUD3M0Pdf4LyJzA527YpBWTSTv9ljBHQcrNVVKHi
I8Cu34XWjVL9AAVSya9UkPsw+c5/XEr/Jj2BzMZ08NI9f6RlmABtY9MPjJpP
YO6QXJ3PIAEFhkftvL9lAH3H3bp8/VR+1ockg4Is8HNT65m0XwS4rXuzPzYn
G9xp3rOnrZ2AeYN8HsFPOSBtvujjwE8qv3os2+9vcwE21l4c20DlX2vHnG1Y
AbAQM3/+voQA42cJIZOvEDB43r87pJAAsRv8UmZ2GPTPdRru/ULAMOf4a45L
Iej/u5N9JIOA2BKVYp2gr0DSeFzl5yuq/mYa7/NKFoNOcf8jL6IIuK57e199
RDF4XK8iACMIOBTTP+CeUALWXReNZwYTIOOZQM8uKQP8I06/V7gTwPd+f33Q
3nJgsT5Z+9tZAka7hKLsfpQDA7cyEQtnAqrMXLSm+74Bt/jS/FE7AgJV1Cw2
CVSCj0e6Ou5T69nssO33Y0q1YGP8sR1r57hgXCBFe/fJWuA08V4v4Q8XsFYI
husl1oL3QfTt0yNc0LIv8xC/bh3grdHjN2zlgsxCWU48rAfaXGMe+UxqvY1s
khw60gjkS1buczzBBScztD1q4xrB5/GnwckHucChJrAlZ7ARGHyNjGgx54I9
gutf3z3/AzxuW3vo+wYuULv4VE/TrwkEWZ2bkxXlgu5ddvvcXrSA3vNp8gcT
OWBzv8+xqo4W0C66Jc05hgOeB7w+p7XsJxDKeQMOhHGAdS7rNivqJzgwu/9C
9xUOKNL0zXKObAUN58+4R+3ggFiJWMaRx+3gXuB9Tmo7G+ixJtirt3eBem+V
HwXjI+DoBpp784kucHHS2HJb3wgICVT4F3irCxxtSb70oXEEsJSB4MDXLrBq
ppKlkzkCYg/dWRa/tRswqnzsRz1GwOIqBXNF2APSu3iUXQgL/PkIPjKN+oD9
l7GFd7XDoFLTSPrC4T6wKlefbpE/DOLervMs8+sDIzbf3ZrfDgPrl2uMvIr7
QAbreMrD68MgLWRJWcPefqCu+ObxK41h4Hbub2fI0QEQaXLe4aDvEBjU+Cgh
GDgEXE4uY7aID4LWN8vdfteyQcjOsciZrl6QJZRs/W6MDSJbfKVul/aCcJeN
64/IcADt1N3wqfe9wEzdlqfqAAeI5cn/98KrFxQk3330rpMDdqf/t2pQpBe8
/vQn6wibCzYcrl24u7YHZBztXxi4OQr2Gt25yTrVBa655e3a93IM2Kfq86y2
/QnsXq09EP1gElS9Hwpcer8YOAd94/tVOw1WhNVevN2di77e0tS8XzEPmhSl
L82uaUKGC09eqbbNg3+pQ3d8XZtQ+lUeuULWPFiyTc1yOLYJxbr94JmkLwBT
nc+L/BnN6IadX9ORXQsg+lCQdfxCM/Ve2RCgX7IAtr7hjX5a8RN1ndp09twR
Hvji8XbvZMsO5Liov0jmIC8sz/QMnOPtQQLPG/8EH+OFMt8VLX8v60FJysWq
/Kd5YdV709rajT3or37cvd/evNAu1/qy9cUeFLr/mHV1NC+8HT894/CrB32N
6ugO6uKFeM0WEY/sXqSm2sQz48IHedof3mnZ34+qP5ToXbrABweQpxftQj/y
XJ95YvgKH3z1g+OkeLcfFe16XN58lw+K9piWCef1o0NnrEMz3vPBtNdP0tKW
DaCQ1OoVboQPhqX1Cdp3DqBxw7LN3V78sItTarLVbAiV2qRuL7vOD+f0eCNK
jg6hZ2cjzVIC+eHlwkIVXc8htPnFGfurEfzwX8nedzhmCN3jlfJalMUPZ06P
r0CcIaRcbpeyZYIf1jyq7la7O4ys9rGWxLoLwMt2lcvXpLCQiluD8p1rAjDy
oPmm8AIWmgzMV3e7KQCdOqpMf9WwUHROyHrDcAG4cuW5YbUxFhpaom9Tny4A
o4jdRf//RpB/z7V7fGMCMG81OqWXPYI+nhf/53RBED6vrw78L4GN2A06f8eu
CMIJ4/olLplspLHBduJGgCAUGHhbdbmYjeJ5on7HPhKER04Nbl3Xw0bPw9RY
PRmC8FdpReSqpRx065NJm9M/QRgwmZWA7nJQEcPl5xivEGzq49veFsFBC9fu
Nd8QEYI/itvmGuM4yHtbXUPsEiG4z2bgptMXDjr/w7GyZ5MQdDlStLuPy0H2
f69+cbohRPm54aHXHi56eigmb+yeEPwcrmFwbj8XNSL8+Ua4EBS6+B9zyzEu
srgjnBUbLwRjaSvO+ntx0Tb5Jx96Sqn5Vpb+PvSSi2745iRfqhGCXg9YxkaJ
XIS625L4WoTguuY9rn/TucgwSfmt8rAQfB5jpS9UykVrjVJfOokKw3Qsc9aH
xUVnXzbEjC0WhkUv0+5uGeeiJP6/UTeWCsNjyQV6vTNcpFK56VnsGmEYXVq8
kCdGkMLhitAeC2HokvrOu0iLIAG/gQCnx8JwX5PoyiXOBLm58+87Fi0Mh2Rm
JtadJajFRVHtaLwwPDo1elL/EkHJlvbVhzOEoa/dKsFqX4JslasVDjYKQ6lD
C6/uhhNUIDfCOdAuDEfMn+YlPiNITZRWuL9PGO40qN2RFEPQ7PgWF9s/wpBH
ZleU2VuC4koyP1nI0GD0Ce0c2c8EieXWB5ovpcGvj2vqN3whyOsDObhXhQav
Hnmw0biQoN1P1Xn2GNBgTqhnW285QRnBOxpMjWnw1ZNpiTuVBC33P56waxsN
Xrlq5SdWS9CYa4zZDlsa1JwLpGU1EeRwOHfFdgcadKQXKLT9JKjUqnnM5AQN
tjZcduhqJ+i54aLILR406PcnwCm4h/JnrfZZ6EODNkRNSbef8mflHgBu0eCF
vwv82YMEbRW73W/8mAbbLphqHWdT/vDE5hhF02Cs/KJzd7kEyU0UBBvG06C5
yafyh6ME+Q+3OW5MpsEkDY1NXmMEsTqmdDdkUOOsh+XGfyg/62UF1+fToL/P
8lO9E5SfpXot/xXT4HT+2mWn/3c+l2fx3qCSBkNPb+qtnSLo0cez1/UbaTBL
rfszY5ryN+6ulV47DQ74N77cPEOQ87MEFd0+GuzvHQ3fPktQ7f2vf9eyaZCd
tPaJ1hxBhgFd37X/0GAiMyl2nOJ4z7mYNbM0uMY+Mu/5PEESpxUuagnQ4fug
/b+UFgi64rh+m6YYHaq8sRe/S3GPtS1DQ4YOR2I3b6+l2GznRZbaUjqUdMwL
pN4/UZZRyJfVKnQY8yqx7n/noYo670NVteiwUolPdYDieyrlx1cZ0KFAYMfN
FIr/MPvXqRjTIXb0GLGl2FGcT2TlNjp00FhxuJ2Kp5x3RYeSGR1+ttn/04Ri
vUmjVEVbOizTTT8aTMUfzbK7ucKBDllCI+PplF6hX577l5+gw208P8NzKT8u
NDxSX3aWDjsMPLbEUn61ln2cXeJBh4nxjXOn/hG0Lb+yRsGHDj3X631fRPn7
IXU4Vv4WNZ7X9zZykqCAyJWmjMd02LV7Z4zpOEFawm9mOVF0uPNWz45rv6l+
8VBNLY6jw3epfttDCEHaluqMS5/osCZqq6ndCEE/vyR935VHhy1m7taSwwTd
0tS6vuIrHfrW5eW8HaDiEVrbX1lPh4saOW98ugm67ZH6LK6VDqvDqnQ/dxKk
06Nr5t1DhwsxaSrNbQQFfTH4tHqMDh/uy9qd/YMgAw/DgBuLRKCV8Fk2jeqP
X915BgflRWD4dnsBq2LKb4tNQ2uVROBr5ttob0xQlwa06NARgWI+6w5fyiHo
Qff2ZRssReDvfXfu/0kgaINFWa2EnQj8ZDItYxpLUF/+rlv9R0RgTbfXZj+q
nw2f7Rl5dF4EPh2SCgql+n/A3OozJ0QEpsone+28TlBYfv3Z4ggRuGtbcEji
FYKMNWwVo16IwGcbzpznUOvJI8EDQbs+iMCUAMtYBReCQL7DvrgqEbizauac
qDnVH+qdNO8fIvDqtmNuPjsJinh6JN+yQwTaC84710CC2JecVs6zReDqYzH2
S/QJeqbu+ttOTBROwgVBMzmCTJ4Ox6+VEYUqxV0BVRIEcQXO2AktFYVVyie1
dIUJ2t51Dn3SFIWrjFI0Xv7lorEI9wcSe0Sp9az1pVwzF+0R8FMvvisK10ky
XLxDuejoF8PGbY9EYdxau6D9gVzk5TV5veS5KHy6776WlA8XxQ6dayx9Lwpr
HhwzWOrCRVOVDn7fqkShouTuO8+MuCj+ieGP6kViUCTEzGBNJwflmk/6WSiI
QfvjG04N1nFQjXC6Rq2yGFz9eIjrV8JB01fV/ev0xWCaRLmKWTIHWToyNRv3
icFvJ9dUWl/hoFnVSf+fkWLQRS1BWlWEg6S70jTtY8Wg5NP+9ZUzbLQ68lxT
a5IYvMf++tKKw0bWov2a7XlisIbGvTJdw0bvSENTZwf1vNzsytJwNtqXk6bV
pyQO365bf85Wlo0+mJ5r4SaKw640gaxKnhE0+kjZrjNNHC7q+ayRTVhIr725
ueqzOKzY5rw8qJOFsty2Nid/E4dlB06UNuexEApnNJ0eFofPirumNnmyUG1H
YcOAmgTMFntjtKZ3GI1flKvpfCsBby8JEGYkD6ENz1FJ9RtJ+K2/xsx5sh/1
aX80dv0gCTfhOb19Hf0o7OuLT7zZktC6POSHRnE/YrF9XxuUS0JG2M7ie2H9
KBoY+z5nScJVdid8FTX7kf8lB4VPDCmo02Lj/OVgH+pn/Ky77iAFi3yDFx69
6UEfnOqh3IAU3Da2yvv4XAdyVrTV3PJnEfxvIfXG3tOVKL1XOHPHqDScvGF1
N/dbBNgtI6gazCsDtWH/Vz1QD7x2G6xL4pGFz3wtvB65dAFi8jb2kYAszBI0
OeB0owu4blKQvEaThfk2/3kpx3SBQzo8Q3ukZOF8KT/Nvb4LQLnKSM4KWfjt
+ZIMa+NuINpzfE4HyMLm/u+rJ8V6wKur4cXZvrIwyTH0qeLrXiDvLqT7KkAW
Wm/3Gyv73Asenb0ac+e2LBTUv3HVob4X3D5yxOvgA1moVDmXYsbfB05v11Sb
iZaFNRkHVHae6AMGi74Gb86XhQIzzitClfvBt3dj1iXTsnCrgdVU48MBMFXG
l8e3IAt1bWN5m94OANVB6ZWQXw5uzU2K+IIGwI1V+uO5onLQcfzhFCADwDjW
PTx1KTXOW5gusXcQpEb9aYjaLAcHRjfIf+EfAs9CJm0v3ZCDgmY3Hyc7DIPS
FKEvHwPloPTJrp17Lw6DiUq5VZx7cvAgPHSy7ja1nxFdP+ESLgezmiNu3Pww
DMTuXH5yOF4Ovg/7WH5/fhj4B0z92FUqB3OWVfEpRrKAq8f0/hUiDBg9Hjz9
KXsEpBwKUpeRYMDR2cbnl8tGwNhWmVmaNAM+lZKSUGweAdcWab8ek2dACVtd
nRWT1H7tw7GREnUGvP3ge36jHhtkDpX7nTVlwKFt3Uul3rLBdM0+62N7GXAT
qJ+Sz2SDzdk9KvutGPBKtRES/soG5bdnv4GDDHi4QvpHSCcbtCvryCw+xYDL
r0h+MKX2TXyHn777fIcBZ1K35jp7c8DObSrXPtxnQIueVYzEQA64r5m2Ny6U
AUeO+4VVP+IA2envY/efMeCOKvWPRUkcoPZ03vjoOwY8M/xil/lPDjCvO1kn
VM6AhiRy5bAOF4TnjMXNVDBgWLiOgJ0Rtd9+6ec1WsOARWPeVonbueCYW+SS
1mYGbBQboo9T+2kP0aqTKYMM+Mv1XadSABdEbTeYthFmwmbGtba+b1yQlHLg
aYEoE4p/3aDm3sAFObLXDNSlmLDcDHW1tXNBU3+h2zyTCTW3u7sYEy6QCrTo
fafBhFnbnz3ZIE3ACu4l/8VrmVBB7Do9UoEA7f0Ry67rM2Fv7oVHDcoE7FHt
OGBjzISHxYPzmvQICCw9XTm3lwl3LDAPy1gR8EQ75JSrNRP6Gr87vc2OgPiI
NKGG/UyIfeW2mh8hoNB5Cr47woQpzme1yFkCZoUCM60vMqGLy0aRk4EEiJ5P
tP7iyYSPArP8ne4ToNBcSVZ7M6Eavhuw8REB698u1pi7wYTvnQYFPWIIuLTz
9Yu3j5lQqCrrsEI6AQEfi42kI5lQUr3xVG8WAaGMoRafGCZcLn658nYeASmD
2outE5jw+qXe6/uLCci3sE7NT2LC+z2cr7fKCfie7bl39Ucm1C5ZML1fScBQ
UH7QbDYTuql+FVzdSMBf8kvFJZ8J4y6u1cttJkDIjr+oDjMhu4H5QLWNgJVq
u2cTvjFhZHvXl3vdBOiFnotcVM2EJj1/gm/0EQCnQtf51DOhRNnoFZtBAhzL
my9YtTFhoLpMrD+bgHM6M+L5v5hQUZfd3M4lwOfZ8veqfUx4Ql9cUfo3Afd4
tu4KG2LCo9KllxXHCYh0Pdk/w2ZCM7Un7cITBLyrvXPD+TcTPt2tZlY+SUDW
huQVdRNMiCodio9NEVDyqibfaJoJR24Ak8Z/BDTSxg8mzDPhrmKxshUzBPRe
kPsrxS8P9c/pmG+bJWCsZePja8LyULV7e/OWOQJ4thzWHRCVh85izGPMeQIk
E/2rLaXk4a2Tr1llFC9fFH8mT0YePuKKulv+7z7n1TKaqrw81FmX9i/tf/c9
u1lvQpfJQ1s7hetsiv/ffVD4/++D/h/a3tkY
          "]]}, Annotation[#, "Charting`Private`Tag$10358#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{(-2) Pi, 2 Pi}, {-0.999999512844876, 
        0.9999999999999671}}, {{-6.283185307179586, 
       6.283185307179586}, {-0.999999512844876, 0.9999999999999671}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"upos2", "(", "t", ")"}], 
       RowBox[{"vpos2", "(", "t", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.02`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.764595085227248*^9, 3.7645951621962013`*^9}, 
   3.7646703161078696`*^9, 3.764789306514335*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"87db8a66-2f33-4ff5-9b0b-fd7f0b3945ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 8. Coupled harmonic oscillators, general solution", "Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.763981172658908*^9, 3.763981205701132*^9}, 
   3.7639852369707117`*^9, 3.7639852888111763`*^9, {3.763985571599002*^9, 
   3.7639855718798056`*^9}},ExpressionUUID->"2a1adf4c-6186-4f2e-a3d4-\
1dd7bcbe74f3"],

Cell[TextData[{
 "If you shook this oscillator to get it moving it probably would NOT \
oscillate in a normal mode.  So what good are they?  The normal modes of \
oscillation are important because they serve as \[OpenCurlyDoubleQuote]basis \
functions\[CloseCurlyDoubleQuote] from which you can build ANY general \
oscillation.  As a simple example, let\[CloseCurlyQuote]s construct an \
oscillation by adding together equal amounts of the two normal modes - so the \
oscillation will be ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],ExpressionUUID->
  "6feb92aa-162c-4d00-b2a1-f4fa6ffe804b"],
 " mode 1 + ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],ExpressionUUID->
  "e910ad6f-f51d-4173-b4fd-0f73b1240e1d"],
 " mode 2.  Then for example the position of mass 1 will be ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"upos1", "[", "t", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"upos2", "[", "t", "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "c32cd077-4896-4449-a62f-96b681071e00"],
 ".  \na) Make a plot of the two masses undergoing this type of vibration\nb) \
Does the oscillation pattern repeat itself?  Do the two masses have the same \
oscillation frequencies?"
}], "Text",
 CellChangeTimes->{{3.7639812259657917`*^9, 3.7639812410833855`*^9}, {
  3.763981288149189*^9, 3.7639814209380913`*^9}, {3.763981454306919*^9, 
  3.7639814706559286`*^9}, {3.7639815169729223`*^9, 3.76398153319713*^9}, {
  3.7639815633211164`*^9, 3.763981614598974*^9}, {3.763981707031595*^9, 
  3.7639818487127953`*^9}, {3.7639818893195953`*^9, 3.763981891628395*^9}, {
  3.7639819304411955`*^9, 3.7639819621715956`*^9}, {3.7639851245546703`*^9, 
  3.763985152775432*^9}},ExpressionUUID->"206a9204-0149-4de3-8ecd-\
a56063973e5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"8", "a"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"unew1", "[", "t_", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], 
      RowBox[{"upos1", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], 
      RowBox[{"upos2", "[", "t", "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vnew1", "[", "t_", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], 
      RowBox[{"vpos1", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], 
      RowBox[{"vpos2", "[", "t", "]"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7645952226170654`*^9, 3.7645953086777167`*^9}, {
  3.764595441856453*^9, 3.764595448754858*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"d0677ef4-1e35-4830-a9c0-fdcef44c969a"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Cos", "[", "t", "]"}], "2"], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{
     SqrtBox["3"], " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7645953132601995`*^9, 3.764595450279378*^9, 
  3.7646142632930937`*^9, 3.764670319571574*^9, 3.7647893105974126`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"042d0a7b-51a1-4bde-bcc2-080866f5dfb6"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Cos", "[", "t", "]"}], "2"], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{
     SqrtBox["3"], " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7645953132601995`*^9, 3.764595450279378*^9, 
  3.7646142632930937`*^9, 3.764670319571574*^9, 3.7647893106033974`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"fe72f7a6-5acb-4af3-ba38-9a6a90eaa00c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"unew1", "[", "t", "]"}], ",", 
     RowBox[{"vnew1", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"-", "8"}], "*", "Pi"}], ",", 
     RowBox[{"8", "*", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7645953218085127`*^9, 3.764595398897916*^9}, {
  3.764595562058816*^9, 3.7645956085115333`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"8111ebf4-1d04-4bec-a1a0-aa3a1447474d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c8198XJiJ7JIRssn3skdxCFEKoJIlQKiGjkAr5IklCkiRlC9mE3GMm
e++9N4WMxO/z++vzel733Hue57nn8z738N1wMrY7QEJCcp2ShOT/v7rn6DX/
8qnAlof1R/bYNHSiwHv1ELcKhMXHrR5PzEASfAsfWDlUwJkmhoW/9iui3/6x
JcOsAlbGxiXfxfJQW6pvlv0BFTBytJRa1ilBlSyrVx/sKQMjR1l2jVgZyvWx
pPLfUQbnh96tU2zlKNLshO3H38pg3O6cUExZgcwObRztHlcGdsSTyiVfg865
2fyYGFaGHcGbwptna5HqaJvbr35l8Lsz0nXG+gfiKs5qoe1Qhrp72xcvvP+J
Rm/Z/6dZpQz29AkdNlLN6NaPgdXsBGXIVpe/PdHQgczkdOPKPxIx3Vgsg00n
OvuxWK/xvTJwrpbXzW13IrGHb5JnIojrCg2OnMLdaFnY0ILbXxliq8XvR7n1
opHw71QSPsrAF5PCfelgH2rdEy9S8VYGjZ6TC6mRfSi3+xDzRTdlmBUSTvbK
6kcPAip/vLBVhurrlitb9YPo1m+C+zsrZag6R/b2kf4QMrP8yJ9ioQxGHXwr
Xg1DSFXR+3GlqTLwX7jWbF8xjMQ/z4u1GinDZZkTeSzKI4iL/krvkL4y3P4c
xlT8ZQT9m1KQ29ZShpbTc9S5WqNo+ULiKMVpZVimf/ghynMUDX9nDmU5SfSn
zdGlKGMUwZuVWWkFZXj+xfHAfboxlENqGXVSRhlEWD5sLKiOoc/3GjX1JJVh
8W7Wp1s3x5D/mbS4m0LKgNOvfxcpGkPwwsuIh08Z2vdDba6MjKHdNr0DvVzK
oF9AdXuFfBwpsx/LD2NXhvP+F+/3Hx9HrpbLdudYlMGpKDSW+uw4ykrEbAcY
leGU9e0XznbjaH4+7GcJjTKEPWO3+fd0HAnL3HjkSqkMrNocbZ/fjqMbD+Uk
JciI2GqW3iRjHMV9Jx+Z3FOC4tEXUyTl46iPrDvsw44SXPA/nPOxcRyx6KZo
XPqjBBebF2wEeseRUZjHOv1vJdAXZA/2GR1HId3nkn8sKYGcpL5+xtQ4quPi
NPOZU4Le8kmX2JlxRG6zSKUypQRWX7C9zvQ4QmnfS3+NKoFZza+TiWPjyGsl
9F76oBJ88DJPT+8bR4UKVjw2vUpA58DCaNI8jn4/kmnj7FQCBufKx1F4HElV
HnjW2aIE5O7F2Y6Z4+jOoU75lw1K8L5in7WbqC/JIGn6zA8l6GFVbPvxZByN
Rj6I3qtUghendfLRjXHENaCjW1SuBClfSfRUNcaRGd/RXacSJZBJftKTzz2O
Im/NZ4oUKkHpdxfTzM0x1JpZen0sRwmqLmg+4G8aQzTrIUwxmUpg/o4s4/DH
MaStalllnKYEIse1eH3vjSE/H2l3miQlYH9b+u2u8hjaoW3v9Y5VAolXVcm4
ahQpmiQEK0QrgbS/moeU/yhyeeemthyhBIOqG3eETo+iOSG2+OsvlKCuIT/+
sfUIEnSYvcAeqATfcm5c6KsdRla538ja/JQgnlegz0VoGPWqW9zS8FICtedS
vB+aBxHLf5JH/7orAYXurJnR0UFk1LBXn3dfCU4JbF0KuDaAflz+JCV0Wwmy
PKUvtrT3oULn6Q1KMyXwpboQ4ebajX4XFqWAiRKgEydYOkK6kNS/oCuehkog
68GS5hvfiZKei3+f11aCK7+zWQ2L2lHkZ2f/JgUlCF+KyRjXb0L3O3eYIw4r
gXNvQrpHXiGKMjY0j2Qg8mFNjB/QzEVlrQmf3tAoQVnm5SMm4V8QRZM+IZpM
CUA8U5qhMxzF1sSd/7CmCCw8fIlFxV9wXaFGUEqHItzl/+KXQlGPl+XftqS2
KILvnFJrrFMjPpy3wJreoAiLVtfUcnubseXXyKSMKkWgytChnO5sw2sp05U5
eYrw63Gwdn1cN+Z+F/yvNEKRWO8z9IxLI1iLbUTr+ytF4CHrIbMPGMW338iF
lL9QBM+sz5nDLGM4//UgR8UzYnzctQRFyXF8LlhKudZVEYIPXlsSPTeJHQ89
e/rDSRGoxxuOX26YxJEBPbV1dxVhSrUo6Z7eFB7287nYYKMIBWlVt8jPTGO3
R+0urSaKQOBqZMrgnMUx28IlbYaK4Gwc9249eBbjh49IO/QUYTop+nvw5iym
dhMM69JUhNB3VzrN6uaw9G+Pnm6kCEdyP2k7SsxjU+cm7t4TiiDCcco85OU8
/ujwILNfThGab9CwfdZewNXz9esD0ooQwiLxzStuAc/b86gNiSsC51/u9WNr
C1jerq5+REAR2HPLL74IX8TmE1zMYzyK8NmA9Kzq0CJ+an3/yjgnUW+QlNNj
wSVcf41jdvKwIujbeLx+lbqEDT+qoR0GRZDg1LfjmVzCnaOWUQy0RP7aaQYq
XMvYjN93SfCQIpD08ed2GC3jIZsELVVyRTDqn3k45buMbyTVvDckUYTVc1Z0
N78u4+npmd+2uwpQ1pR383zfMr4rQq3rtaUAuosqJJH7y3j1tsSnV+sKcCas
Y0SWfwW7fzHYSlxVgKhIySiB0yt4Z9HZsGRRAYL4FpGVxQp+KhWR3DKrAISE
8oAJ1xVM7lzwb3JSAUJELD6nBq7g5zk9pjujCmC7e+vKl7crmH5t+wvDkAJY
GqofmE1YweHyXGRCfQqw05j67GrGCmZ7oG6u2qUAuzteF8lyVnBskVWOYZsC
DJxh9R0iYt5tv0N2TQrQ+Knr02zWCk5STbru9VMBxr9YTQmkrmAx7x+Fr2oU
wODENM2rDyv46/c5uqQKBei8pG4v9moFy+/T2JV8VwDZwLWRP94r+NspqbKW
bwrA/0xuYePmClb3Mzo8VaAApoopkaLnV3BVlcudnRwFGBSR9YyUXsFnD76p
YMhSgF6jdz9U6Fdwo3YRu1C6Any2YDp1bG4ZXwjqc1JNVoCtwHw5TVjG3T//
1hp+VoBC5tFn2RHL2JyGm9sujqjfzfPTHZtlbBt6o/FVlAKoMIi3DW0u4bkW
f4GkcCI/0q7gxLIl7MiU4lUSqgBWu78tOx4v4YeRCyJTAQqw+IDxU/DGIt7t
ovPZ8VMAb9EVKqGMRezDRuhheKoA+eMiPnrXF3FwjNt/qg8VgFmg69zN0gXM
MBg1aOiqAAcDKcudbRdw5LFvcnZOCmA8EfxYjnoBf4j/N/bqFlHPOnnkYf15
nJ0coD51WQE4InJz8tNnscJs6psdEwUIp2YNX1edxSWiDYsMRgpQz+F12qJu
BldlMLxXPasAMYxchIn+adydG735SlkBXJ7VpiWPTuJ/5enZqkcVQMr3mvev
J6O4sV+a9i8LsX72/1MMLBnBsX/yb5UyEvNN8XOccB3GalKYW+2QAnC/TL2f
3jeAvT50hJzclAd7K/KRXJ9u/OfRrv2pLnlw9x6vMm6vxbVvfatJ2uRh6/qA
l+KBavwmj4K3olEemhq/0JjLVGD5Bcae09XyQDma9Nueuwi7mgud0cyTBx/f
Cr1gbzu8qmzAp/1aHqb/4y0yDqlBYNrhTfFSHnqWuGnfydahV85mvbVB8sAa
QuoQ2V6PpFJvvNLxkYeUhLSHNHst6B7bw39nneTh7vMOlX9/O5Ga3K4Z1V15
uCSjmu9E6Ea0hr75P2/Kw9l0Ji05qx6UEfDirq6lPBS4Cl3aye5D8xsf+/TO
y8P1jw8PDzIPoxImIQXac/IQdINRT/DYCHoumR7WqCUPpLL/PnxjHEUidvk6
59Xk4ShnAHsDzRja8lFJoFMm6otfnQr3H0M/Ysv3muTk4TZldMbRnTF0s7Ou
wEBcHiK+KowJD4wjxdXzTAzH5UFWm8s8THsCHaTtcGjhl4eBgZXpJ1kTKFFz
SMCIQx64qbsmi10nkdv1G08ZWeXB9NTFpcXWSaT1aKa/lUkexvFZtYdiU2gi
99frC1REvZSvqm61T6FYih0/84Py8MPmwdV4zml0yfyAmw0pUX9N9eJz62lU
R3r4kvu2HIhSeSZdmZhGfhc5dZ5syEEB1W8aRZ4ZdCJNQDnwlxxwpE/Nf708
g7KM5DnezclBsl9Su2P5DLqVqEbzeUoOhrr2UrMWZxDvltZu+pgcBChTR/iy
zaJ+vfNLeUNyUCH513ZafRZFfLw4XNYnB8ePrPoP3phF+mvXWmq65GBnKGne
5tksotC5Cc1tcpAzzcTzOH4W4RjHnJ4mOXjDN35CtGQWeSw/+Dz6k3je+4n5
262zSEbjacRcjRxoBBvanZ6YRfNvAv1/V8iBINm+S+7vWZQ498r973c5sH71
323Ym0XXTkbfJC+Rg+ZqWXEnyjnE+jr+Ml2hHHBz/xWqop1DrZOpZ1lz5YDk
3FnjCvo59Fw5R4UnSw7uiObIONHNIY2Qb2Ii6cT1jndN7Yfm0N+RCk6ZZDlg
gtKC3yRzKF+unlb1sxzUhEXtdW3MIsfA9n8acXIA8T+R/8wsOj7Qv6wXIwcH
6i6FH+yeRaNSEyOmUXKQF9sceqNiFsX4LbReC5cD2oibeolps8ike63iZqgc
pJttX+kMnUW0Yru5TsFEPm2/anadZ1HNY/JEjwA5WD3KxyxiNIuetNG+8fWT
A9t/TxWtJWaRstCRgOAncsCoP/gh7+As+uVx7GGElxyw+rsIiA/OoPRGIfvY
B3Kwp+XG2Pl1BtnySl1JcpGDfDLvo6U+M6j7h/qJojtyYHFf96oHxwwK49SR
gJtywEV5a+82sV7OORke+3lDDlzefQppTZtGZaxW+/3mcuCRLXxFSXoafbLz
rdrTlYPKNLebnNxTyPzb83xKHaL/3+mdrTsnEQtdeBKjphzULwg1xgRNooD8
z4H8J+Rg4kyqrsTCBHIgq9bTFpeDyzQyL7/FEP8vnyg6X9LIwfB1WieVWyNI
teX+z9OUctDRsNmRGT6M1P8Nlm8ckAPFOc5IhrIhpH0lL+3ajiyka/k53KAa
RJeZrJ5KzsmCg/Vvy5KIXuTh+02sqVYWlOPiR/zD25D3V0Fe30pZCJmwrCXP
b0U+Q6+OKJTLwltS0XySzBYUpHKT5EOBLNBWfv6hqd6Ion8xdzskyoKY9OKr
4cAa9M3awZfWTxZ6WdcvniLNReWveh7AY1kYZYjeC5TIQpXfNRzcPGXBXiPr
aaxLKqo/evTyoLMshL1JaJ/PjEH9bTUSGddlwSdc//KFNy/x8D6B3+qqLMTz
ZNb88InG45KxbCyXZSHomMWw5lY8nn/ucsDbQBaKG8ZyYv6m4Z3TPL16J2VB
xObiXVeeArznFNy0rywLJKMbgyc2C/GBuI3KPHlZyDeIe8ZeWoypdxoyOSVk
wapG4+g5ijJML6KU0HKcqO/DwLLOy++Y+dLn6GcCstB5naM9e78cc+Z6PFvg
IPI7lmom2gGYd3TC4yOrLMQFakrL3KvAgvSGjibMsvDA8X159W4FFlErsaGk
l4XQEaawUd9KLHFH6EoplSyE952ef7ZbiQnRYQZOB2XhJhlfS7ZDFZav/asp
QCoLe+6+23fbq7Dy+k2Vnl0ZeHJ2va9Mshqr8bdLvdiSgbpcuojMJ9U4/jCN
vMm6DJSfZ+tnr67GZAe1VDhXZYC23Gklbr8a3/zjrT6xIAOMd/CkkUwNrp8p
0PwyIwPVi7YqGldqsFTf8lnXCRmYLjLqDHpYg1/XHzc4MSIDMWVX/qmF1OD1
UisTsgEZiE2kveT5tgabZb4za+iWgb3Tm23m72pwWVz7tYh24nl/7meRhNdg
njAam6vNMsDxa/Z2iG8N9vPVsheolwFmhZQSPvsaPO3y+N5CjQyIBAr9N32m
BuvaFrrkVcjAJ9uRtgOcNTjz4srDR9+J+Y2yK+NnqjGjjshjzW8ykNRdGrj4
pRq7KVv70RTIQHTZuAmLfTXuFY0J7MiWgfn1H0ZnuarxCc6OkPcZMpC3fSu8
pK4Kx9HShtukykCO6Rnqj/eq8IE9rbfiiTKQISTpJU5ThW+uPI5d+ygD2jFR
N99+qsQ/Rws/lb6XgUrT+ENcMpU4rEokQy9CBlLPffWzUKvA6/nWOYdfycC+
LmlbeDHgy8kxhQPBMtDMRJvQLQWY+zltxV0/GVh+nWDLdqQcZxisdr24LwPb
pYzM4rTfMOMp0QGTezLwdE1SRzqf2P9lboxy3ibmXw3qizctxKosnfNfrGSg
eOKMMZdvHq7rK9pvMJQBZfya+7fMFzxp+1SUVkoGVofUneTL3PDZS8VSnaIy
AFw+4tYdBuiLzi+5WCEZsHoZFO5h6I1cxGzUJY7JgL8ymeMD8QhEsqptok8r
AxobRVnfzyQh27GnZiyHZEB4Z9Hv5JFU9KO9+NogmQzsXmYSOdCTjkILxOwd
/hJgV/TQjB1rNuJ6RP84ZJ4Af1xankiTFqDbifVsH6YJINjutnaNoRAVNgXk
Zo4TQC0mYLfzcBG6wLs/09xPAD/nI1wke8Uo7lyp30g3AeoME+8tjH9Diy4P
j622E0BVYWP9ZVkJCqhZMWZqIEBitLaTr34Z6lj+ssT3gwDamE3i2IHviJfd
Pki2igD5V6Hv4Jfv6N5pQQFNTICQveR3M9rlqOTO6HeTUgLoF+Rb3e8qR5SR
sWa2RQSwyFOlungJI9PvZmtueQSY5dK11fmJ0edpltD/vhLAWfekEAkboBWG
NpGoLwQ4K05/6ZgGIDWVl1XJKUR87bZRvx2g4BvnLIsSCBDDoFvK5geo58XB
7R8fCdAoQjFaFAVIsKAiovc9AQim0jlxCYDuDz+WmntLgEvh/G05qYDKKVV/
bkcQ+ZOfie5NAkQj88eGOowAyd8XOXZjAJmZ5+5xhBBA4/a6FGUQoKRnju/E
g4j+fNtynnYA9DtDTF7NnwBcQerngs4BOtU93azvQwCRslOrg8cAvdz/fPua
NwHMDtRPZXRg1C9yndzRgwBaBzId2swxEjHm/PjEjag/mWaTua0cuT/qUXnl
TICM3phqK8VyVJkY0fnRgQBhLa69mcHfEUOzoVO2PQFSZRb+rTaVIYtNGuoK
WwK0FmU2CpKUoXTeusQ2KwKYOvNl6PCVos1z/mjcggC9w9TdV2VKkJbrqf7f
ZgRYN3c3u0X4hsJjd93ILhLASHqY1Y27GEmsuKULnicAiUDmgcYfBciTXeaM
wjliPlUHfvVn+aj29NLImTME8H5IarUvmYesIu2O3DpJAP+jPzlmLmSjNyqX
fNIkifk2Ljk0ZSWg8RvMnCWixPsaIqVO5I9HhJDmgnoh4vlktJMPV6JR/bD2
wsIxAow+YmpQ4H6G9p4pXZKiJ8CqeepHk5m3WC9zbVWdmqifEOh27VY8ju7+
+sKQgqg3MWnk2kYivmls5De2Kw0+X74nvriWhVtjZcxuDkmDltuvxcNC3zBJ
olPUUKc0sDO/4gv9U4oJXzI7TRulwRvnh491lOOwb6IXNEul4Ql+eXT5ciU2
6ubT5X0nDfnPNV/aO9bhVgZmtX5TaYiiOB748GM7JmEz8rqgLw13ram3Zpw7
MIE7tLhOUxpWg5yKv2t04jAJaoUiWWmIy/j+aHS6CxudOyAVySgNEc7xkxPi
fbjV7zePQaMUhLR3f0NPRzBJMMGypkoKSEhf07jyjmLCa8dYtVIpYMt9a/nv
6SgO+zjPLp4uBbpXy436VMewUdk406EgKXCySngh+GEc+1TxGj19KgVwe9VA
+Nc4zq63DP3zQAo8Tu9VHdecwIx9/dRTdlKwwa0Z2T46gVs32skqNaUgwtjC
/SHJFCb5x6ihckIKHO6NvhHUmMIEckOfbFkpoFgZWhb3ncJhzA27cXxSQBWs
sffvzxSGo1QnWI9KQe3TNJlEyWm8yqvj+ZJRCiY3+OOvWk9jI+mqjUf7kpBx
J9S/BE9jH0VS+bU/kiDPYuRyen4aZ59ELneWJUFOKSo8mmkGj2o9zh6bkgQX
3Rv72QozmFG/dNlsSBKmeO/YeV+awadMtiVaOyXhwd84yiXXGexsrnRXp1ES
mr9GVW68nMHx1u5p5VWSoM3fzRCcOINb7PNmFEol4f7F3UNxRTO4fWTTSD1P
EmrJb79WrZ3B3ZfUSrS/SMLwwlW3orYZ3NfkI2CYIAlDi0nBtP0zeFCrJuTy
e0nwy2KTlh0h8iul+nM9QhI2zxqc4hubwROyBtftX0hCcbo9fwdxfTotvM75
GVHP9SQ4PTCD53l7ZDwfScJZm9nQWx0zeOkt53tfV0lQ+SbyAhHn4VV6K/Lg
u5JA7VKjXvNtBq//l3gv3EYSSKaJvSxlBm/uznbHXJWEqwOzOfXhM3jHVfJU
gokklFl262h5zeC9+ftpX/QkYYVlVvO65QwmvVHInK8pCV3th7ePohlM3rfz
qOyEJKifT9Rz5ZrBh4zQVLWcJEgXDuTc+TONaX48M2gSlwQuAW95kqZpTK9e
V9QlIAmx7xWc5OOnMXMBLd8wpySIFmyHHXKexkckLgRPH5YE5yR5iydq05g9
4c3aMg3Rz28LwtEHpzHPa+7a/b8ScPX40HrVyynMf8hG+tC6BFTfLftvSH8K
Cz9NiWZclADonCCkH5rCEvcId/kGJUDtRtUplweTWPWcBqNmmQRQfyskcxWf
wOoQ4KmXLwHC8k+O9rSO49NKDeMmGRLwpGKg8bgrcaoUMi2wjZWAR2jrcmHW
GL5IetM8wFsCYmn/kH07MIrNPNKrQt0kIGq34ZIl3wi2WFmWeOsgAeLLJ54M
Kg3jG0MP91MsJODC9H2SPdNB7PzteeJPNQmQjL44xm7Si90IzXTt8hKQVhW6
0aLdgx+mMD/sl5CAOaOkB4yK3fjJm/fnFriIer6YnS2h7MQv7mcu0/4Th6hL
Wj/ubDbjZNE2ZaPv4hBdQLnNKVCE7Y/nVPgUiEMnP11htkIuFhN6rZuTKQ7s
XTkHAn3TcRbvBQvmOHEw8gtMsGAPxkVsbU87n4hD7QJH4u/1bFR3sK3W7JQ4
eDNxNmsMN6JgshzD58ricOqVJguZfQvSJ33d+41AjF9+OvtvsxW17RrNc/CJ
A+U1U6a33h2of62VbohUHBIYBoZuuPaihbFWU+sqMSBZG2W32hpFWSPZQ69L
iXg2iN3w+RhyHgq7WZknBsww3OzEPo7We408BBLFgMY1wX+DMIF2W1rfT/mL
wZOV4+ILZ6dQeVO2IOtjMWD5lHAZ/ZxCPg1hmdruYtB8n2tSTGcaHfxhhFPs
xMAjb2rN58QMoi9vHb+tLQYiJUzKeuTE+bY0+26MuhjIj5SYeznNofBvYev1
imJwbeLO5bIe4jxcYEQhcVwM3Lc/6at/nEe9uYRXFjxioDB65ciNvXkUk83I
/pJNDNT+MF2zMl9APBmtosuUYqBbeJfx26FFNJ6WnctNIgY+Qd/2dswXUWJK
2AnDLVFIDzF3n05bRCIJRuezZ0Xh7IyodejJJTQfT+geHRWFOu5jeop+Sygj
jvE6U58oDFOfSresWkKEmFZnl5+iEBlw5hrdiWUUpP/gwDaIQsuJX6Xb7sto
dI8z8mmxKGi/+hEan7GMlHMqhCiyRWGwZ11se3gZvbK5VRSSIgqWPlvJf2lX
0PQRunOHP4rCDRqewXjFFaRel9v/LkoUHnR03Rq/uoKivMwceENFQVizN6PE
ewUtS+z9S/5PFLzPKnYKvltB2iMJryQfi0Jqi1wzV84Kint9ji/fTRRM2UlN
PlavoD+aK7mqDqJgVKE3kdaxgs7/idSqsBEFLcfUOtXhFZSYqtqtc1UU5NY6
j1yYXEG75qO3mo1FoXq7PXlxagWZ0gVsm+oS/eEa4KWfWEEZWPzFwGlRSPIS
+V04sILIXdq4bqiIwsOu2AtzLSvIQvBh1ixBFAo1T6qn4hWU3811yklEFBw+
Bj7ZTF9BNM8r2zZ4RGG8Kf7jwOsVdOOEvY03myiQMFqsX3FbQSVLdBsHGETB
4hVnpIfxCmKOzwt4TiEK1rbBV9QlVtAd4yvsjHsioGZOGMslXUGV5PtpURsi
kFQ2Ejjcvow4ihJPHFsSgYxn/+zrPy4jl9u6TQmTImCgkmjhY7+MfnKuWooN
ioDs7qcNasllxNv8ZjW7QwRaqY2fui8tIQ+fE35KDSLAfM74b0PaEhKZCkjS
KhEBy99GF5xZl5DPWwmlhhwRsPPVS+mrXUS959rrLqSJgPz9g+N2rosoMOvY
omW0CESuuhoLVSygYauqx1OvRMBt2fuc540FpHj4NoNDoAhMn77+SYZkAU0/
zJf1fCAClUp25Wwy80hdzLx6/54IcUS/wXe3eg5FDe5fDLATgcsiDkcdTefQ
mdN6nhGmIjASVy7WeWcWJVKP40xZEdixXXz00HUa7ZYFXpAXE4HEzT9KMctT
yNRJcqKETwQeVOSf4ro1hcg6PSjqGEXA9jJHWpzRJLrxgeH8+PJxkPbd3zE9
NI74CCf7Wb8chzcTirPxGv1I33guSirhOPBlvllKZO5DHm5vTLTfHweL1egf
y6M9qLl4qdH9xXGwHdYuoPLsQl6n43Dn3eOQwEYreiW2FXUa7yeGSxwHCu+8
lyMWpWjf7Yt1uuBxmHzEQpPyrBCJvb3MXcl1HOJY2i+1Z+Ugn4Gvb3/RHofd
iz9Cj4rFI0lbq2CjJWHQQj8F3aOTcIB7hRN9ljD0xx+kEr76A+e8vSchnCwM
1BkDevmPf+LBb0fnTsYJw3ao3w7juwYsu3f/xr1QYSh26FDk+9aCRwL4LzY6
CoPU8rnq3IYOTJ3WzDR5UxhuUoyUhZd1YsUGr+a/lsLgo7VyqT+1C4cwdOiI
GwqDwFRoG8G1BytHP1MNlhYGkh+uinyN/dimRHrz03Fh4J+5fdfyzQAOHRzI
+8YjDDhc/r7alUE8ySsvOccgDIOrN5iCW4cwg+boHMkhYRjuy6zreDaMVe1C
ktlJhGFlJ+2Vi8wIfp02yXN2VQhCJV4/LDo5issawgavzwrBOl/y454Xo3h2
Se3dw1EhMMoh9yXvGcXqsm+YU1qF4LD74bZ7tmP4tunplvI6IdB2lfz4MXkM
Rz5YetENQiAzft3x59QYni85c5AiRwjucuwd+mM+jr+8Lqp3TRWCbQmBM5ff
jGMHe9GwsY9C0KJ69AhH4ziWQO8vGr4VApun/dfV9sfx0hE6zu+hQvDkd0Bj
mdQEzlp8MioWIAQH+P9VxJhPYMeq1aTox0LAaq17s9tvAkvH3LhL4S4EHzx+
f3BOmcCrzp0ENwfifjoGmrt1EzhHR/vPmI0QSG5r09ZNTWAX7uJSw6tCcLb/
Q2nw/gSW3RD1/W4sBCfFuZYKj0zitYb32uK6QqCpYCR5QWQS53+mo313Wgji
iF8bS6VJ7Ob5tI1CRQi4rybHTmlMYgWjX1FuBCHgMlh2WtSdxH+EbSzGjwuB
7oZklJfhJC7618lnxCMEo6WjHNFGk9ijU3vmO6sQLMYuF5w3mMTKX4ozxOmJ
+7WO/0w8O4m3fcVc3h0UAqeJd9dS0CQuMYtVovwnCBNX63mt5CaxlzT9P7d1
QYizrLbuF5jEJyh8KscXBOGaHB09P9Mk3h38FWg0IQiJPW5Zmn8n8Pc8m/Pl
/YJQLfPDRn98Aj8J7mKWaBeEVHbLiXO1xPeQtU7vu5+CIL8d6apL9G9f6dsH
ygpBmJ7mnrX4bwIDvbiNe7EgtC6iuDCrCewzFSsy8VUQuj3nPTaUJ/CBCJ+8
8jhBoBI7kBE5No6rbv/2kIgSBGcuI41fOePY/5StesxLQVgVcHKuejqODy7r
/HT3FoTv0c4UzCzj+NA5hhEJcyK/2xGzznxj+CePb2LMBUH4I/yt89XIKA7+
8/v2oXOC4DuQqFzxfhTTJHavTygR1z92SmXTj2L6/Q/U748Iwqf3tLNqlUO4
pYuh9RCdIGiVxLJfExzCYRm+bx6QC4KJi5Aeqf8gZjK34zVeEwATY9qFF2oD
mKVAQpGqTQCu2Zh8/Pq2F3PeLbV+GCIAsHtvw5+7A8fU1WnT+QvAE/Pvxz/d
b8ccwt3iCY8EwJvzmBd7TRvmGFvdaL4jACyZ/8jwvVbMflk4WPicAIipbh6t
jGzA0flyTmWnBMBqQWf0/bl6zMZ82tRYWQCS5b7eyiT9iVmbrnI/OS4AzDeb
jyZ412IWzde5XQcFgCvEv74kqQJHxse9vfuPHw4JWneqeQM+vPfFm3SDH+yD
gsYNsssx87dabclJfnD78NzESqMEh7N2ilcN8IPzs/d6L48VYya3McYrHfzg
Ecj6zeFgIWaU3u33r+QHZf2rOTu7OTgshAo4SvhB7fhd4Ud02ZhhnjUpO4cf
Utes3RLMMjB9kozTYDw/sLOO7CxLJGFazltk8k/5gdAhE1P8NgyHeLjN/nzA
D7wSEmJikf9hmm7fpuuO/HCq69zvqj03TP069u2La/zgY3wumYzHDQUvp3nz
XSTGs9ywsA14hqj0i6yL9PkBuo/6XnIOQYco28UnTvADidetVEP9KBRkO8Lo
KUfMl5En5Dn/DlFWLm7Qi/NDtsXenPCpDyiAZ6c/kZ8fRL5SvvQXjkcUjylB
lYOojzGi7n7QJxTQz5LUysQPZvfl12prPiMKZf7gm1T8sOq0Ueg5nIAC3kg7
7ZIQ/RlOjHnenogOrqmZhm/xAUnZr3/7n5KQv5GuisgqH6Q+NTm8qp+MyLMu
c5fP8EGddkXPg45k5E9jR2Y6wgezcyqHShVSEPltl9m5bj5wduY5suSagvxr
nzY9beYD6LE/rBOagsgEX+YeqeWDs68zv9D+l4L8fGPefvnOB9GR9JQvzFLQ
gZEU79MFfMBrQlrCTkVcVyuw7snggyAj0swjb5MRaUyl9r1EPmiNkCRbOJCM
fDZbxMliifujevaozychkotDjO8i+CCslmpy1T0R+eTOb0i94INsLto+3icJ
aJ9hq7/ajw9ESpeqj9/8jJ7cOwjmXkS8zCHxXuoT2qtnTlq9zwerKfSsstkf
0YVo4QK2O0Q/Qj5Mf92JRYl2qjXqN4j5Q0U6QplikC7JjakQY2L8K913rGkR
6EOT+0aeLh8QXm3wEyTC0GrM84MDGnzgEx9zlo30OYpSyBESlSNikmblqOcu
aO5AjYKROPF8f60L576oIbXW3jMPBYg475xQmYwTHr9DcrPmMNEP1bqnhziD
sWS8YbL1Oi+IMK08pXsWj33u2RQGLfLCIQeu+4WiCbhd9WHt10leGPQMyPEZ
TsIeXXHT/zp5QWI1lWbN8Quupl4WjinghcSHZG83g/KwhXtISvsDXoimPXzK
uBbjrxrxRduOvPDAZ/3lozTABxjzf/De4gVdrd7CQKcKnJo+MON4mReYltt3
Grcr8fqImAiNMi+I1XZsHCKpxTqZ6sqyBF4wvx3FKPK9Fsd4GZ+9IkLMZ5mY
SerxA5864mWfwk6M56Cym52qw6xvwi8E/uYBQ48yqsL3DbhMuuR+1zgP3Juu
K+pDjfhG/dhrgQ4e2HEIaWoYacSZ+4R2nMcDTCQx9wnMzdg4xuw3XSIPoPFb
L6UTm/GWvA+zRSQP7H+5qcUq04K17rQYb7nxwBuyyVDLY614nnzTRduOB1bO
kHgGXW3FYR+5IyIv8gBzNu/yt6hWrKiqnTd+hgdepx493tfcigc773UQFHmA
0bhxoZGsDfs5vVl7IswDaYnvo70V2rAI9ffDTaw8IBVbK9Bq04abEyflOCl5
gO5BMn92aBt2RbSmtze5oWSvpflgYRvW0sT/2UxzQ1C9mvCbwTbMquNSdK2L
G8xyQg/U7LXhGV2hucvV3OD3OZv2EVc7Ljbo5TDO44bI9g+LHxTa8XPjF/r6
n7nB9A6n0RHddmx+Sf2J9mtu0C1S+fXzSjsWN//19ZQPNxy3fR+bZNuOd68l
jqk6cUOqnq9SxJ123GR9+bCCJTfY//eu5snddhxnR31G+jw3/DYLc7x4qx07
3f7+QFSNG2xbrZ8dtGzHp+45pwqIc4NB7p1nTwzbMdN9gf5jHNxgWaTEl3Oi
HY+7ddOwU3HD3jCTzit+4tV4PD/JvHUMjDq1OWnJ27G/t5oT7cwxMLGRIOca
bcMXfVbiKbqPwTzt8Jd8oh/C/p/bSWqOgVtPHllTYBveDLxI/jfvGDgE3de5
ZtKG614cUtz4fAzKn0mSXD/aht+9Kr218voY/H6/TNHU14rvRDi+m/M5Bg1S
JIEJka2Y7n3n7pDlMTA9yfzqwFoLHo4LlOo9fwzGez4eYdBpwdmfVa3a1Y7B
7oLmx9lXxPpJj6+q5SDGU+be4SJpwgJZJhtAdQyoU4e1g4834vUciuOlW1xg
4Xf16qJmA4765hD8tZsLONhu8bZf/YlvfecpS6vhgnQ/C8qnl+uwckX7UkI+
F2Rzc7xyOfsD99cpX4gO5wKKwoBrH6hrMHcvObuvARd0v9L6kngY8MpA0blH
J7nAZyi2V8LrO4aRO4/cJbiApTx2afJbCb4x0zp8m5oLgmQUjC6TFuCUP7FJ
xrWckD2s9GXm4SfssWPYo1/ACa0Ki1LHyKOw7t4BKp1EToh3dGKPz/PFiwdv
O5zw4wSfZ57CKlLhiHBEQU5QnRMm3chFHPNyUbFcE2wUcIC3H8PxH/51iMD2
8ixzMgfEMa232pjXo9Qd/VapKA6Ydnxzxl22EUVXNI7cesABclOP6GtnW9BD
w8a9PkUOUC/ntGnJ7UCKdxvUyouOgsGliwfpJQdQlsGL6v6Uo2B7+NnFHfZB
JCyrp7/59ihQvH7V/4FsCLFu118leByFWwPqebadw2gjoN7rs/JRqDCYIS+U
HkP5n38WB3xjB/aVINW+R5NIIuD5qYQ0dvjM8vz52tAkSrx9rg6/Y4cDSuph
x9WnUCThZ8+WJzuIsf239nprCtGyPL9+5A47KNPpBSYYTyP/zbMzMubs8JGe
9+x/6dPItbzuzx1VdpjuEv3pYjKD5j8FPQkUY4fO1juUFokz6MZ/ZykSOdhB
V97evfX3DDLWrzsytMMGKeavPY4GzaJ66aAP2/NscHKh50Rz8yzSOHxWiHWA
DVZ4FV43M88h2f4f8oalbLA+/s/lQfgcSv8eWHb3Cxv4j9Ug0uY5xP9JRyvo
PRtEGe4LxlHMoxh/ysbEF2wgPmbRgtTmEZP9D5OKR2wgq9d4tc9xHgXpBQ4M
3WUDE3ZKc8u4eUQirWOzc5UNTlExtlTWzyMPZsoFVn02CA+MVfq7No9WN2pd
5NTYoLDgdvDu0QVk3xewYyjBBvnp3qplagtotEzbz4GLDQrunlchWCwgs3gK
6ue0bGCkMrhl4LGAWp/Vvk7aZQXX+ux7DK8X0NlbAUcrF1mhnbmK8XbyAgJd
7U/Dg6yQqnh+zKR4ASlLUYj+bWSFnQsBN+tqF9BXptpstu+soP79TA5uW0DG
lky6o19Y4VpK30ha3wL6k24xkRrDCt3WybYOQwvo3WaK9/3nrBBQFhNLQsRq
WmtHVD1YodbdOt2qdwGNhKl/PXCLFQYeHvEIbFlAfkPPzzZcZAVDraZi58oF
JCTWNRahxQpS0v/m2HMWUN0D3kcWcqywyJJt+vj9ArpbdZdFiJ8VfNSj6GN9
FxA9Y1HmEiNxP2F+x9VmAeVYHNAp3D8Cl0TFG8hPLyDTtPOjT5aPAClf5r4B
xwLa3Ij21Bk6AracezMmK8T70phkZmw8Agb5vAlHYB6NDnid+ZR2BBw0rnMO
ms6jZyK1w7ejjwB5y2OBOfZ5JOzO5CEbeAT8B0sjqnrnkAN9anqV7RGIFTDg
29GbQwxX1zRDTI5Ak4nxtu3+LMpNUR8y1SDmL6jLKMmaRVunuhimeY6AK0pt
0yedRe9f8qZl0R+BYonP+nHEelXvv6vx8B8LvHFuzyXXmkH+rgfcDw2wANda
dbXGw2nElCzdLxbFAr37580ZciZR/m8v1zV/FlC94sgdqjiJzFAtbZkrC9Cq
di68K55Acb0W6PwFFvDXucb+OXccidEEJzrRssDmYPyb9z6jSMN50jHf7zA8
eeLT3iLVg6bKpA89vn8YVB8YzsqPdKEgqkefzlgdhvrxxoHnLzpR82emzu6T
h0HPJFpwsLcNmXepq2xvMcMpvqwI1+g65Kr6jkzdiRl2aVx5Lh1+jiIjOQcv
WTLDVn5yqG+zP85f/pDvdJ6I/404nv0aj/98/mz3SZwZjPhCVdw687AHTcYP
8lkmWHE6BTEWNfjJYPmLBismuJT2VES4rwvHKZ62nTRkgmfWHsVucj0Yh1Wp
/VNngsIMre3I4F5McqZuSeoYE5j6DKTelxrAzzLbDMP7GKHzipOxvcAoTqQ0
FflSxwjNFJYHV2AUV1t3k1QXMUJ3a9IteosxTME6kLPxhhEaNbO8C4PHcdCT
ycNXjBkhUWMqkPfHJE7tvbl4/zQjRPLzuQ8bTOGfsnPVwQRGYBpTYfLpmMLU
M0vuZfSMsOXtW3usYxpf8huNTf/LAJ7u6lRr52fwW8Wp84N9DHD4CsNFy5oZ
zPFx+SuKYgCvL3b7X9NmsYXJmtV9NwZofdTu4MY6hz9QbjElGDOAPO8ZyhdP
5zCvM6kbBQMDpD7qYnDRnsfWghRCykv04Dd5vlMocR5/7qXuvt1ADxyB7x7+
/jePhU6zKDcF0gOV5ExaYtICvrnBPrdnRw+fdQREXNcWcGrasRiCFj1Yfkq4
JXFyEc9d49e7wU8P/azm2bV+i1iM+fhuBAk9WLynplSpXsQOteKZNcN0MJpQ
J/WIdAlnehEsN8voYILEMP0/1SW8LKXAIPqeDlKnZL5fcFrChAkVMPekg+SJ
eYe+j0v4/lv1+yGX6SA0tdyXrXEJ5+pp8pcr0MG+qXcg5foSXt/X6Vg5TAeK
uqzNSWzLWCFf35/vNy3EmbLcWVFcxg/sLyiYtNKCLN+I/PiFZVzMdWnaP4sW
wtYmG73tl/F2q/nbwhBaeBnz9k251zJW/e/62dk7tPA3VbMoJWgZ/9x6nGSp
RwsyTfh50etlbOYQe6BLnBZu0CaJkL5dxtMjJdf1aGmhkF3ZLyB6Gbub9JVV
LNLAuVkDdt2oZUz+Y/OochMNKIRm7xuELeNwVdaHWZk04ElpMRIdsIz5suQ7
BUNpgIS3cEXccxln85nIvHekgfvRcdu0RH7ozf1QJkMaGP/mcPG0yTJuPhS2
EChNAyNBHXPNqsv4mnfW2T0GGohqyhQr417GiyuNSW6r1CAmnsvGuL+EH9ks
HFhopYZQf4YT7QNLmLqHyso6hxqe/PqVQl2whI+Xa3MYuFCDs6mtAem1JVwo
Y/ew2pgaij+l6reLL2GtpGedqnLUUCt9hgNtLuIbIRB6fJ0KWP7OqLH5L+Jf
+8MLHzqpIC5E2OzdmUXs4/rvLEsBFVhpLtZPki3iOHNVMtIHVBCQftyD+uEC
lmw2s3p4iQpe055X3BdfwGWnH35fUqSCaaeHBr+H5nGfSP7D/s1DoMnz9Tqd
yjxm2ZRczPM8BKhTILOyaRYn3NE/J2Z+CLQFhxuMHWax7PCd5HjVQwDF1xWv
H5rFRjUpVi//UsJY7GyfrMoMfhHB13WTOCNT7zZ7wtMpfIBwpPyoLwW8qfxX
L58zhl8nyHGGWVOAUHPYzAXCGOZlM/ag0KCAvezuNr6sUXxyL1R27QAF9LJo
zVnoj2CPxkMpjf4HQT+n80IcywBesd999TSIHLireK5vEN/bnVkyjAY3yUG9
dOA4rVobLlm/GcalRQ7r523b1ehasb9PW9i3fTL4WMBq9p91A+aITn699oAM
pnNFaS+TV2KtH0YRt+wOAInzRnGjuxwSpQs4rKh5AMLU9LmMP75G9CalEeR8
RHzLaDPR8hPqGxaK/DRICizCahNrLDnI8c9O5IAJKZQz5HadjwRkokY4ki5D
Co3SA1e7fCuRsp/dGw8GUuhtSr9gf7MakdG3vjnSQAK8enR2bw/XoWihpChD
DRLwlNToXf7TjB7f7Wfl5iWBcb+T9xt0W1HNDR6pvr/7WF1a1fcLC/F77rUu
ddh1H8eePrid/rYdCVFcl86W2seLpzIM3xt1oNXXP6XPz+9hQY87Ud/IOtF/
aXGEQOs9HO6jXUEw60JGClQygsf2MNNSnI/ddhfiqHCVqej9hwPMPy08jexG
2b1nZf8a/sNVJ3wmJIp7kJdtnmw0zT+8ow/Pk0/1ojOrx+QUfuxiqwfsTJ2V
vaifck3OSX0Xc6qpfhLJ70OJEdfkaXf+YrmiP+IaAv3IiadOPq3gL3YVHXi/
/qIfqX6RVdC+/xcvjoRXqy33I3KlDwoTEn9x6edv0+y6A6i5klLRZ3YH+zIM
ZAV9HEDvDFwUjyXuYB2CgPzL5QFk2z+oWHJ9B1d+hT8iSoNI6qaO0mXOHdzK
tT103XMQbf3KUVrv3sa1eEVBqWAQVT3mUn4dvo0rInkyC+YHUShVoLKUwTZO
pH9+YeLoEDJ780u5gWobt1yKfPlTYwgJ8Fmo2Nds4fSmVEFXuyG0nFGrctB3
C9+L95Je9B1Cxcoyqp/VtvDKZQZ2jegh9Kz6vSra2sS3Tb3ePEsdQrPNKhF2
xZu4UKdDSCN3CBn09Sy88NjEcPHuREvhEMqfcNfKVd7ExXXT1SeImGP58Ife
rT94vu+/r2+yh5DPVs7GXvEfHD8r47qcNISmDhgZCHn+wbuW12svRw0hXbrl
ZD2VP5j0aM3pSSKfbLaQ/fvbG1hcbP5qij3xvc8vZhb9bQNbTwXbFugOoUcS
ddnlnht4kbn7qYDIEBpVvEk1pbKBxXSefaIkHULap8lv0OysY3XTqkCPrkGU
ofe5RKZkHdf30BS+TBpEzJdOHTbzWsf5i+VO1+8PoqE73tWJO2v457lAmQ+7
A0jDneNYQ8kaJq0kMzhZNoBSnxa7//Jaw2ZN3IcPeAwgt8h1YfW/v3GzqPKS
/WQ/6o8Lf2pb+htziUxLa73pRyiN0Bv86DdmjqS/U6jRj6jLHZ73/P2F9yxP
n+yN6EPOddTj/0p/YdtptYs1Sn2oqz1VVdD7F7bON7xY3duL4mcmF5x3V3Fv
/UVKD+Ze5MhfEsuys4K9xBVc9Oy7kYrSn/PWXiu4IWjs55WtLkSuL7ufubOM
1W/Fcj0L6ELv3dOtdf4uYZOWqcfZHzpRXV2MsNfuAv5d8PGLZmk74nd6lD2y
N4MDZX5KjCc0oaVnRdYST2dwUM31h1Spjag4eo3Zc38a/6mZa4SMBmRYeded
mWQav5E0YFgp/om8j1ioniGdxH5sU/FvJmpQd6ladTrZKA4pJz065fodcXne
GP5NO4KN9DXDRDpKUYiXnnwY8zCW73pssKVagu4+PjZaf2wQ+/y04G4SKkL9
TygU7QUGcKv4M8PItAKk67Py4qBoP/YPyB69q5SPxJ5VKJ2S78X6B38M5Lnk
EOed9JdDKj2YtuqzXhtvNqIOiJjwQt14VFOHJjc/E80H2b0q0O3EvXd9WqrG
UpF5sMGUsVEHdv75Bn7FJqP6F0onVi+2494NnfN69xNRWijVjJh1K2Z/Engt
8lY8kuWd8gxrasa8a1fGd1g+IGaBIqGG3kbcmkbHS/36Hfot9Lzt4GQ95pWX
F5PWikJtIlcfn1qpw/GmF7QUpCNQtrik6KOdWtza1sXWbxyGwqT2OwsO1mAf
ZTfu99dfIGeZNp9VxirMyxN6y+ZlADKST5AQ56rA8YrCXAoEP3TdcT67waAc
k3hMCyqHeyNut9BDp+1K8CkSHRuGXHc07ClrVfioEJOU6dOJP3NCH552F4mH
52KSRQOxe/52qJh6g1vjQiYmeXedPKLTHCmxnmyWeJKESYLd7lb066O7mtR/
pS69xyQOSn0LZkqoNV8+75BVICYxcuTeZWZCnW4Z6rI5ToiExFOXy2ZE/cPD
M3NGsRGIpLi26sEhEWSUbV5z8tMnRGI8znHwriZqS2RmNXFLQySOHsUCJ0xR
mr6dXH5CNvL56EhRpGON5rUrBtRf5iOSmcgtz8t3kNjpY/4/HxQjklN36y8n
uaC7JzwlTK3KkE8vvYMFgyfqjrlzZ0UQkM9B3h5eeR/05210ef7RShTf+J83
/2V/xPqmltmLvhpZnXxhUrAShJTC128islpktSssj3dfIrNX/KXkWz9Q2MjM
gn/5a+QRYsRQv/gTwc5s8KeiSFQckFFk2t2ErOri7vdceI96n/XTcDS0oPjH
7xjNf8Uh71Pk2SsjrWjrkeJjE5tP6MNJWfKCznaUSqdK6RyYhKTUzmWxtXQg
3uOZlNM4BZWrWpl5/exEQXe4FU8zpaNhpdAMVN6N7C8G/LLezUKOikmXPhP7
Tsgt2wmv+my0J19GcjCvF5Xd5G44yJ+LuGXnTetT+hHhQmNPyK98dF1C+5/p
62FkG2xhFnyoFKlFJ4f+iR9BbgZne3zqyhCtHxmjvtkoYp8vM0Dh5WhuyebT
0q0xlDr1+Mtj3gr0uUawmhA4gbj41nvp96oRi3syVVHNDEqtdSngkGtCB75c
ag88P4t6DeK2xVEzWh2leG/WNYs4XOJqb+i1oCb9WxI7k3NoPypnwzOnFQUI
ihieJF9EiunmpKWV7Wh3zrTemm8VKQcaT3OldKM18kwpXbtVtMoTeCSZowfN
8xyMkE1bRY9CrrknvehBvRcLrpLJ/EJ3WLN4btr1ohZnOlhw+4UIHD1CvU29
qPaFnWBn8S/Ev8M8wyfXhwoqjiwlnvqNfOjngxLW+lDG4L0LL/1/I+Oe3fNh
Bv0ocbOmwL3uNyKRuZJWntSPwiUfPNE2WkNddcmbRmcH0POzzeNSkWuI3JOE
yyliAPnYCOuw9a4hXpZsXc3+AeT4rpth9vo64j7klx9sPojs8qXcWhPW0etO
e9/yiEFk0RLQWzyzjijGeENE6waR6fyw2ifxDTRfLGqRtTmI9A4qfXrutIES
EsIdCPxDSIP31UGXvA3EU6cvF6kzhFRPzNw239xALyrOieBbQ0jmEmrWOPEH
0dDZNb71G0Ii99/Kij/9g65UsWYfJPZbnpCVqMNVf1A417LnrxRiv0vR+fuX
YhPZnm1f1CL2W7rKj9cndTdRNeHQ8jyxv5IPbVY1hm6ixZ9/g1sKhtDfTUOR
gvZN1BTXsDeSNYR+M6eGfGDdQh6X3hRRfx5C85Ikv/4z30Jjf32voldDaOys
2UXHuC10YiSsyfHBEFKf8rZuGtpCpBEfpRuvDKEY30/3JI5to8h8P6YupSH0
51it5wuLbfQ5IkHUh3EIGZfM/zf/fhvdLh8Tq5kYRFmXGMLPDWyjSV26H7E5
g4h6TS4ulWMH/ZOXzSHxGkQ3X5mlU5rvoIOX8z8uqA2iSvHHhTff7SCG4BMG
V3YGEHfdp8qa3h204e/0VDt3gPg+q20WZP+LAo4+28u2HUCyHxhmxqP+Ig2J
4jM7xf0oVEV+7XT3XxT9XKK/z7wfzXeZ7ccf2UUWxhOXlDf70Gf6z2zXI3dR
Pbc84SlPH9pLrxUo79hF9zoXK52/9CJznQXpY4f/oRinC+lrMr2I2Uf+7MDr
fyg56eijBqke5Mh1xVS17R/qVROmlE3q/l9NVx6N1Re1kSjzPJN5nqcXydmm
IpIkVIR+MhWlJBEZSgklFUIykygiyXTImMzzPLym1yxJKtX3fmt93z93rWft
5+69n2efu+456/5xUWt5kNNzlr9o6fpnuWNcAyj8a5O/7aO/6JhFJFUXqQ9N
xSzfKev4i07YuheeONqHdGVZHnMy/UNPn3tOVub0oq3zp1/1Rv9DFgELDJGW
PUh16fuKlDEFFHggk83eDuSkte/aoAsFcLzq/WJt2o4eRvD9jLhDARZKXdXl
77+gJVG0d76eAqxj3Yv0fVtQxtn7glkGlBBv8/bffEwdYm/nsxAGKgghXBDs
l3+CDPgV+jodyZjT4oC6mge64oHO3L5NBVPpyj73OB7gtr0urhM1VCB9jW/9
xUYOvqNXGJxyaA9ES6vKMJlW4a236C3PQWoQ8r9xZyagE7fJHWS74kAN8jWs
UyGrXTgzV/N6821qSO0MUysX7MFWLxUO+jVQA46dt2gI6sPFD/mbe4/tBdqy
gbIjmsPY2+vHxEMnGkiKTWNWkZ/Ghxc39efDaOBFWKDVnfJpLHhhLetQNg0c
qrtspGpIxG32c54rizTA55rKonZyBsua926bXqOF+f/kuhbOkM9fLR2n05/R
wqfBtF7FwTk8bNhatfOBFnb/REhTnpjH9w/WheXu0kLJ5S7ted0FvCD7lmlv
xD7ouBv4VfAbCdfk5PvY5+0Dav66vTKnF3G8aE5fSes+MEhJD6KtWsSH+V4k
nWfeD6XNHHXLN5awUHzin48q+8HghkPQ564l/J31qROr9X6Y4Tx6T1ZyGWft
j5KsTdwPupV51fJNy/jW3YhI7sr94LlaEJ3PsoJPUoateI/vBw1TuW0X2xUs
GxR0vOnffrA7aEY0S1rBVD/93wmK0sHBZ1eIx4dX8IivL+d1Izowq89QP8+x
ios3Lvu3udJBV2N3k6/ZKr5/6eKoWCQdjGnsaAcEr2Inkqte4Gs6uJPLO3eh
cBVruZxP72mng806gSG5oVXMPOVALbtBB/95hUzU/l3F82dPu4Wy0YPs7eVQ
PpE1XDNo3TqkTg/nTsYzKKE1HH/SUkHZlh6Y2mKivtutYe9Os9h7N+lhr2Zn
1wXvNXzY7Mi3iWR6kEzWve5/ew0LNhvYaNbQww6bx4hk9BreMtD7GDNFD4b5
uvIXn67hthptgTkqBtAMv3weEtdwlo7GbV0JBuAYGtXPSFjDt8qUiU+OMMCh
JzkOMXFr2FpV3njZgwHaCHo8/+6vYbk3UnkG0QxwZFIp63vAGqaSFaNPesMA
R3l7qK+4r+GRbCHvr10MoBXeyOR9Yg2X0RRY5W0ygJNQtkyg5hp+4qZNcORg
BEutfwEE7jV8paWJn0uTEewSq6Wyv61icxlrinZbRmDaesDd/GUVSz+Yng2/
yQiyjPe30l6u4r3L3p91khlBsGJElnB5FdcURMblTTDCZGMo3xvKVZzEyH3D
kYIJFH8oXkluWME3vLPOcokywZzrzqlz4StYWRmL37nABH8l1wkRW8uY4bH5
/oP3yPy/p6v+5Cxj0tfh1a95TNCWemTi8qllnF6yVea4wgQhf7t2ruQs4WCO
sGQuJmYwibZS5zFdwmeuM4e0KzFDztDqw6WFRcxGkDU9eI0ZViQtq0z4FvGd
CsdRrl/MsNg0P5V4cgEXxWxPzjOywEjrEyGD4XkspHfI6pMQCyh+lniZcHYe
/05t1bwJLCB79WbdE5s5XOo0928+nAUUBD5k00jPYFFW+aufnrKAzYh9t+Ez
Io6tuzr7IpsFAkxpNPv+TWMvUYrP1s0soAL1X8zap7DkLF/cJzpWINTUeV9P
HMOJbpbiqY9ZgUE0Af2e6saB3pUmp16ygWWt9dvt8yXIAH13YXrLBl81wsZt
XpcjOhal0OYaNuB2vN6SvFaNEoszPmpPsAGvxP3fgSoNqGwrUlZIkB1++/OV
p9zoQJsBdgwLSexQ9bP9+KF/Q6jCLE46LZ8dSB4mh7SlR1CoQJvR6Qp2yKzy
PKl/bBSx1KCgL8PskJV4snv8wThSpJRae8vDAT0W12+LkabQdrcTnYc0BzAI
Ux3t9JxG1RlJkqJaHFBM2/pyc2kamRsxOT615QBmUWNdpxki8rz3vdM/ngMO
oRRa1ZJZpGqntKKSwwExrJRcmwfm0E9pj33L7zkg66YyVVnkHLrfOgYO/Rww
YlSbwGM9jyyTuRy45jhAYKOeLa10HnFfsrzZucUB5RoH2f6wLqAcxoZifQ5O
oLgpM8tUv4C8J/60/xLjhDHPkbwiLhLSeEtYKlHjBFl2wWFKNxJqsHwtKnmS
E1zSTkDcHxKKEpnTmzzPCWcL35R+MlxEVptCZxOvcoIZPsd6N2IRTT+Je0IX
xwnnYubo8iiXUJ5L29v6dE4wCKc6/ld7CV3RoGm7VcwJOwsSX7q9lxCBBkga
deT6SUwfhdKW0N+Bm9TrXZywFHyJON2+hJpyS4TzpjhBg0MwnWdnCcX4r+o6
b5Dj0scna4WWkbWp1Gk+Ci7ISIvhHtZfRgJ8ztd7mblA4lSxtZPzMppdSnoc
fYALXHgqVGyCltHryr5CYyUuqJh5OFzxbBldjWZq/avHBV+Nsmke5S8jHQeT
+Q8WXLAtGEvVV7mMqBTDqHzOccHDLvL28/My+vy3UkjWmwvef/M6Vd67jGI7
v+vMBHHBm9KmvQ4j//v9Ssk2JYYLuOhUNYPGl9EW7YTzq1Qu0Dk2sbA8RuZf
jr5U9pYLbDL/EAyGlpH8oM6N+lou+KGe2BDRSc6vtxja1c0FS9Q1C7WflpFr
TkL0OJELOi7Evd8pJvfDdDhh6RsXkA6p/tJ8sYxSr2+l/6Dmhgdx1wl375D7
H88ooObiBrOx6IxVt2U0YHTiA6sUN9gXBIgEHiHrLfhXJ6TFDV5qnibaYsuI
ieNNm5wpNyzBjI367yX0OtB+UOsMN/ieHlO/2bmETGboiMYXuWEr8vVlTvJ8
Zo9+XLG6xQ3pmQOa3F5LZL+5qLxSuUHzqSm6t7uIykMbGALecoPsstgKB15E
1otXue/VckMjy5Hvh4MXUUx5p3w6kRtWLGMMxjdJSFY4mPDmGze0vpa8fiGP
hJruyRtUUvNAl+740PAZEvprE2nbL8kDKrMRRX1lCyiphnCeSOCBouDrHOFO
C0hTcv7SugkPRJmnhHjRktfzd4Ow/Rd5YIAOVMyOzaPJJ7sFh97ywD63EKvH
lbPo1u/8D0dreaBC/5rCnROziOe/059su3lA2eGVkevcDLJULRv0+cYDgS/K
x21pZ1Bt12WqHAIvbC74cKRoTqMMxhlbplpeeFCgeUOmeAS53vtMNdnFB21T
hqltlxuRPfPFD5+n+GCEqNvqnV6PTiQwXCrd4APLkfeHng/UId3c4/2RLPxA
XU5xw+R5FWJr7s9Vt+QHk16PHJ+qQrTv+A37A078cN+Sn2DClov+DPCw0l3h
h7S4GdG84DREmj8bMPmIH2DuskTY9i1UTUM0f9BJ5vdaeFIuZeF3D8Mpr0/y
Q6JRvmRgUz7O45Ioc1znh2iN43WVBkU4TtL9gAazAHQVXCr+2/seux9e+zpp
IQDyFSVNf/hq8bmORzmt5wSg3OlWmaFVHT5po3L2vbcAlLn75o2FfMJ6rr4N
Dx4KwKyh6uCd+gbMEfErXqNDAKizk9GD0RZMx5RiJjwhABNVFx5ptn7G/54d
oqBfE4DNDWknl7eteCk7xGOKURDKb3CeoXJow1MKokJfBAXB4tD2UxuJdtz/
vr7nvYIgpHVo+23NtOPaRhrdqGOC8PBMNf2KYScuO5a3cd1BEPasyJ/VmevE
r/tNs528BMnPC3u9g14XTnNYPm0WJAjCJnShhLtdOH4umkkzRhByby1JyzV3
4WgvxXrhF4KQrzASqkPdjUO/d96gLxSEqKG7tu663dgvyEd+u0oQ7G5V+pdf
7saX9rJPT7UJQoRL33ul1G58Pqb02ZcxQbC5vzrR29yNbTltjpatCILr9Frd
65VubP7ix9+0XUG4InFeGjP0YAOJ5yVRDELw3pa3n0u6B2sV6rj7CQiBQVF2
aJVeD1bQGBNwlhcCkuPL0QrLHixaHdRtpisE/rU1oYLnejCP8YEITXMhKIls
pvjq2oOZ2mt1ROyF4Nfrw10GF3vwnlPn1+kvCYF8gNhxETLeGduTtR0oBBl9
1LXJZP6aS7bddJQQ8DFHGX9y6MEzK4cZ25KFwMPacSKbXG/Il1RX9loIRE/w
OtuhHtyxG+mXXikEsz9+31iR6cH1d+Tkor8IwV2tBynXWXqwzr9naZKjQgC/
unlzvnXjdzcpuOqWhMAl19CMv7cby255Rp39JQQnBbNKFt904wzvfort/QeA
vfx5uOS9bsy3iPxieQ/Am17qZwtnu3Hcf/nLsjIHgKVO29VQoRuH2d0ecDQ5
ANx6Ymekm7rwr55Fs1+2B0D6pHr4dEwXvnrMuu6p2wGgZr3u/cyqC583kCn4
HHEAPhY88czN6cQG8r2hao0HQE8/yVzUsx1X5Bz60d53AIqYP/DSdrZhFZG8
S+6zB+CXC2NVnFIbZomqed1BKQze/lTTEbOtmCLkSfweEWG4tLnd4iTegqc8
Dl3ychQGq56Jww4qn7BA7maOjpswSD47G/T7Uh22m82dpr0sDO4yL+s582px
1zk224xgYdh4t1/b92ANrj25oD/4QhjK7Mud1fnL8W5syq2sbGEY6pE4S0wo
w1odJz74FAqDsrLGjYvc73GRSZU8Q7Uw+LutK3wTfodfHnrMrT8mDNCRuvdN
fx4eCThsxTQrDEWF5bENXDmYq/x39OiyMBhduH6K6JKJH6q6Uvn9FoYQ1wQf
E9sU3HqZ/5DhHhFIk2X3XzdLwDSFXTdY6EXASTu119k5DgdLHVzN5yPjlkQq
4aVQXOGyIeUvKgIh3+dUXw374O307PPGsiJAEXLo7sE2IewtwDI0qU3mJ0hM
UsiFoPzTjWyF+uT8FaJGZRP30Hx8wLEAUzJ/KXiDUfsROsc694njtAhMbQ58
TL4Yj6iT+rainMm46ZJHY9tzlC/aILnHk4wXPf2tvqUgy9cldgFXRUA4iFa9
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
smMFteHKr3vMZlSF6P/+7wr//3/X/wFJG9Np
       "]]},
     Annotation[#, "Charting`Private`Tag$10443#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
co8OKOeHkt6oLKL/971a+P/fq/0/duA9jg==
       "]]},
     Annotation[#, "Charting`Private`Tag$10443#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{606.0000000000001, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-8) Pi, 8 Pi}, {-0.9904620667677436, 
     0.9999850334123825}}, {{-25.132741228718345`, 
    25.132741228718345`}, {-0.9904620667677436, 0.9999850334123825}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.764595534318038*^9, {3.764595569190857*^9, 3.7645956092537065`*^9}, 
   3.764670322352174*^9, 3.76478931350264*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"dd11bce0-8d40-47f3-8d4f-595a75ee25bf"]
}, Open  ]],

Cell["\<\
(*8b*)\[LineSeparator]Yes, the oscillation pattern does repeat itself. 

The masses do have the same oscillation frequencies. This is clear since the \
two waves have the same period, thus the reciprocal of this period (the \
frequency) must also be the same.\
\>", "Text",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.764788231325591*^9, 3.7647882465488644`*^9}, {
  3.764789325286828*^9, 
  3.764789326349867*^9}},ExpressionUUID->"f41d861a-abbc-4648-8d1f-\
bbaa2b98cad8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x0", "=", "1.5"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "equilib", " ", "positions", " ", "of", " ", "the", " ", "masses", " ", 
     "are", " ", "at"}], " ", "\[PlusMinus]", "x0"}], " ", "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xwall", "=", "3.5"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"wall", " ", "positions", " ", "are", " ", "at"}], " ", 
    "\[PlusMinus]", "xwall"}], " ", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wallgraphics", "=", 
   RowBox[{"{", 
    RowBox[{"Thick", ",", "Black", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "xwall"}], ",", 
          RowBox[{"-", ".5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "xwall"}], ",", ".5"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xwall", ",", 
          RowBox[{"-", ".5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"xwall", ",", ".5"}], "}"}]}], "}"}], "]"}], ",", "Thin", 
     ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "x0"}], ",", 
          RowBox[{"-", ".1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "x0"}], ",", ".1"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x0", ",", 
          RowBox[{"-", ".1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x0", ",", ".1"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.760980914313774*^9, 3.760980951347515*^9}, {
   3.760981091911327*^9, 3.7609811056426015`*^9}, {3.763112987830597*^9, 
   3.7631129946791286`*^9}, {3.763113463364294*^9, 3.763113536601511*^9}, 
   3.7637386082296286`*^9, {3.7637386550017285`*^9, 3.7637387054846525`*^9}, 
   3.763738822589004*^9, {3.763738864600073*^9, 3.7637388656930804`*^9}, {
   3.763738912806382*^9, 3.7637389136487875`*^9}, {3.76373907894836*^9, 
   3.76373918813746*^9}, {3.7637392660141597`*^9, 3.763739365404397*^9}, {
   3.763739436884055*^9, 3.7637395237796125`*^9}, {3.76373959675688*^9, 
   3.7637396014837103`*^9}, {3.7637396584396753`*^9, 
   3.7637396615284953`*^9}, {3.7637397376569834`*^9, 3.763739752882681*^9}, {
   3.7637398193421073`*^9, 3.7637398238505363`*^9}, {3.7637399157195253`*^9, 
   3.7637400235796165`*^9}, 3.763740055825023*^9, {3.7637400878218284`*^9, 
   3.763740117993422*^9}, {3.763740161645502*^9, 3.7637402004429507`*^9}, {
   3.763740242019845*^9, 3.763740258555951*^9}, {3.763740289054147*^9, 
   3.7637402931881733`*^9}, {3.7637403431104937`*^9, 3.76374034568451*^9}, {
   3.763740671848802*^9, 3.7637407027067995`*^9}, {3.763742980633145*^9, 
   3.763743072850336*^9}, {3.763743103522133*^9, 3.763743128841096*^9}, {
   3.763743183644247*^9, 3.763743194283515*^9}, 3.7637437063591995`*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"1663252d-9f02-4203-ad24-8add569be821"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 9. Coupled harmonic oscillators, animation", "Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.763981172658908*^9, 3.763981205701132*^9}, {
   3.7639824518839417`*^9, 3.7639824534595613`*^9}, 3.7639834296208773`*^9, {
   3.7639855765286655`*^9, 
   3.76398557690407*^9}},ExpressionUUID->"b0c0f806-a611-475b-816f-\
081949a23dcf"],

Cell["\<\
a) Modify the animation above to include the second oscillating mass and the \
other two springs.  Give them all different colors.  Mathematica recognizes \
color names such as Blue, Yellow, Red, Green, Magenta, Brown, Black, White, \
and others.  Mathematica draws the object in the order you list them, so you \
may have to play around with the order in which you call them to get them \
placed properly in front of or behind other objects.

b) When you have finished (a), copy & paste the animation command to another \
line, then modify it so that it shows the second normal mode.\
\>", "Text",
 CellChangeTimes->{{3.7639812259657917`*^9, 3.7639812410833855`*^9}, {
  3.763981288149189*^9, 3.7639814209380913`*^9}, {3.763981454306919*^9, 
  3.7639814706559286`*^9}, {3.7639815169729223`*^9, 3.76398153319713*^9}, {
  3.7639815633211164`*^9, 3.763981614598974*^9}, {3.763981707031595*^9, 
  3.7639818487127953`*^9}, {3.7639818893195953`*^9, 3.763981891628395*^9}, {
  3.7639819304411955`*^9, 3.7639819621715956`*^9}, {3.7639824678117456`*^9, 
  3.7639825238818645`*^9}, {3.763982909521809*^9, 3.7639829412838163`*^9}, {
  3.76398305466807*^9, 3.7639830562436905`*^9}, {3.763983119299699*^9, 
  3.763983272369861*^9}, {3.763983342571761*^9, 
  3.763983419387146*^9}},ExpressionUUID->"0ff550d3-dc21-4c0b-862e-\
cd19d197d3c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"upos1", " ", "&"}], " ", "vpos1"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Magenta", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "x0"}], "+", 
              RowBox[{"upos1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x0", "+", 
              RowBox[{"vpos1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", "Blue", ",", 
        RowBox[{"Ball", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x0"}], "+", 
             RowBox[{"upos1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
          ".15"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "xwall"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "x0"}], "+", 
              RowBox[{"upos1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", "Green", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xwall", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x0", "+", 
              RowBox[{"vpos1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Ball", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x0", "+", 
             RowBox[{"vpos1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
          ".15"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "xwall"}], ",", "xwall"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
    RowBox[{"AnimationRate", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7646021002644324`*^9, 3.764602147544919*^9}, {
   3.7646022188793364`*^9, 3.7646022431204567`*^9}, {3.7646023175014114`*^9, 
   3.7646023947847137`*^9}, {3.7646027942286844`*^9, 3.764602803588682*^9}, {
   3.764602850086712*^9, 3.764602894573262*^9}, {3.7646030726779575`*^9, 
   3.7646031165774965`*^9}, {3.764603150583514*^9, 3.76460317207198*^9}, 
   3.7646032277767925`*^9, {3.7646032579835157`*^9, 3.7646032619050226`*^9}, {
   3.764603409039136*^9, 3.7646034184728675`*^9}, {3.7646040817073193`*^9, 
   3.7646040818469477`*^9}, {3.7646041390674047`*^9, 3.764604285047058*^9}, {
   3.764785027625925*^9, 3.7647850389062543`*^9}, {3.7647853387820673`*^9, 
   3.7647853481539965`*^9}, {3.7647854040086308`*^9, 3.764785410105359*^9}, {
   3.7647893657504816`*^9, 3.7647893665752754`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"a0f886a9-7425-405a-83d6-9dba4ff04c1e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 7.557210922241212, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 50}}, Typeset`size$$ = {540., {73., 81.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$10524$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$10524$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Thick, Magenta, 
         Line[{{-$CellContext`x0 + $CellContext`upos1[$CellContext`t$$], 
            0}, {$CellContext`x0 + $CellContext`vpos1[$CellContext`t$$], 0}}],
          Blue, 
         Ball[{-$CellContext`x0 + $CellContext`upos1[$CellContext`t$$], 0}, 
          0.15], 
         Line[{{-$CellContext`xwall, 
            0}, {-$CellContext`x0 + $CellContext`upos1[$CellContext`t$$], 
            0}}], Green, 
         Line[{{$CellContext`xwall, 
            0}, {$CellContext`x0 + $CellContext`vpos1[$CellContext`t$$], 0}}], 
         Ball[{$CellContext`x0 + $CellContext`vpos1[$CellContext`t$$], 0}, 
          0.15]}, PlotRange -> {{-$CellContext`xwall, $CellContext`xwall}, \
{-1, 1}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 50, AnimationRate -> 2, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{612., {130., 139.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.764602240029729*^9, 3.7646022461204357`*^9}, {
   3.7646023182983007`*^9, 3.764602323735697*^9}, 3.7646028063243575`*^9, {
   3.764602852444437*^9, 3.76460285900488*^9}, 3.764602945006689*^9, {
   3.7646030748172655`*^9, 3.764603093514242*^9}, 3.7646031733725*^9, 
   3.7646032291970005`*^9, 3.7646042577822556`*^9, 3.7646042879163804`*^9, 
   3.7646703493409643`*^9, 3.7647853495083675`*^9, {3.76478934976921*^9, 
   3.764789369075586*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"df9af749-7e6d-4180-aeb9-31c48d04a5d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"upos2", " ", "&"}], " ", "vpos2"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Magenta", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "x0"}], "+", 
              RowBox[{"upos2", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x0", "+", 
              RowBox[{"vpos2", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", "Blue", ",", 
        RowBox[{"Ball", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x0"}], "+", 
             RowBox[{"upos2", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
          ".15"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "xwall"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "x0"}], "+", 
              RowBox[{"upos2", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", "Green", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xwall", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x0", "+", 
              RowBox[{"vpos2", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Ball", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x0", "+", 
             RowBox[{"vpos2", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
          ".15"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "xwall"}], ",", "xwall"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
    RowBox[{"AnimationRate", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.764602211437248*^9, {3.7646141790430126`*^9, 3.764614197513668*^9}, {
   3.764785044457401*^9, 3.764785049442067*^9}, {3.764785392644007*^9, 
   3.7647854672875423`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"2d4a72fa-52ca-435e-8699-7347f5d64f74"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 47.03861045837402, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 50}}, Typeset`size$$ = {540., {73., 81.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$10552$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$10552$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Thick, Magenta, 
         Line[{{-$CellContext`x0 + $CellContext`upos2[$CellContext`t$$], 
            0}, {$CellContext`x0 + $CellContext`vpos2[$CellContext`t$$], 0}}],
          Blue, 
         Ball[{-$CellContext`x0 + $CellContext`upos2[$CellContext`t$$], 0}, 
          0.15], 
         Line[{{-$CellContext`xwall, 
            0}, {-$CellContext`x0 + $CellContext`upos2[$CellContext`t$$], 
            0}}], Green, 
         Line[{{$CellContext`xwall, 
            0}, {$CellContext`x0 + $CellContext`vpos2[$CellContext`t$$], 0}}], 
         Ball[{$CellContext`x0 + $CellContext`vpos2[$CellContext`t$$], 0}, 
          0.15]}, PlotRange -> {{-$CellContext`xwall, $CellContext`xwall}, \
{-1, 1}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 50, AnimationRate -> 2, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{612., {130., 139.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7646143131164494`*^9, 3.7646703564449234`*^9, 
  3.7647854682479267`*^9, 3.7647893714641953`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"388293c9-6fb0-4430-8065-14b1ed474fbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"unew1", " ", "&"}], " ", "vnew1"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "one", " ", "was", " ", "just", " ", "out", " ", "of", " ", 
    "curiousity"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Magenta", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "x0"}], "+", 
              RowBox[{"unew1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x0", "+", 
              RowBox[{"vnew1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", "Blue", ",", 
        RowBox[{"Ball", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x0"}], "+", 
             RowBox[{"unew1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
          ".15"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "xwall"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "x0"}], "+", 
              RowBox[{"unew1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", "Green", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xwall", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x0", "+", 
              RowBox[{"vnew1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Ball", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x0", "+", 
             RowBox[{"vnew1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
          ".15"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "xwall"}], ",", "xwall"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
    RowBox[{"AnimationRate", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7646703789527473`*^9, 3.764670396201615*^9}, {
  3.764785052263547*^9, 3.7647850776707077`*^9}, {3.7647854955974245`*^9, 
  3.7647855218564034`*^9}, {3.764785681970278*^9, 3.764785703207486*^9}, {
  3.76478576865353*^9, 3.7647858235978136`*^9}, {3.764789375652989*^9, 
  3.76478941480735*^9}},ExpressionUUID->"0bd91b37-6f79-465f-b09a-\
88e211fc8237"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 11.156790733337402`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 50}}, Typeset`size$$ = {540., {73., 81.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$10578$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$10578$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Thick, Magenta, 
         Line[{{-$CellContext`x0 + $CellContext`unew1[$CellContext`t$$], 
            0}, {$CellContext`x0 + $CellContext`vnew1[$CellContext`t$$], 0}}],
          Blue, 
         Ball[{-$CellContext`x0 + $CellContext`unew1[$CellContext`t$$], 0}, 
          0.15], 
         Line[{{-$CellContext`xwall, 
            0}, {-$CellContext`x0 + $CellContext`unew1[$CellContext`t$$], 
            0}}], Green, 
         Line[{{$CellContext`xwall, 
            0}, {$CellContext`x0 + $CellContext`vnew1[$CellContext`t$$], 0}}], 
         Ball[{$CellContext`x0 + $CellContext`vnew1[$CellContext`t$$], 0}, 
          0.15]}, PlotRange -> {{-$CellContext`xwall, $CellContext`xwall}, \
{-1, 1}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 50, AnimationRate -> 2, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{612., {130., 139.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7646703977993183`*^9, 3.764785082055971*^9, 
  3.7647857043045187`*^9, 3.7647858265728464`*^9, 3.7647894050634165`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"4e10a18b-b34d-4207-995f-2d5aa2e8565b"]
}, Open  ]],

Cell[TextData[{
 StyleBox["What to turn in", "Section"],
 "\nWhen you are done, SAVE this entire file, with all your work.  Then SAVE \
it again under the new name \[OpenCurlyDoubleQuote]HW#10-",
 StyleBox["yourname",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote], where ",
 StyleBox["yourname",
  FontSlant->"Italic"],
 " is of course, ",
 StyleBox["your",
  FontWeight->"Bold"],
 " name.  Delete all but the Assignments themselves (of which there are 9).  \
Make sure the entire worksheet runs correctly and that you haven\
\[CloseCurlyQuote]t deleted anything important!  Turn in this assignment \
worksheet, with all of its input and output code, through the link on our \
Moodle page."
}], "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{
  3.747319247022073*^9, {3.747319299594073*^9, 3.747319343466073*^9}, 
   3.747321684996185*^9, 3.7473279456052113`*^9, {3.7639863838902135`*^9, 
   3.7639863929851303`*^9}},ExpressionUUID->"6e0d9485-0b23-46d3-9024-\
3fccf558212a"]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{1536, 821},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
ShowSelection->True,
ShowCellTags->True,
Magnification:>1.5 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 214, 4, 80, "Subsection",ExpressionUUID->"c1a3599c-7d58-4e61-8e95-78df617c86e0"],
Cell[784, 28, 1543, 28, 320, "Text",ExpressionUUID->"f7e9895d-05c6-454b-8a0a-6ee282dbac95",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[2352, 60, 704, 16, 102, "Input",ExpressionUUID->"4fcd5e8f-994c-4e5a-a6c6-0ebecd83fbf0"],
Cell[3059, 78, 374, 10, 49, "Output",ExpressionUUID->"e3632275-acbd-4b7b-a3f1-0140cf8f55a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3470, 93, 526, 12, 127, "Input",ExpressionUUID->"a53103e8-de58-4de8-87ff-5c731207bc99"],
Cell[3999, 107, 372, 10, 49, "Output",ExpressionUUID->"03c5a782-84ac-42f2-893e-fa1307682ce7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4408, 122, 643, 16, 127, "Input",ExpressionUUID->"eafbc1ab-5e5f-405d-8469-2fc37b29e3b3"],
Cell[5054, 140, 458, 14, 49, "Output",ExpressionUUID->"9790302a-6933-4b1b-bfa1-a116c41ef0b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5549, 159, 292, 5, 73, "Input",ExpressionUUID->"3472a211-3dc3-47d5-8bc6-011d8c332b1b"],
Cell[5844, 166, 401, 11, 49, "Output",ExpressionUUID->"d0a97b96-7f55-4061-a7c7-b6e31e205a71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6282, 182, 174, 2, 43, "Input",ExpressionUUID->"a8b95155-8263-4ded-92b0-70ee20f23e89"],
Cell[6459, 186, 401, 11, 49, "Output",ExpressionUUID->"d59215d9-1d07-4b45-9c11-d3b3249a1ad1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6897, 202, 106, 1, 43, "Input",ExpressionUUID->"dd5af7fc-b98a-4002-817c-2050da30c39b"],
Cell[7006, 205, 485, 15, 49, "Output",ExpressionUUID->"6351ece8-7ab0-4230-b6c5-6170d752007b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7528, 225, 332, 6, 73, "Input",ExpressionUUID->"9f9b78f4-74cf-4851-91cd-1f0580dbb08d"],
Cell[7863, 233, 660, 20, 117, "Output",ExpressionUUID->"6854ea0b-55a2-42c5-81f9-19782569efd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8560, 258, 143, 2, 43, "Input",ExpressionUUID->"a0b0a250-efe1-4955-9a2b-b6dd3a9d43cb"],
Cell[8706, 262, 660, 20, 117, "Output",ExpressionUUID->"51d67294-0d86-41af-9a80-150aacdfe3cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9403, 287, 206, 3, 43, "Input",ExpressionUUID->"8c98bf07-fb30-42b7-8831-ee01363a5065"],
Cell[9612, 292, 750, 24, 117, "Output",ExpressionUUID->"e3d3cc5e-85df-48b4-955d-34d2dde26df4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10411, 322, 300, 6, 92, "Subsection",ExpressionUUID->"b7a4cc63-12ba-4ef8-b26d-886bd84044f3"],
Cell[CellGroupData[{
Cell[10736, 332, 783, 18, 189, "Input",ExpressionUUID->"db1109a1-ec85-4cf5-9eb0-cb4bb3c05471"],
Cell[11522, 352, 622, 19, 91, "Output",ExpressionUUID->"679cb1bc-a4f1-41b5-8143-a432f4be2533"],
Cell[12147, 373, 444, 14, 49, "Output",ExpressionUUID->"258a4a7a-c99a-4606-a092-1aa9d3ce2529"],
Cell[12594, 389, 776, 25, 91, "Output",ExpressionUUID->"49deb444-14e4-4857-90fb-67725e47dce1"]
}, Open  ]],
Cell[13385, 417, 1165, 19, 421, "Text",ExpressionUUID->"01498197-436c-4e24-8541-b759f5e5af05"],
Cell[CellGroupData[{
Cell[14575, 440, 376, 9, 73, "Input",ExpressionUUID->"aec2a18b-d268-4469-a66d-c34c00810962"],
Cell[14954, 451, 237, 4, 49, "Output",ExpressionUUID->"852ce8fb-b6bf-4a0b-be79-aa0775c4a67d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15228, 460, 372, 9, 73, "Input",ExpressionUUID->"ab7641ee-cef0-4717-99ed-d20905b61135"],
Cell[15603, 471, 237, 5, 49, "Output",ExpressionUUID->"b60f5165-7068-458f-bbaf-8ed170b69c10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15877, 481, 580, 13, 73, "Input",ExpressionUUID->"87ddba56-b72d-4602-917d-6fedfbac6028"],
Cell[16460, 496, 241, 5, 49, "Output",ExpressionUUID->"db4c9a92-81ae-4de0-9c49-d7ef21bd891b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16738, 506, 499, 12, 73, "Input",ExpressionUUID->"5342e358-89ab-46d8-acce-4463a2ff649f"],
Cell[17240, 520, 187, 3, 49, "Output",ExpressionUUID->"b5ff4262-c329-428f-af91-846f4253d0b6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17476, 529, 269, 5, 92, "Subsection",ExpressionUUID->"846274e2-26e5-4974-8eea-408192ab34a1"],
Cell[17748, 536, 751, 20, 140, "Text",ExpressionUUID->"68111252-87c1-48b8-ab98-a36a71e215da"],
Cell[CellGroupData[{
Cell[18524, 560, 598, 15, 73, "Input",ExpressionUUID->"3a300de0-ac95-4c13-aa4a-2dab8cb3f0bd"],
Cell[19125, 577, 430, 11, 49, "Output",ExpressionUUID->"ff33902e-d90c-4b96-a39b-dbc9881e2291"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19592, 593, 210, 3, 43, "Input",ExpressionUUID->"04c7d49c-3bfe-428a-bfa2-cdaaf2fa7a54"],
Cell[19805, 598, 676, 21, 117, "Output",ExpressionUUID->"8843e3b6-d5c5-4305-b83f-7707a802023c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20518, 624, 203, 3, 43, "Input",ExpressionUUID->"a1c1e562-b838-4f63-a866-08f434c1f88b"],
Cell[20724, 629, 194, 3, 49, "Output",ExpressionUUID->"7586b99d-a222-4db2-8593-e64f25b09040"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20955, 637, 799, 12, 80, "Subsubsection",ExpressionUUID->"5aba9b93-e72b-42d9-9eb0-d2dadade72b5"],
Cell[21757, 651, 2074, 47, 287, "Text",ExpressionUUID->"7633ad2f-e4cf-42f0-8c58-b306c668835e"],
Cell[CellGroupData[{
Cell[23856, 702, 710, 19, 102, "Input",ExpressionUUID->"56340be4-2aa9-45fd-aeb5-a86f145c0518"],
Cell[24569, 723, 676, 20, 117, "Output",ExpressionUUID->"b40d9d12-23a1-451b-b36b-9ca49d890530"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25282, 748, 357, 9, 73, "Input",ExpressionUUID->"d6104ac2-4f44-4feb-bab1-9efa62a82c0f"],
Cell[25642, 759, 646, 20, 117, "Output",ExpressionUUID->"dbbcd58e-da3d-4ec3-a62f-eacd6e7b37c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26325, 784, 353, 8, 73, "Input",ExpressionUUID->"b639a3b6-daee-4419-8864-7a0946b14bb5"],
Cell[26681, 794, 666, 21, 117, "Output",ExpressionUUID->"f9eacaed-932e-4cf7-9709-f3d42dd3fe41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27384, 820, 389, 9, 102, "Input",ExpressionUUID->"2d7a8cd8-68ce-4915-b753-67e33a27961d"],
Cell[27776, 831, 644, 20, 174, "Output",ExpressionUUID->"4aeb186e-30ba-40ce-be5d-6c26d49a65b3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28469, 857, 907, 13, 80, "Subsubsection",ExpressionUUID->"fc9b47d5-6b0f-4682-9557-dd05176bd6ce"],
Cell[29379, 872, 3506, 63, 542, "Text",ExpressionUUID->"3489b19d-c071-47a2-9df4-0ce8197c4316"],
Cell[CellGroupData[{
Cell[32910, 939, 677, 18, 102, "Input",ExpressionUUID->"0563cc32-cd7d-4b0a-a3aa-9bfdd22baea8"],
Cell[33590, 959, 432, 11, 49, "Output",ExpressionUUID->"b3c855ed-1630-4f1f-bfb2-3f72a3145b63"],
Cell[34025, 972, 703, 21, 117, "Output",ExpressionUUID->"3c5cbff5-8ec4-4a39-999c-e48ab10e7ac1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34765, 998, 448, 10, 102, "Input",ExpressionUUID->"977a7a69-f672-4473-b1bd-c38deb35a129"],
Cell[35216, 1010, 293, 6, 49, "Output",ExpressionUUID->"e32eb802-b17a-4f04-a6f0-f600120ade41"],
Cell[35512, 1018, 472, 12, 49, "Output",ExpressionUUID->"a3f065fd-fa42-4c55-8169-fcc464e51d83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36021, 1035, 400, 8, 102, "Input",ExpressionUUID->"619ccb36-9e29-4ab0-8703-86bdf9999c74"],
Cell[36424, 1045, 747, 24, 117, "Output",ExpressionUUID->"d79b4022-b44c-43c4-8989-31feb10ae498"],
Cell[37174, 1071, 727, 22, 117, "Output",ExpressionUUID->"7a21f763-3f96-447a-85bb-f66197bee008"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37938, 1098, 402, 9, 73, "Input",ExpressionUUID->"9cfa4143-53e3-4497-a031-2884ae0ae780"],
Cell[38343, 1109, 225, 5, 49, "Output",ExpressionUUID->"17fd49a1-8370-4a5a-ac93-196e27b032f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38605, 1119, 348, 7, 73, "Input",ExpressionUUID->"3d63fde8-5c9e-4862-89c5-ba20d4f69a6e"],
Cell[38956, 1128, 596, 17, 49, "Output",ExpressionUUID->"e04f4950-1405-4af0-baa1-a885a1d531c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39589, 1150, 247, 4, 43, "Input",ExpressionUUID->"33673a28-79f0-466b-bd99-e3530598d610"],
Cell[39839, 1156, 922, 28, 91, "Output",ExpressionUUID->"f3607e02-ce22-456c-ae5a-e004b5f69140"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40798, 1189, 427, 10, 73, "Input",ExpressionUUID->"1dd2951e-7bcc-4050-8b7c-51e3c9e34cd9"],
Cell[41228, 1201, 242, 4, 49, "Output",ExpressionUUID->"ca6a0933-5b83-4ffc-8833-8c332c6113f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41507, 1210, 287, 6, 43, "Input",ExpressionUUID->"b119356c-6991-448a-873f-ef9b22aa3e0b"],
Cell[41797, 1218, 272, 6, 49, "Output",ExpressionUUID->"445d9496-8b75-4688-a817-18db76bed123"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42130, 1231, 260, 4, 93, "Subsection",ExpressionUUID->"07f8423f-dda2-4c47-bc95-fad96c09b4c9"],
Cell[42393, 1237, 3836, 80, 320, "Text",ExpressionUUID->"72b6bf95-7831-4196-8c20-ba00d427acdb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[46254, 1321, 907, 22, 102, "Input",ExpressionUUID->"ffa7c708-31ce-489d-90d6-303839862b9c"],
Cell[47164, 1345, 815, 24, 91, "Output",ExpressionUUID->"1768405e-2e67-4d5c-afc4-dd25620a98b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48016, 1374, 473, 15, 73, "Input",ExpressionUUID->"fc55a281-aacb-428e-8828-a88a83c66dce"],
Cell[48492, 1391, 664, 21, 91, "Output",ExpressionUUID->"8ad1e0b5-63b4-4f1c-bd3b-cb9f2b265c62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49193, 1417, 383, 8, 73, "Input",ExpressionUUID->"63c37203-ee50-4005-b6f6-8b68dc0d5b64"],
Cell[49579, 1427, 876, 26, 91, "Output",ExpressionUUID->"08b32ff0-b2a8-44e6-8ee7-fae58fb57a9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50492, 1458, 493, 10, 73, "Input",ExpressionUUID->"40dd4942-0f05-49a5-b2c6-e39d35f90f68"],
Cell[50988, 1470, 853, 25, 98, "Output",ExpressionUUID->"66de33b4-e134-4b2a-8f00-cac8b2bd6689"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51878, 1500, 468, 10, 73, "Input",ExpressionUUID->"bccaea70-85b1-4746-84c9-35ecd29dd97f"],
Cell[52349, 1512, 282, 5, 53, "Output",ExpressionUUID->"283c8e41-185e-481f-ac0d-e46ced433246"],
Cell[52634, 1519, 271, 4, 49, "Output",ExpressionUUID->"f8fc03b1-e588-47c9-8cbf-315f58c3aeff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52942, 1528, 700, 16, 131, "Input",ExpressionUUID->"0beea76f-dd34-4589-b220-52f01158a930"],
Cell[53645, 1546, 201, 3, 49, "Output",ExpressionUUID->"239c67a5-81cd-4549-9b46-af9b7db292ea"],
Cell[53849, 1551, 199, 3, 49, "Output",ExpressionUUID->"914bd3ef-d7c3-43fb-b3b9-acb1023e5ece"]
}, Open  ]],
Cell[54063, 1557, 433, 7, 153, "Text",ExpressionUUID->"f6fb5558-4fce-4121-b788-7a23de2a929c"],
Cell[54499, 1566, 1237, 33, 144, "Input",ExpressionUUID->"86a906aa-f519-4a25-899c-2fcfd22e2be2"],
Cell[55739, 1601, 969, 29, 131, "Input",ExpressionUUID->"ad188dc5-03a8-4474-9fb4-3ac2db145937"],
Cell[56711, 1632, 924, 26, 131, "Input",ExpressionUUID->"70de1c2c-bc57-4299-8576-80c55d68066f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57672, 1663, 304, 5, 93, "Subsection",ExpressionUUID->"d8f08601-8ca6-46a7-8809-f3bbe9aa609f"],
Cell[57979, 1670, 350, 8, 119, "Text",ExpressionUUID->"dfdefbd9-d014-4a6a-9e99-f7595199da11"],
Cell[CellGroupData[{
Cell[58354, 1682, 845, 21, 102, "Input",ExpressionUUID->"30f3a1a2-1909-48ab-8a1e-14dc0b2418ff"],
Cell[59202, 1705, 54670, 956, 363, "Output",ExpressionUUID->"b84564ca-5c38-4ee0-8d1f-a3538ef35f50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113909, 2666, 1044, 27, 131, "Input",ExpressionUUID->"8a1fca71-3722-441c-9e11-1f9b64c834af"],
Cell[114956, 2695, 41402, 742, 363, "Output",ExpressionUUID->"87db8a66-2f33-4ff5-9b0b-fd7f0b3945ff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[156407, 3443, 338, 5, 93, "Subsection",ExpressionUUID->"2a1adf4c-6186-4f2e-a3d4-1dd7bcbe74f3"],
Cell[156748, 3450, 1845, 39, 368, "Text",ExpressionUUID->"206a9204-0149-4de3-8ecd-a56063973e5e"],
Cell[CellGroupData[{
Cell[158618, 3493, 966, 29, 102, "Input",ExpressionUUID->"d0677ef4-1e35-4830-a9c0-fdcef44c969a"],
Cell[159587, 3524, 436, 11, 69, "Output",ExpressionUUID->"042d0a7b-51a1-4bde-bcc2-080866f5dfb6"],
Cell[160026, 3537, 436, 11, 69, "Output",ExpressionUUID->"fe72f7a6-5acb-4af3-ba38-9a6a90eaa00c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160499, 3553, 532, 14, 43, "Input",ExpressionUUID->"8111ebf4-1d04-4bec-a1a0-aa3a1447474d"],
Cell[161034, 3569, 81438, 1358, 589, "Output",ExpressionUUID->"dd11bce0-8d40-47f3-8d4f-595a75ee25bf"]
}, Open  ]],
Cell[242487, 4930, 492, 11, 199, "Text",ExpressionUUID->"f41d861a-abbc-4648-8d1f-bbaa2b98cad8"],
Cell[242982, 4943, 3162, 75, 131, "Input",ExpressionUUID->"1663252d-9f02-4203-ad24-8add569be821"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246181, 5023, 360, 6, 93, "Subsection",ExpressionUUID->"b0c0f806-a611-475b-816f-081949a23dcf"],
Cell[246544, 5031, 1336, 21, 220, "Text",ExpressionUUID->"0ff550d3-dc21-4c0b-862e-cd19d197d3c3"],
Cell[CellGroupData[{
Cell[247905, 5056, 3300, 85, 131, "Input",ExpressionUUID->"a0f886a9-7425-405a-83d6-9dba4ff04c1e"],
Cell[251208, 5143, 3104, 58, 297, "Output",ExpressionUUID->"df9af749-7e6d-4180-aeb9-31c48d04a5d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254349, 5206, 2682, 78, 131, "Input",ExpressionUUID->"2d4a72fa-52ca-435e-8699-7347f5d64f74"],
Cell[257034, 5286, 2759, 53, 297, "Output",ExpressionUUID->"388293c9-6fb0-4430-8065-14b1ed474fbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259830, 5344, 2939, 83, 160, "Input",ExpressionUUID->"0bd91b37-6f79-465f-b09a-88e211fc8237"],
Cell[262772, 5429, 2783, 53, 297, "Output",ExpressionUUID->"4e10a18b-b34d-4207-995f-2d5aa2e8565b"]
}, Open  ]],
Cell[265570, 5485, 989, 23, 224, "Text",ExpressionUUID->"6e0d9485-0b23-46d3-9024-3fccf558212a"]
}, Open  ]]
}
]
*)

