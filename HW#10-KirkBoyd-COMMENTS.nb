(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    276790,       5760]
NotebookOptionsPosition[    263499,       5524]
NotebookOutlinePosition[    263938,       5543]
CellTagsIndexPosition[    263895,       5540]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["Grade: 45 / 9 = 5",
 FontColor->RGBColor[1, 0, 1]]], "Text",
 CellChangeTimes->{{3.7655526496782894`*^9, 
  3.765552657748451*^9}},ExpressionUUID->"f2185170-0553-4c95-8d57-\
0c2c3348ccc4"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["5 ", "Subsection",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["Problem 1: Matrices three ways", "Subsection"]
}], "Subsection",
 CellChangeTimes->{
  3.7639157066984997`*^9, 3.763916102953438*^9, {3.76555213170685*^9, 
   3.7655521318668537`*^9}},ExpressionUUID->"c1a3599c-7d58-4e61-8e95-\
78df617c86e0"],

Cell["\<\
a) Create three 3x2 matrices (3 rows, 2 columns) and name them M1, M2, and M3 \
in the following ways: 
 (1) Create M1 by typing in entries directly as a list of lists.  
 
 (2) Use the Palette to create M2.  
 (3) Use Insert...Table/Matrix to create M3.  Use whatever values you like \
but make each matrix different.  Make use of these keyboard shortcuts:

b) Enter each matrix name to evaluate it and verify that it is a list of \
lists, regardless of the entry method

c) On another line use MatrixForm to view each matrix in standard format\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7609671601624346`*^9, 3.76096735133191*^9}, {
   3.7609676142249317`*^9, 3.760967636957569*^9}, {3.760967688270956*^9, 
   3.7609679003270206`*^9}, {3.7609679419503546`*^9, 
   3.7609679643084416`*^9}, {3.760967995682444*^9, 3.7609680047617607`*^9}, {
   3.76096804295205*^9, 3.760968060268272*^9}, {3.7609680990357695`*^9, 
   3.760968176008156*^9}, {3.7609682299712477`*^9, 3.7609683709074554`*^9}, {
   3.760968474539584*^9, 3.7609685158177133`*^9}, 3.760972576435296*^9, 
   3.7609741369114943`*^9, {3.763102457069457*^9, 3.7631024639487686`*^9}, {
   3.763102541895861*^9, 3.763102553353861*^9}, {3.763915010820567*^9, 
   3.7639150109805703`*^9}, {3.7639150725638027`*^9, 
   3.7639150907581673`*^9}, {3.7639157101185684`*^9, 3.7639157235608377`*^9}, 
   3.7640705064631257`*^9, {3.7647879399797764`*^9, 
   3.7647879410349207`*^9}},ExpressionUUID->"f7e9895d-05c6-454b-8a0a-\
6ee282dbac95"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "a", "*)"}], "\[IndentingNewLine]", "\t", 
  RowBox[{"(*", "a1", "*)"}], "\[IndentingNewLine]", "\t", 
  RowBox[{"M1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w", ",", "u"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "z"}], "}"}]}], "}"}], " "}]}]], "Input",
 CellChangeTimes->{{3.764070515594045*^9, 3.764070536165859*^9}, {
  3.764070567054833*^9, 3.7640706232137423`*^9}, {3.76407083143233*^9, 
  3.764070846214116*^9}, {3.764788767193324*^9, 
  3.764788774191571*^9}},ExpressionUUID->"4fcd5e8f-994c-4e5a-a6c6-\
0ebecd83fbf0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"w", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "z"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7647888427584343`*^9, 
  3.764788893255308*^9},ExpressionUUID->"e3632275-acbd-4b7b-a3f1-\
0140cf8f55a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{"(*", "a2", "*)"}], "\[IndentingNewLine]", "\t", 
  RowBox[{"M2", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {"6", "7"},
      {"7", "8"},
      {"8", "9"}
     }], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.764070521821759*^9, 3.764070522414901*^9}, {
  3.764070665257474*^9, 3.7640707231315165`*^9}, {3.7640708648085194`*^9, 
  3.7640709059506483`*^9}, {3.7647887858479085`*^9, 
  3.764788795710525*^9}},ExpressionUUID->"a53103e8-de58-4de8-87ff-\
5c731207bc99"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.764788844789033*^9, 
  3.764788912644488*^9},ExpressionUUID->"03c5a782-84ac-42f2-893e-\
fa1307682ce7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{"(*", "a3", "*)"}], "\[IndentingNewLine]", "\t", 
  RowBox[{"M3", " ", "=", " ", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", "1"}], 
       RowBox[{"-", "2"}]},
      {"2", "7"},
      {
       RowBox[{"-", "4"}], 
       RowBox[{"-", "5"}]}
     }], "\[NoBreak]", ")"}]}]}]], "Input",
 CellChangeTimes->{{3.764070730600539*^9, 3.764070731772456*^9}, {
  3.7640707872901*^9, 3.76407081729119*^9}, {3.7640709112633343`*^9, 
  3.7640709385455976`*^9}, {3.7647888074631557`*^9, 
  3.7647888144963036`*^9}},ExpressionUUID->"eafbc1ab-5e5f-405d-8469-\
2fc37b29e3b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "5"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.764788846711864*^9, 
  3.7647889173498993`*^9},ExpressionUUID->"9790302a-6933-4b1b-bfa1-\
a116c41ef0b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "b", "*)"}], "\[IndentingNewLine]", "M1"}]], "Input",
 CellChangeTimes->{{3.7640709536555233`*^9, 3.7640709667497244`*^9}, {
  3.764788717259698*^9, 
  3.7647887282738037`*^9}},ExpressionUUID->"3472a211-3dc3-47d5-8bc6-\
011d8c332b1b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"w", ",", "u"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "z"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7647887542344217`*^9, 3.7647888499711094`*^9, 
  3.764788921613523*^9},ExpressionUUID->"d0a97b96-7f55-4061-a7c7-\
b6e31e205a71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["M2"], "Input",
 CellChangeTimes->{{3.7647887218130355`*^9, 
  3.764788726107585*^9}},ExpressionUUID->"a8b95155-8263-4ded-92b0-\
70ee20f23e89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7647887566250334`*^9, 3.764788852688839*^9, 
  3.7647889288330956`*^9},ExpressionUUID->"d59215d9-1d07-4b45-9c11-\
d3b3249a1ad1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["M3"], "Input",ExpressionUUID->"dd5af7fc-b98a-4002-817c-2050da30c39b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "5"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.764788758823722*^9, 3.7647888545199814`*^9, 
  3.7647889320764184`*^9},ExpressionUUID->"6351ece8-7ab0-4230-b6c5-\
6170d752007b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "c", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"M1", " ", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.7640709894224477`*^9, 3.7640710171265793`*^9}, {
  3.7647886832688956`*^9, 
  3.7647887009533253`*^9}},ExpressionUUID->"9f9b78f4-74cf-4851-91cd-\
1f0580dbb08d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"w", "u"},
     {"v", "x"},
     {"y", "z"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764788856311146*^9, 
  3.7647889386029253`*^9},ExpressionUUID->"6854ea0b-55a2-42c5-81f9-\
19782569efd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M2", " ", "//", "MatrixForm"}]], "Input",ExpressionUUID->"a0b0a250-efe1-4955-9a2b-b6dd3a9d43cb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"6", "7"},
     {"7", "8"},
     {"8", "9"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764788858932164*^9, 
  3.7647889404749174`*^9},ExpressionUUID->"51d67294-0d86-41af-9a80-\
150aacdfe3cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M3", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.764788835377181*^9, 
  3.7647888397953587`*^9}},ExpressionUUID->"8c98bf07-fb30-42b7-8831-\
ee01363a5065"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "2"}]},
     {"2", "7"},
     {
      RowBox[{"-", "4"}], 
      RowBox[{"-", "5"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7647888608520036`*^9, 
  3.7647889423000345`*^9},ExpressionUUID->"e3d3cc5e-85df-48b4-955d-\
34d2dde26df4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["5 ", "Subsection",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["Problem 2: Matrix elements", "Subsubsection"]
}], "Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7631083904244323`*^9, 3.7631083966309237`*^9}, {
   3.763922819230687*^9, 3.7639228221507454`*^9}, 
   3.7655521964151535`*^9},ExpressionUUID->"b7a4cc63-12ba-4ef8-b26d-\
886bd84044f3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"M", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Eigensystem", "[", "M", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eigensystem", "[", "M", "]"}], "//", "MatrixForm", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "easier", " ", "to", " ", "see", " ", "what", " ", "this", " ", "matrix", 
    " ", "looks", " ", "like", " ", "if", " ", "you", " ", "put", " ", "it", 
    " ", "in", " ", "standard", " ", "form"}], " ", "*)"}]}]}], "Input",Expres\
sionUUID->"db1109a1-ec85-4cf5-9eb0-cb4bb3c05471"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "3"},
     {"2", "2"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7647889973652425`*^9},ExpressionUUID->"679cb1bc-a4f1-41b5-8143-\
a432f4be2533"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", "2"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7647889973702292`*^9},ExpressionUUID->"258a4a7a-c99a-4606-a092-\
1aa9d3ce2529"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "2"}], "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.764788997374219*^9},ExpressionUUID->"49deb444-14e4-4857-90fb-\
67725e47dce1"]
}, Open  ]],

Cell["\<\
The two elements (4 and -1) in the first row are the two eigenvalues of M.  \
The two vectors {1,1} and {-3,2} in the second row are the eigenvectors \
associated with each of the eigenvalues.

a) Use the Part function (double brackets [[ ]]) to pull out the second \
eigenvalue (i.e. -1) from the matrix returned by Eigensystem[M]
b) Use double brackets to pull out the second eigenvector (i.e. {-3,2}) from \
the matrix returned by Eigensystem[M] 
c) Use double brackets to pull out the first element (i.e. -3) of the second \
eigenvector.  Hint: There are several ways to do this, including an extension \
of the \[OpenCurlyDoubleQuote]alternative\[CloseCurlyDoubleQuote] method \
described above.  See if you can do this with just ONE set of double-brackets\
\>", "Text",
 CellChangeTimes->{{3.7639231740397887`*^9, 3.7639233005483212`*^9}, {
  3.7639233350280113`*^9, 3.763923524241799*^9}, {3.763923563969594*^9, 
  3.7639235799929147`*^9}, {3.76398467688533*^9, 3.7639846838274193`*^9}, {
  3.7639856898963184`*^9, 3.7639857199423037`*^9}, {3.7647881531181164`*^9, 
  3.764788154587204*^9}},ExpressionUUID->"01498197-436c-4e24-8541-\
b759f5e5af05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"2", "a"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7640714952282257`*^9, 
  3.7640715630431643`*^9}},ExpressionUUID->"aec2a18b-d268-4469-a66d-\
c34c00810962"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.7640715908723016`*^9, 3.764788867965002*^9, 
  3.764788948299982*^9, 
  3.764789001337616*^9},ExpressionUUID->"852ce8fb-b6bf-4a0b-be79-\
aa0775c4a67d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"2", "b"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.764071593653654*^9, 
  3.764071614935677*^9}},ExpressionUUID->"ab7641ee-cef0-4717-99ed-\
d20905b61135"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "3"}], ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.764071619170208*^9, 
  3.7647890199179096`*^9},ExpressionUUID->"b60f5165-7068-458f-bbaf-\
8ed170b69c10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"2", "c"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7640716221859426`*^9, 3.764071634280154*^9}, {
  3.764071728861717*^9, 3.7640717824105167`*^9}, {3.7640718161617656`*^9, 
  3.764071826490269*^9}, {3.7640718978522115`*^9, 
  3.764071957198118*^9}},ExpressionUUID->"87ddba56-b72d-4602-917d-\
6fedfbac6028"],

Cell[BoxData[
 RowBox[{"-", "3"}]], "Output",
 CellChangeTimes->{
  3.764071827255895*^9, {3.764071902274246*^9, 3.764071957666888*^9}, 
   3.764789022741957*^9},ExpressionUUID->"db4c9a92-81ae-4de0-9c49-\
d7ef21bd891b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "using", " ", "only", " ", "one", " ", "set", " ", "of", " ", "double", 
    " ", "brackets"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7640719818708897`*^9, 3.7640720134033127`*^9}, {
  3.76407205409229*^9, 
  3.764072076296256*^9}},ExpressionUUID->"5342e358-89ab-46d8-acce-\
4463a2ff649f"],

Cell[BoxData[
 RowBox[{"-", "3"}]], "Output",
 CellChangeTimes->{3.76407205865493*^9, 
  3.764789026073017*^9},ExpressionUUID->"b5ff4262-c329-428f-af91-\
846f4253d0b6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["5 ", "Subsection",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["Problem 3: Determinants", "Subsubsection"]
}], "Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7631083904244323`*^9, 3.7631083966309237`*^9}, 
   3.763985505702757*^9, 
   3.765552215658539*^9},ExpressionUUID->"846274e2-26e5-4974-8eea-\
408192ab34a1"],

Cell[TextData[{
 "(3.3.2 from HW#7) Find the determinant of:\n\t",
 Cell[BoxData[
  FormBox[
   TagBox[
    RowBox[{"(", GridBox[{
       {"5", "17", "3"},
       {"2", "4", 
        RowBox[{"\[Minus]", "3"}]},
       {"11", "0", "2"}
      }], ")"}],
    "MathMLPresentationTag",
    AutoDelete->True], TraditionalForm]],ExpressionUUID->
  "0b33fe76-5d3c-451e-8ebb-a1c4a52e26a4"]
}], "Text",
 CellChangeTimes->{{3.7614937352535877`*^9, 3.761493986053626*^9}, {
   3.7614941064590654`*^9, 3.761494113729211*^9}, {3.7614941463008633`*^9, 
   3.7614941832906055`*^9}, {3.7614942173332863`*^9, 3.7614942187373157`*^9}, 
   3.763108456564433*^9, {3.764072544151039*^9, 
   3.7640725580267253`*^9}},ExpressionUUID->"68111252-87c1-48b8-ab98-\
a36a71e215da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "3", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"M3A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "17", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "0", ",", "2"}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7640725659958687`*^9, 3.764072600450672*^9}, {
  3.7647877350768566`*^9, 
  3.764787739592787*^9}},ExpressionUUID->"3a300de0-ac95-4c13-aa4a-\
2dab8cb3f0bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "17", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "0", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7640726037633333`*^9, 
  3.7647890321527505`*^9},ExpressionUUID->"ff33902e-d90c-4b96-a39b-\
dbc9881e2291"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"M3A", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7647890365031137`*^9, 
  3.7647890407617197`*^9}},ExpressionUUID->"04c7d49c-3bfe-428a-bfa2-\
cdaaf2fa7a54"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"5", "17", "3"},
     {"2", "4", 
      RowBox[{"-", "3"}]},
     {"11", "0", "2"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.764789042523007*^9},ExpressionUUID->"8843e3b6-d5c5-4305-b83f-\
7707a802023c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "M3A", "]"}]], "Input",
 CellChangeTimes->{{3.764072605950941*^9, 
  3.764072618217198*^9}},ExpressionUUID->"a1c1e562-b838-4f63-a866-\
08f434c1f88b"],

Cell[BoxData[
 RowBox[{"-", "721"}]], "Output",
 CellChangeTimes->{3.7640726190453396`*^9, 
  3.7647890460166597`*^9},ExpressionUUID->"7586b99d-a222-4db2-8593-\
e64f25b09040"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["5 ", "Subsection",
  FontColor->RGBColor[1, 0, 1]],
 "Problem 4: matrix inversion"
}], "Subsubsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448994860368824`*^9}, {
   3.5449001887908826`*^9, 3.5449001984948826`*^9}, {3.544900323174883*^9, 
   3.5449003297118826`*^9}, {3.545420930038125*^9, 3.5454209301821394`*^9}, {
   3.5568366512698727`*^9, 3.5568366514998727`*^9}, {3.562015777698806*^9, 
   3.5620157777548056`*^9}, 3.6081504745853157`*^9, 3.7609725764452963`*^9, 
   3.7631085599161935`*^9, {3.763108843089053*^9, 3.763108852556796*^9}, 
   3.763916655940507*^9, 3.7639855160456896`*^9, 
   3.7655522220406666`*^9},ExpressionUUID->"5aba9b93-e72b-42d9-9eb0-\
d2dadade72b5"],

Cell[TextData[{
 "(3.2.12 from HW 7)  a) Set up the following set of simultaneous equations \
in the form ",
 StyleBox["M.r",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " = ",
 StyleBox["k",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", and solve for ",
 StyleBox["r",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " (i.e. the vector whose components are the values of x, y, and z) using \
matrix inversion as in the example above. b) check your answer by multiplying \
the matrix ",
 StyleBox["M",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " by the vector ",
 StyleBox["r",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " and formatting using MatrixForm to see that it gives you ",
 StyleBox["k",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ".\n\t2x + 5y + 1 = 2\n\tx + y + 2z = 1\n\tx + 5z = 3"
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448994860368824`*^9}, {
   3.5449001887908826`*^9, 3.5449001984948826`*^9}, {3.544900323174883*^9, 
   3.5449004720538826`*^9}, {3.5449007029598827`*^9, 
   3.5449007104138823`*^9}, {3.5449632964424424`*^9, 3.544963411985687*^9}, {
   3.5568899222187333`*^9, 3.5568899804275537`*^9}, {3.562015743053806*^9, 
   3.562015744118806*^9}, {3.600188768069312*^9, 3.600188769677473*^9}, {
   3.608155661030316*^9, 3.6081557001273155`*^9}, {3.6346668115871935`*^9, 
   3.6346668916301937`*^9}, {3.6346671395491934`*^9, 3.634667236647194*^9}, {
   3.634667362741194*^9, 3.6346674588151937`*^9}, {3.634672848189415*^9, 
   3.6346728668591*^9}, 3.7609725764452963`*^9, 3.7631085599161935`*^9, {
   3.763108682339187*^9, 3.7631088268363533`*^9}, {3.7631090589886703`*^9, 
   3.7631090726688175`*^9}, {3.7631091098281593`*^9, 3.76310915687514*^9}, {
   3.7631092149993353`*^9, 3.7631092917548914`*^9}, {3.7631094446877127`*^9, 
   3.7631095182251115`*^9}, 3.763923653518386*^9, 
   3.763985540631605*^9},ExpressionUUID->"7633ad2f-e4cf-42f0-8c58-\
b306c668835e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"4", "a"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M4", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "5"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"M4", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.7640727149404774`*^9, 3.7640728576184974`*^9}, {
  3.764788464670565*^9, 
  3.7647884717466288`*^9}},ExpressionUUID->"56340be4-2aa9-45fd-aeb5-\
a86f145c0518"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "5", "1"},
     {"1", "1", "2"},
     {"1", "0", "5"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764788481568376*^9, 
  3.7647890497812834`*^9},ExpressionUUID->"b40d9d12-23a1-451b-b36b-\
9ca49d890530"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k4", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "3", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"k4", "//", "MatrixForm"}]}], "Input",ExpressionUUID->"d6104ac2-4f44-\
4feb-bab1-9efa62a82c0f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2"},
     {"1"},
     {"3"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764788483710658*^9, 
  3.7647890780093355`*^9},ExpressionUUID->"dbbcd58e-da3d-4ec3-a62f-\
eacd6e7b37c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r4", " ", "=", " ", 
   RowBox[{
    RowBox[{"Inverse", "[", "M4", "]"}], ".", "k4"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"r4", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7647884758476615`*^9, 
  3.764788487482534*^9}},ExpressionUUID->"b639a3b6-daee-4419-8864-\
7a0946b14bb5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "2"}]},
     {"1"},
     {"1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764788489816283*^9, 
  3.764789080548543*^9},ExpressionUUID->"f9eacaed-932e-4cf7-9709-\
f3d42dd3fe41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "b", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M4", ".", "r4"}], "//", "MatrixForm"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.764072870665934*^9, 3.7640728732285223`*^9}, {
  3.764434128028977*^9, 
  3.764434214647681*^9}},ExpressionUUID->"2d7a8cd8-68ce-4915-b753-\
67e33a27961d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2"},
     {"1"},
     {"3"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.764788492964859*^9, 
  3.764789083053519*^9},ExpressionUUID->"4aeb186e-30ba-40ce-be5d-\
6c26d49a65b3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["5 ", "Subsection",
  FontColor->RGBColor[1, 0, 1]],
 "Problem 5: Eigenvectors & eigenvalues"
}], "Subsubsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448994860368824`*^9}, {
   3.5449001887908826`*^9, 3.5449001984948826`*^9}, {3.544900323174883*^9, 
   3.5449003297118826`*^9}, {3.545420930038125*^9, 3.5454209301821394`*^9}, {
   3.5568366512698727`*^9, 3.5568366514998727`*^9}, {3.562015777698806*^9, 
   3.5620157777548056`*^9}, 3.6081504745853157`*^9, 3.7609725764452963`*^9, 
   3.7631085599161935`*^9, {3.763108843089053*^9, 3.763108852556796*^9}, 
   3.763916655940507*^9, {3.763917562830291*^9, 3.7639175705524454`*^9}, {
   3.7639184087992315`*^9, 3.763918417291402*^9}, 3.763985548510706*^9, 
   3.7655522341739097`*^9},ExpressionUUID->"fc9b47d5-6b0f-4682-9557-\
dd05176bd6ce"],

Cell[TextData[{
 "(3.11.15 from HW 7)  a) Define the following matrix, then display it in \
standard form:  ",
 Cell[BoxData[
  TagBox[
   RowBox[{"M", "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "3", "0"},
       {"3", "2", "0"},
       {"0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]],
  CellChangeTimes->{{3.7639168380321393`*^9, 3.7639168696281395`*^9}, {
    3.763917495164936*^9, 3.7639175211624565`*^9}, 3.763917759492235*^9},
  ExpressionUUID->"35d6656b-1612-4031-b04a-28388dfe110f"],
 "\nb) Find the eigenvalues and eigenvectors of M using the commands \
Eigenvalues and Eigenvectors.  Display the output of each, then see what it \
looks like in standard form using MatrixForm as well.\nc) Use double brackets \
after the Eigenvectors command to pick out the second of the three \
eigenvectors.  Check to see that you did this correctly - the second \
eigenvector is the second ",
 StyleBox["row",
  FontWeight->"Bold"],
 " of the matrix output by the Eigenvectors command\nd) Find the eigenvalues \
and eigenvectors of M using the command Eigensystem.  On another line, \
display the output in standard form.\ne) Use double brackets to pick out the \
second eigenvalue from the Eigensystem command, and use double brackets to \
pick out its associated eigenvector."
}], "Text",
 CellChangeTimes->{{3.4324110514224634`*^9, 3.432411051922473*^9}, {
   3.432411399257266*^9, 3.4324117777957845`*^9}, {3.4324807622472754`*^9, 
   3.432480783175516*^9}, {3.5448994417768826`*^9, 3.5448994860368824`*^9}, {
   3.5449001887908826`*^9, 3.5449001984948826`*^9}, {3.544900323174883*^9, 
   3.5449004720538826`*^9}, {3.5449007029598827`*^9, 
   3.5449007104138823`*^9}, {3.5449632964424424`*^9, 3.544963411985687*^9}, {
   3.5568899222187333`*^9, 3.5568899804275537`*^9}, {3.562015743053806*^9, 
   3.562015744118806*^9}, {3.600188768069312*^9, 3.600188769677473*^9}, {
   3.608155661030316*^9, 3.6081557001273155`*^9}, {3.6346668115871935`*^9, 
   3.6346668916301937`*^9}, {3.6346671395491934`*^9, 3.634667236647194*^9}, {
   3.634667362741194*^9, 3.6346674588151937`*^9}, {3.634672848189415*^9, 
   3.6346728668591*^9}, 3.7609725764452963`*^9, 3.7631085599161935`*^9, {
   3.763108682339187*^9, 3.7631088268363533`*^9}, {3.7631090589886703`*^9, 
   3.7631090726688175`*^9}, {3.7631091098281593`*^9, 3.76310915687514*^9}, {
   3.7631092149993353`*^9, 3.7631092917548914`*^9}, {3.7631094446877127`*^9, 
   3.7631095182251115`*^9}, {3.7639176333867035`*^9, 3.763917685647749*^9}, {
   3.7639177970699873`*^9, 3.7639178490610275`*^9}, {3.763917897791003*^9, 
   3.763917956185172*^9}, {3.7639180214714785`*^9, 3.763918128698625*^9}, {
   3.7639182370337934`*^9, 3.763918252978113*^9}, {3.7639182942169385`*^9, 
   3.763918401798092*^9}, {3.7639184454569654`*^9, 3.7639184635413275`*^9}, {
   3.763980552640482*^9, 3.7639806000972905`*^9}, {3.763980657709709*^9, 
   3.763980681952265*^9}, 3.763985554391981*^9, {3.7639858217180195`*^9, 
   3.76398583769242*^9}},ExpressionUUID->"3489b19d-c071-47a2-9df4-\
0ce8197c4316"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"5", "a"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"M5", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"M5", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.764434280607787*^9, 3.7644343431945076`*^9}, {
  3.764434430692443*^9, 
  3.76443443328635*^9}},ExpressionUUID->"0563cc32-cd7d-4b0a-a3aa-\
9bfdd22baea8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7644344393027163`*^9, 3.764670246354483*^9, 
  3.7647890925336585`*^9},ExpressionUUID->"b3c855ed-1630-4f1f-bfb2-\
3f72a3145b63"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "0"},
     {"3", "2", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7644344393027163`*^9, 3.764670246354483*^9, 
  3.7647890925396433`*^9},ExpressionUUID->"3c5cbff5-8ec4-4a39-999c-\
e48ab10e7ac1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"5", "b"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"M5b1", "=", 
    RowBox[{"Eigenvalues", "[", "M5", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"M5b2", " ", "=", " ", 
    RowBox[{"Eigenvectors", "[", "M5", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7644343506783695`*^9, 
  3.7644344676972055`*^9}},ExpressionUUID->"977a7a69-f672-4473-b1bd-\
c38deb35a129"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.76443439921933*^9, 3.764434468228391*^9, 
  3.764670248315237*^9, 
  3.7647890983231688`*^9},ExpressionUUID->"e32eb802-b17a-4f04-a6f0-\
f600120ade41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.76443439921933*^9, 3.764434468228391*^9, 
  3.764670248315237*^9, 
  3.7647890983301506`*^9},ExpressionUUID->"a3f065fd-fa42-4c55-8169-\
fcc464e51d83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"5", "b", " ", "continued"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"M5b1", " ", "//", "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{"M5b2", " ", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.76443447471362*^9, 
  3.7644345022018285`*^9}},ExpressionUUID->"619ccb36-9e29-4ab0-8703-\
86bdf9999c74"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"5"},
      {
       RowBox[{"-", "1"}]},
      {"1"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7644345029829526`*^9, 3.7646702500067186`*^9, 
  3.764789103364681*^9},ExpressionUUID->"d79b4022-b44c-43c4-8989-\
31feb10ae498"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "0"},
     {
      RowBox[{"-", "1"}], "1", "0"},
     {"0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7644345029829526`*^9, 3.7646702500067186`*^9, 
  3.7647891033686705`*^9},ExpressionUUID->"7a21f763-3f96-447a-85bb-\
f66197bee008"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"5", "c"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Eigenvectors", "[", "M5", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.764434533424675*^9, 3.7644345376908555`*^9}, {
  3.7644346457830534`*^9, 
  3.764434685365403*^9}},ExpressionUUID->"9cfa4143-53e3-4497-a031-\
2884ae0ae780"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7647891060435143`*^9},ExpressionUUID->"17fd49a1-8370-4a5a-ac93-\
196e27b032f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"5", "d"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Eigensystem", "[", "M5", "]"}]}]], "Input",
 CellChangeTimes->{{3.764434725963942*^9, 3.7644347299485283`*^9}, {
  3.7644347619208565`*^9, 
  3.764434770359474*^9}},ExpressionUUID->"3d63fde8-5c9e-4862-89c5-\
ba20d4f69a6e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7644347714531746`*^9, 3.764670255131012*^9, 
  3.7647891186926737`*^9},ExpressionUUID->"e04f4950-1405-4af0-baa1-\
a885a1d531c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigensystem", "[", "M5", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7644347888457503`*^9, 
  3.7644347995815544`*^9}},ExpressionUUID->"33673a28-79f0-466b-bd99-\
e3530598d610"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"5", 
      RowBox[{"-", "1"}], "1"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7644348003626633`*^9, 3.764670259029585*^9, 
  3.7647891226361227`*^9},ExpressionUUID->"f3607e02-ce22-456c-ae5a-\
e004b5f69140"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"5", "e"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "M5", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7644348507747884`*^9, 3.76443488271586*^9}, {
  3.7644349421756296`*^9, 
  3.7644349627244635`*^9}},ExpressionUUID->"1dd2951e-7bcc-4050-8b7c-\
51e3c9e34cd9"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.7644349495512304`*^9, 3.764434963412031*^9}, 
   3.764670261587741*^9, 
   3.7647891254326425`*^9},ExpressionUUID->"ca6a0933-5b83-4ffc-8833-\
8c332c6113f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigensystem", "[", "M5", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7644349510201025`*^9, 
  3.764434984289234*^9}},ExpressionUUID->"b119356c-6991-448a-873f-\
ef9b22aa3e0b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7644349858362703`*^9, 3.764670262976015*^9, 
  3.764789127410383*^9},ExpressionUUID->"445d9496-8b75-4688-a817-\
18db76bed123"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["5 ", "Subsection",
  FontColor->RGBColor[1, 0, 1]],
 "Problem 6. Coupled harmonic oscillators, normal modes"
}], "Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.763985262742242*^9, 3.7639852701991377`*^9}, 
   3.7639855625196857`*^9, 
   3.7655523053043365`*^9},ExpressionUUID->"07f8423f-dda2-4c47-bc95-\
fad96c09b4c9"],

Cell[TextData[{
 "For simplicity, let's set ",
 StyleBox["m",
  FontSlant->"Italic"],
 " = 1 and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "s"], "=", 
    RowBox[{
     SubscriptBox["k", "b"], "=", "1"}]}], TraditionalForm]],ExpressionUUID->
  "7523a573-5fbb-42ae-b853-ee6c3abaeaa6"],
 " for some choice of units. \na) Create the matrix ",
 StyleBox["M",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " of spring constants and the vector ",
 StyleBox["r",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " containing the initial positions ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "0"], TraditionalForm]],ExpressionUUID->
  "ba72cb8e-478d-44fc-811e-3cf6c4763385"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]],ExpressionUUID->
  "b320d25b-97b8-4b0d-a5c4-faf5abbec83e"],
 ".\nb) Use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to solve the eigenvalue equation and determine what two frequencies are \
allowed, along with what the relationship is between ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "0"], TraditionalForm]],ExpressionUUID->
  "652ebf4d-c656-4d22-9795-88974aed4050"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "0"], TraditionalForm]],ExpressionUUID->
  "b9d465aa-5f8d-4c7d-acfa-e4b3aca6516c"],
 " for each allowed frequency. \nc) Compare the two frequencies of the two \
modes to the frequency the masses would have if they were not coupled \
together. Qualitatively explain why the allowed frequencies are higher, \
lower, or the same as the uncoupled case."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.432564721977771*^9, 3.432564737691535*^9}, {
   3.432564792103362*^9, 3.432565255468696*^9}, {3.432571484258397*^9, 
   3.4325714845708947`*^9}, {3.432572026911174*^9, 3.43257202753617*^9}, {
   3.4325720627703195`*^9, 3.4325722249880314`*^9}, {3.4325722829720354`*^9, 
   3.432572313253091*^9}, {3.4325724511272087`*^9, 3.432572662985228*^9}, {
   3.432573774078693*^9, 3.4325737746099358`*^9}, {3.4325738285154963`*^9, 
   3.4325738355779057`*^9}, {3.4325739204361944`*^9, 3.432574004356995*^9}, {
   3.4325743731049156`*^9, 3.4325744504047585`*^9}, {3.4325850464754434`*^9, 
   3.4325850971639166`*^9}, {3.4326681888268003`*^9, 3.432668192201865*^9}, {
   3.432732296729523*^9, 3.432732355449401*^9}, {3.4329100494962735`*^9, 
   3.432910061027745*^9}, {3.439673770584632*^9, 3.439673770584632*^9}, {
   3.475426102722923*^9, 3.475426121395156*^9}, 3.501282170832631*^9, {
   3.528717933816077*^9, 3.5287179531890774`*^9}, {3.528718001143077*^9, 
   3.528718002721077*^9}, {3.5448982104953327`*^9, 3.5448982167999163`*^9}, {
   3.5448982862210016`*^9, 3.544898314159413*^9}, {3.5449007436998825`*^9, 
   3.5449007505648823`*^9}, {3.5449008195278826`*^9, 
   3.5449009980248823`*^9}, {3.5449010646598825`*^9, 
   3.5449012200298824`*^9}, {3.5449012762048826`*^9, 3.544901791313883*^9}, {
   3.5449018355108824`*^9, 3.5449022199348826`*^9}, {3.5449024130718822`*^9, 
   3.544902523089883*^9}, {3.5449027436528826`*^9, 3.5449027967918825`*^9}, {
   3.5449028395978823`*^9, 3.5449028477248826`*^9}, {3.5449563228170147`*^9, 
   3.544956398861618*^9}, {3.544956562589989*^9, 3.544956576718402*^9}, {
   3.5449766214438524`*^9, 3.5449766603107386`*^9}, {3.5453979547166667`*^9, 
   3.5453980690871024`*^9}, {3.562031159242265*^9, 3.5620313748888273`*^9}, {
   3.6002006999865537`*^9, 3.6002008722487783`*^9}, {3.634675586943308*^9, 
   3.6346756233049436`*^9}, 3.7609725764452963`*^9, 3.7631085599629765`*^9, {
   3.7631101105583153`*^9, 3.7631101127735014`*^9}, {3.7631118627302523`*^9, 
   3.763111874043397*^9}, {3.7639203077435565`*^9, 3.7639203485753736`*^9}, {
   3.7647876658839006`*^9, 
   3.7647876676033335`*^9}},ExpressionUUID->"72b6bf95-7831-4196-8c20-\
ba00d427acdb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"6", "a"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"M", " ", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.7644353235917234`*^9, 3.7644353348117933`*^9}, {
  3.764435376005102*^9, 3.764435437841133*^9}, {3.7644355190236893`*^9, 
  3.764435562920052*^9}, {3.764435594549423*^9, 3.764435630085121*^9}, {
  3.7645921518429766`*^9, 3.764592153879746*^9}, {3.764592241150858*^9, 
  3.764592276523937*^9}, {3.764789142705431*^9, 
  3.764789143899237*^9}},ExpressionUUID->"ffa7c708-31ce-489d-90d6-\
303839862b9c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], "2"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7644356314759264`*^9, 3.764592279579277*^9, 3.764601259224285*^9, 
   3.764614228281336*^9, 3.7646702685122013`*^9, {3.7647891313049307`*^9, 
   3.764789152931075*^9}, 3.7647898617112646`*^9, 
   3.7655525962671885`*^9},ExpressionUUID->"f4cbb24c-5af3-4add-a810-\
e4cf3aebbc80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      SubscriptBox[
       StyleBox["u",
        FontSlant->"Italic"], "0"], "}"}], ",", 
     RowBox[{"{", 
      SubscriptBox[
       StyleBox["v",
        FontSlant->"Italic"], "0"], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"r", " ", "//", "MatrixForm"}]}], "Input",ExpressionUUID->"fc55a281-\
aacb-428e-8828-a88a83c66dce"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["u", "0"]},
     {
      SubscriptBox["v", "0"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7647891549736104`*^9, 3.7647898629140773`*^9, 
  3.76555259822923*^9},ExpressionUUID->"a911558b-035c-4cc5-802d-f94e6f3e3a27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"6", "b"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Eigensystem", "[", "M", "]"}], "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.7644360509298115`*^9, 3.7644360631813965`*^9}, {
  3.7645923349919415`*^9, 
  3.764592336741385*^9}},ExpressionUUID->"63c37203-ee50-4005-b6f6-\
8b68dc0d5b64"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", "1"},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7644360648376174`*^9, 3.7645923376709023`*^9, 
  3.764601262486582*^9, 3.764614237094466*^9, 3.7646702706066127`*^9, 
  3.764789161380469*^9, 3.7647898639353905`*^9, 
  3.765552599523259*^9},ExpressionUUID->"e9f6d973-e3b3-4460-81f3-\
4a8a570d5a84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", " ", "=", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Eigensystem", "[", "M", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalOmega]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7645926995292463`*^9, 3.764592711090688*^9}, {
  3.7645936907655506`*^9, 3.7645937110890903`*^9}, {3.764593796867087*^9, 
  3.7645938287679105`*^9}},ExpressionUUID->"40dd4942-0f05-49a5-b2c6-\
e39d35f90f68"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SqrtBox["3"], "1"},
     {
      RowBox[{"{", 
       RowBox[{"\[ImaginaryI]", ",", "1"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7645938295488544`*^9, 3.764601265263791*^9, 
  3.764614238967367*^9, 3.764670272511518*^9, 3.7647891638064847`*^9, 
  3.764789865106262*^9, 
  3.7655525997252645`*^9},ExpressionUUID->"bc357040-16b7-4cdf-88d6-\
698e104d831f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Omega]1", " ", "=", " ", 
  RowBox[{"\[CapitalOmega]", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Omega]2", " ", "=", " ", 
  RowBox[{"\[CapitalOmega]", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7645938439226933`*^9, 
  3.7645938957713714`*^9}},ExpressionUUID->"bccaea70-85b1-4746-84c9-\
35ecd29dd97f"],

Cell[BoxData[
 SqrtBox["3"]], "Output",
 CellChangeTimes->{3.7645938633364267`*^9, 3.7645938972835693`*^9, 
  3.764601266921341*^9, 3.7646142414013414`*^9, 3.764670274071336*^9, 
  3.764789178715596*^9, 3.7647898662162857`*^9, 
  3.7655526002872777`*^9},ExpressionUUID->"d3840ddf-39e0-463c-b81d-\
45a4f6347a7c"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7645938633364267`*^9, 3.7645938972835693`*^9, 
  3.764601266921341*^9, 3.7646142414013414`*^9, 3.764670274071336*^9, 
  3.764789178715596*^9, 3.7647898662162857`*^9, 
  3.765552600297278*^9},ExpressionUUID->"d3840ddf-39e0-463c-b81d-\
45a4f6347a7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"6", "c"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"uncoupled", " ", "frequencies"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Omega]O1", " ", "=", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "/", "1"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"\[Omega]O2", " ", "=", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "/", "1"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.764786727100362*^9, 3.7647867313848953`*^9}, {
  3.7647869905828505`*^9, 3.764787046335942*^9}, {3.7647870808636017`*^9, 
  3.764787087297411*^9}},ExpressionUUID->"0beea76f-dd34-4589-b220-\
52f01158a930"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.764787075951742*^9, 3.764787088153161*^9}, 
   3.7647891830769286`*^9, 3.7647898681988897`*^9, 
   3.7655526012572975`*^9},ExpressionUUID->"70e411f2-4672-4e25-b54d-\
cb191c1a4ad9"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.764787075951742*^9, 3.764787088153161*^9}, 
   3.7647891830769286`*^9, 3.7647898681988897`*^9, 
   3.765552601297298*^9},ExpressionUUID->"70e411f2-4672-4e25-b54d-\
cb191c1a4ad9"]
}, Open  ]],

Cell[TextData[{
 "Each mass would have an uncoupled frequency of 1. Qualitatively this makes \
sense that the coupled frequencies would be greater than or equal to their \
uncoupled frequencies. This is because with more springs in the system, there \
could only be an increase in oscillation since more spring force is applied.  \
\n\n",
 StyleBox["There are TWO modes though - in one the frequency is the same as \
the uncoupled frequency.  Why would this be so?  What do the eigenvectors \
tell you about this?",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellChangeTimes->{
  3.76478920843808*^9, {3.765552382578885*^9, 
   3.765552432139879*^9}},ExpressionUUID->"f6fb5558-4fce-4121-b788-\
7a23de2a929c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "please", " ", "run", " ", "these", " ", "before", " ", "the", " ", "next",
     " ", 
    RowBox[{"problem", ".", " ", "They"}], " ", "will", " ", "not", " ", 
    "output", " ", "anything", " ", "but", " ", "the", " ", "info", " ", 
    "needs", " ", "to", " ", "be", " ", "made"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"omega1", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "/", "m"}], "]"}], "/.", 
      RowBox[{"m", "\[Rule]", "1"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"omega2", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "/", "m"}], "]"}], "/.", 
      RowBox[{"m", "\[Rule]", "1"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uinit1", "=", 
     RowBox[{
      RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vinit1", "=", 
     RowBox[{
      RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uinit2", "=", 
     RowBox[{
      RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vinit2", "=", 
     RowBox[{
      RowBox[{"Eigensystem", "[", "M", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"upos1", "[", "t_", "]"}], "=", 
     RowBox[{"uinit1", "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"omega1", "*", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vpos1", "[", "t_", "]"}], "=", 
     RowBox[{"vinit1", "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"omega1", "*", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"upos2", "[", "t_", "]"}], "=", 
     RowBox[{"uinit2", "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"omega2", "*", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vpos2", "[", "t_", "]"}], "=", 
     RowBox[{"vinit2", "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"omega2", "*", "t"}], "]"}]}]}], ";"}]}]}]], "Input",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7647892205616426`*^9, 3.7647892656051807`*^9}, {
  3.764789880331391*^9, 
  3.7647898879460564`*^9}},ExpressionUUID->"86a906aa-f519-4a25-899c-\
2fcfd22e2be2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["5 ", "Subsection",
  FontColor->RGBColor[1, 0, 1]],
 "Problem 7.  Coupled harmonic oscillators, plots"
}], "Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.7639852136328125`*^9, 3.763985223055333*^9}, 
   3.763985286455546*^9, {3.763985567277746*^9, 3.7639855677769527`*^9}, 
   3.7655524404320455`*^9},ExpressionUUID->"d8f08601-8ca6-46a7-8809-\
f3bbe9aa609f"],

Cell["\<\
a) Plot the positions of the masses as a function of time for the first \
normal mode.  Plot them both on the same graph.
b) Repeat for normal mode 2\
\>", "Text",
 CellChangeTimes->{{3.7639243308219748`*^9, 3.763924350715372*^9}, {
  3.763985056989204*^9, 
  3.763985098315134*^9}},ExpressionUUID->"dfdefbd9-d014-4a6a-9e99-\
f7595199da11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"7", "a"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"upos1", "[", "t", "]"}], ",", 
      RowBox[{"vpos1", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{
       RowBox[{"-", "2"}], "*", "Pi"}], ",", 
      RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.764436407355435*^9, 3.7644365078153715`*^9}, {
  3.764436559943658*^9, 3.76443662747967*^9}, {3.764594002089637*^9, 
  3.7645940329027777`*^9}, {3.764594111465822*^9, 3.764594130848951*^9}, {
  3.7645942080845814`*^9, 
  3.764594230088846*^9}},ExpressionUUID->"30f3a1a2-1909-48ab-8a1e-\
14dc0b2418ff"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
t2UTXDr3pTgmKw/8v+/R4f//Hv3/AGJFmLU=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Feu7ZRNcOvu5ODYrD/2//9Hh//8f/f8Adm/qtQ==
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{(-2) Pi, 2 Pi}, {-0.9999999933867286, 
        0.9999999933867286}}, {{-6.283185307179586, 
       6.283185307179586}, {-0.9999999933867286, 0.9999999933867286}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"upos1", "(", "t", ")"}], 
       RowBox[{"vpos1", "(", "t", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.764436496064357*^9, 3.7644365085651975`*^9}, {
   3.764436555115205*^9, 3.7644366286201515`*^9}, 3.764594037226889*^9, 
   3.764594112759569*^9, {3.7645942209935093`*^9, 3.764594231108201*^9}, 
   3.7646703130670033`*^9, 3.7647893016436033`*^9, 3.7647899048827395`*^9, 
   3.765552603649347*^9},ExpressionUUID->"7b6da28a-533d-433f-8bd6-\
d0e41771eef5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"7", "b"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"upos2", "[", "t", "]"}], ",", 
      RowBox[{"vpos2", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{
       RowBox[{"-", "2"}], "*", "Pi"}], ",", 
      RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.02", "]"}], ",", "Dashed"}], "}"}], ",", 
       RowBox[{"{", "Thick", "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.764594144154632*^9, 3.764594149864729*^9}, {
  3.764594244404683*^9, 3.764594244763771*^9}, {3.7645948611238327`*^9, 
  3.7645949395305567`*^9}, {3.764594987647361*^9, 
  3.7645951613373747`*^9}},ExpressionUUID->"8a1fca71-3722-441c-9e11-\
1f9b64c834af"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[0.02], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
Oty4+yTT2ocA44x12t+d6XC0VeuyVQABB4trOta70eGhwNtX9r4gYMPIGto/
Lzp043BjOUYQ8EulMjDuFR16rFI/JveFgGFNF1WJt3RYftnBbCCTgFZ9xZ/u
EXSYILkp71EuAfk3nHhMPtJhenSag2kRAameCjF5CXR452pOpncZAbHPy8D6
FDpc71awL6CSAL8v8ncXs+hQK/nEX+VGAu7+KKFfyaPD2rdvN+S0EHCj0SGz
DtPhgu0Jb+UOAk78Lpr6+JMOJeOjM5/0EaDLf/OZeDUdvnK++shrkIA9dNlN
7vV0eGxYzPHECAEKGva2xzvo0D7+ZsR9BgHix2h8eT10+MOrpaGTRQDPuYJY
5UE6bJP2lJeYIuC33fX9QaN0ePvgVyfFXwSM3ZPu+ctgr28918Y/S0DnU+Ru
M0WHwQa/9cp+E1AddVWubpYOJ40DCi/OEVCQKpmtuUCHHftL9zfOE5BR8P3U
xyU6/OwyULzqLwFx9Vd+iXHLQu4KfQOdRQJCB8SD7vLLwqR3kc37/xEQMJO7
eVhQFp4djrWkLxHgyWtTaSwmC9eKnh4vZfNtGbFruVKyMH1l/23jZQKs1+fw
K8vKQvPoyPk0Np/eY/3h+UpZWP9F2oPB5v/3Pij8/++D/h9EqeVJ
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
Oty4+yTT2ocA44x12t+d6XC0VeuyVQABB4trOta70eGhwNtX9r4gYMPIGto/
Lzp043BjOUYQ8EulMjDuFR16rFI/JveFgGFNF1WJt3RYftnBbCCTgFZ9xZ/u
EXSYILkp71EuAfk3nHhMPtJhenSag2kRAameCjF5CXR452pOpncZAbHPy8D6
FDpc71awL6CSAL8v8ncXs+hQK/nEX+VGAu7+KKFfyaPD2rdvN+S0EHCj0SGz
DtPhgu0Jb+UOAk78Lpr6+JMOJeOjM5/0EaDLf/OZeDUdvnK++shrkIA9dNlN
7vV0eGxYzPHECAEKGva2xzvo0D7+ZsR9BgHix2h8eT10+MOrpaGTRQDPuYJY
5UE6bJP2lJeYIuC33fX9QaN0ePvgVyfFXwSM3ZPu+ctgr28918Y/S0DnU+Ru
M0WHwQa/9cp+E1AddVWubpYOJ40DCi/OEVCQKpmtuUCHHftL9zfOE5BR8P3U
xyU6/OwyULzqLwFx9Vd+iXHLQu4KfQOdRQJCB8SD7vLLwqR3kc37/xEQMJO7
eVhQFp4djrWkLxHgyWtTaSwmC9eKnh4vZfNtGbFruVKyMH1l/23jZQKs1+fw
K8vKQvPoyPk0Np/eY/3h+UpZWP9F2oPB5v/3Pij8/++D/h9EqeVJ
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{(-2) Pi, 2 Pi}, {-0.999999512971478, 
        0.9999999999999671}}, {{-6.283185307179586, 
       6.283185307179586}, {-0.999999512971478, 0.9999999999999671}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"upos2", "(", "t", ")"}], 
       RowBox[{"vpos2", "(", "t", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.18], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.02`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.764595085227248*^9, 3.7645951621962013`*^9}, 
   3.7646703161078696`*^9, 3.764789306514335*^9, 3.7647899076353755`*^9, 
   3.765552604875378*^9},ExpressionUUID->"1d02691c-c498-47d3-8d0d-\
3454813e1a83"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["5 ", "Subsection",
  FontColor->RGBColor[1, 0, 1]],
 "Problem 8. Coupled harmonic oscillators, general solution"
}], "Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.763981172658908*^9, 3.763981205701132*^9}, 
   3.7639852369707117`*^9, 3.7639852888111763`*^9, {3.763985571599002*^9, 
   3.7639855718798056`*^9}, 
   3.765552457618393*^9},ExpressionUUID->"2a1adf4c-6186-4f2e-a3d4-\
1dd7bcbe74f3"],

Cell[TextData[{
 "If you shook this oscillator to get it moving it probably would NOT \
oscillate in a normal mode.  So what good are they?  The normal modes of \
oscillation are important because they serve as \[OpenCurlyDoubleQuote]basis \
functions\[CloseCurlyDoubleQuote] from which you can build ANY general \
oscillation.  As a simple example, let\[CloseCurlyQuote]s construct an \
oscillation by adding together equal amounts of the two normal modes - so the \
oscillation will be ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],ExpressionUUID->
  "6feb92aa-162c-4d00-b2a1-f4fa6ffe804b"],
 " mode 1 + ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],ExpressionUUID->
  "e910ad6f-f51d-4173-b4fd-0f73b1240e1d"],
 " mode 2.  Then for example the position of mass 1 will be ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"upos1", "[", "t", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"upos2", "[", "t", "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "c32cd077-4896-4449-a62f-96b681071e00"],
 ".  \na) Make a plot of the two masses undergoing this type of vibration\nb) \
Does the oscillation pattern repeat itself?  Do the two masses have the same \
oscillation frequencies?"
}], "Text",
 CellChangeTimes->{{3.7639812259657917`*^9, 3.7639812410833855`*^9}, {
  3.763981288149189*^9, 3.7639814209380913`*^9}, {3.763981454306919*^9, 
  3.7639814706559286`*^9}, {3.7639815169729223`*^9, 3.76398153319713*^9}, {
  3.7639815633211164`*^9, 3.763981614598974*^9}, {3.763981707031595*^9, 
  3.7639818487127953`*^9}, {3.7639818893195953`*^9, 3.763981891628395*^9}, {
  3.7639819304411955`*^9, 3.7639819621715956`*^9}, {3.7639851245546703`*^9, 
  3.763985152775432*^9}},ExpressionUUID->"206a9204-0149-4de3-8ecd-\
a56063973e5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"8", "a"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"unew1", "[", "t_", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], 
      RowBox[{"upos1", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], 
      RowBox[{"upos2", "[", "t", "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vnew1", "[", "t_", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], 
      RowBox[{"vpos1", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], 
      RowBox[{"vpos2", "[", "t", "]"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.7645952226170654`*^9, 3.7645953086777167`*^9}, {
  3.764595441856453*^9, 
  3.764595448754858*^9}},ExpressionUUID->"d0677ef4-1e35-4830-a9c0-\
fdcef44c969a"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Cos", "[", "t", "]"}], "2"], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{
     SqrtBox["3"], " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7645953132601995`*^9, 3.764595450279378*^9, 
  3.7646142632930937`*^9, 3.764670319571574*^9, 3.7647893105974126`*^9, 
  3.764789911485583*^9, 
  3.765552605865398*^9},ExpressionUUID->"b733c699-2fd5-471a-b6ae-\
2eeb236c0790"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Cos", "[", "t", "]"}], "2"], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{
     SqrtBox["3"], " ", "t"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7645953132601995`*^9, 3.764595450279378*^9, 
  3.7646142632930937`*^9, 3.764670319571574*^9, 3.7647893105974126`*^9, 
  3.764789911485583*^9, 
  3.765552605875398*^9},ExpressionUUID->"b733c699-2fd5-471a-b6ae-\
2eeb236c0790"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"unew1", "[", "t", "]"}], ",", 
     RowBox[{"vnew1", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"-", "8"}], "*", "Pi"}], ",", 
     RowBox[{"8", "*", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7645953218085127`*^9, 3.764595398897916*^9}, {
  3.764595562058816*^9, 
  3.7645956085115333`*^9}},ExpressionUUID->"8111ebf4-1d04-4bec-a1a0-\
aa3a1447474d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
MbXIPna5T/N/V0c/0vcVSg3lqh19KAZG/y48yI9JR1pHNpbPPKPlq/p+fn9E
BmrbmpRoTxaDMLs5lqSLr5FDVcdpg9diUND+ttNsTyb6413xoOodDcdZ7urP
yERPNdMrCKVi4M723LRhTxaSXYmcy6mh+ct4Fp15MQvV5N0SEm+m6f+TPSoW
loVOX7U9kdAhBhStdy5DkVloXsY4kKNfDFw+fUqJuJaFgiYIRQ9INP9uDOYU
uSy0L01ocpNC699/iiUf6jJRwXlG3lvLYvB7yWe2RyMTGfIvGy2si4HlWNgm
2/3XaLhvwMeBXhy8R/5tGudmIM+YxtxBZnFw0abb7lOQjpjN80Ys9ohDGLct
IebJK5TGGs/RIiAOHP6+nfHH0pD258DDhyTFQdS37qpy9UvUHnLVs1xRHGwH
1MqOvUhGjodPZ6poioO5o09OIyEBbWzq9WceFIfOI84vVgOeo+gPsszChuJQ
e9iC7UjIUyTnzaX73EwcQIxJ4FxQBKrV2LjGepbG3+JxenglEC286+j64ywO
dCMnBzy9TuLgKxXbPdxp8Sue3/isfTC/TLrmjLc4pH45G77mGYaNUm8lfAun
+WmucOo1jccjNrZfzKJpvPieyH0VKdhrn/G/pkRxoAi8Iyy/f4VfRQvZFb8V
B+1c4vP16jd4/wnGGIViWv5OD64jN97hTpblxldV4hBfNSnGllaA/wU3yj5t
EwfSuSM785KLseXtq0vXFsVBUfrk1kVCNaYSTotP/qLxlTdFM25jHLKkd8qG
TgKk/6N/Fjdei99f5io35pQADraQqF1HGjCbTcU9GYIEJB6Vusag8wnXA+Pu
sVsSILKtlIovdWHq0uzeZn8J4FcjrLnt6Mb8ae2C70IlYJMv92JIVjf22BYr
fydWAjqrY2PPz3/F4vWShpylEsCQtuJB9uzDgUcO+x36KQGjPCpqC3aDOPeH
VLDMPwkItqQYXV8fxP3pTA/ZdkiCY0DADqEnQ1iVoSv+O7ckUC8ZRroWD2NS
48XiGxqSsOiQdniTPIpZvY58OKsrCeqZ7xO2CCSsLSVTf1BfEkiBwmQmLxKO
CqF2MJ2ShFq64rfeKyQMhn5zaTcloTvPifqjfwy7rtmuPLgrCfrs9E/W2Mg4
PlN//dp9SWC30NWgP0TGSztZGXViJCHjz9/Z36lkLFi2yCaaJAnCW/spH9vI
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
0vV8NSKY7Vmo+whf0PbV29wJ+4mw/anNQx3ZDtRTmXrB9RgRWrcVFvUZfUVh
8/JqdseJ4O8in9oi34N0hUu2n/mPCNCj4Mi8qxdlBH7ORlZE+O9VKNuu4j5k
WXTyrsZ5IvR4NsY9D/qGWCeHj8vZEeGrg9UJdtN+5GW0ssJ1mQiTT1gOX+34
juR9fJsYrxFh7PHO39LhA2jk7c74DXci0P/K6PM9OIgMdwscnPImQlFbt2rh
8yHE03fkQUUYEbQFXt5/RD+KWhjbrfIiiaBlJRfu8GQU+e+3VEyPIgJ/w9Fk
dRYSmk527YqMJ0Lt9I7Gi+EklNy+lh6YTKuvN3WGoZGEzOkCb91KJQJRET/J
/0tC5ZeeC9hmE2H3zON1Fvsx5PpchHoqlwj3Nn85VEaNIdHmN7XHCohw2nHr
pXMV7Xz4mxCjV0wERTnjs3smx1CYfI0joZwIybcbaquZyUjXxkhbtorWr3f8
Sc5KZLT0qJtZqJYIMk9llbiOk1EGthnmbCTC3bEDBvgyGVktT+Xv/ESECuvj
2jfukxG7xI2gv1+IMO4gMCafSEb1p/6eWuogwuEEpZeL78joVmiIzORXInw5
VXu6oYaM5Mt3//n+jQhe0fFXclrJaGQmobV9kAi2xrWNb76RUbSA5MuGUVo/
EhS+fBwlI8PjeTfKx4kgsG54iXGSjP74a+u/myaCeKvb4o1pMsorqOd5NUeb
R5L5cTYatiebzsQuEuGhoVYPaZyMeLi/fXj4gwhXog6cXB0moy8Gdo8DfhEh
1dxtt3kvGQXcnrP1+ksEsfLvdRufyUjjjRfhyhYRDLf7Pd9eRUaUga0dF7dr
gz29spTbWzJKZo3oP8moDU5k5zuG8WT0REjjVg2LNkzdV+ievkdGQcoje+Q4
tGEg4jb/DQcy8kRhhTHc2jA/Rd67YkBGzubqJzb5tKFbJlH8riQZWdsNzbsI
acNl31kNIToyMvUIjfgqpg3eSrndM/1jSP3ZQFO2PI2/CPdNgsaQ1OvgS3tU
tIHvYJjZzpNjiK9UeZs/QRv0H6iwEsXG0L9vQbondbWh/x9J0qSUhD4JKBT9
O64NEf/9yeZ5OIo+KPaau1hoQ8XOjPB7u0ZR3sF71O4z2tB3726gYtAIirn4
VS77ojac7W/5x0K7j1xIv5tqcUMbnm3MObLzDaIf8q2Psp5pQ2Usc0MxUx+a
OnBLgStBG9ifxVhP2PWiflPRz74vaP7DK2vtK3pQjZsng0WmNnhJ/NvD6Uzb
r+8F726UacNdlSsG4fWd6G7DRz7nKm0gvdv3NIS/E7n1uJd21WqDa4le0eup
dnRyrXE587M2hFNCw9TNW5GwzjWX/wa1Qc+i/nqQYTPiNOHdWTWqDTwy+4Uv
s31EDDZ16dITtPp1VT69729EM357R//Oa0Njt4fke796VFxXfTpzkzYP9+i2
pD1VKKvb+QfH9v0gqnF6Ivx3BUoc53x6l3E/0BVeHZ6YLUP3dji1mnPsh3kz
v7nx9SLkwcNx5QP3fvA91urlx/seOchUMkrv2w+gMBjjpl+Azmo7vI4S2g/x
OsJ3TOjfof/7viv8//dd/wcc+CpH
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
yEdrPRm7hsiKBVV3avrx0plNe4OeNdTx39SN8OgBTP/fskcK3zq6+Zvq314F
MpZZGQ+7/nodLbSI/lqaImNNhcG4ss51xKYsw7Tn2CA2vt79SYxnA90VEDCV
jKN8my21MBi9gYrOjEqY6wzhgL0VtdrtG0j5snf+tdAhHKODO9/v20QhOmdO
XewewkVfshcsozbRhXcMz8ZvDOP6sbTNopZNRDi4HPHg0zAmCyYxCHBuodjX
pOuDY8N48dxbLi/TLXTuexknv+gI3hUcLdwdvoUsLtQgMbMRzFMaKneoaQuV
/SvmWQkZwTLrQeoxbNtInexqEQUj2NjO6/SF0G2kScM0LM43iq3eu1jk1W8j
27ZoO27dUXy/3cGOi2UHnWNI6au7MYr9mW+6OJ/aQYrFpuUng0bxq6NWPs3B
O+il+BnF8ORRnOZ1OVipdgf1H7+Y//7XKL5y+aBR1S4qbZoec/8HXaN4fEmi
2V2CSjteqURfZG4UO4WJXpI6RqVNdLfXfLMzitdkD/S321Jpkz3yJCYo+5Nf
Jb9tgD+VNq24qTErZb9ivMYzpZJEpR25wRfIJTKGo7a5nEZLqbTNSn9KbFH2
N8E37P+ihqm0F5Iu0jZQ9rdkFZaHR2mptWu5Vz3DKPsboWkvzZIotTZDM5Od
AWV/+26/OyhRl1rbUypffJtvDOsy0LGctaHWXmRgDPrONoZrE6miaPyotQMO
qI/40Y7h82iLN+cDtXbyybd01/6O4v7utffWv6i1c+crZK+RR/FNt38S7IPU
2l9vXWJ/UT2KF9j/pgMVjbar+ODAVPYofvB5XslJmEZ7If0tMTB6FNOcmMk/
oE2j3UqS4HSg7HPPRyaONFyl0abfS7eScnEUc/mMlj56TKM9dEHvpx5pFEvm
9zf0FdNoNzyWdmgYHcFfTHvOv+in0RYa4GfuKhzB6nMdPZrbNNrnPr7/5/Zi
BBtKNI3HHqHVzoj5xJ8iO4JboM7hpCWtttX/arrycKreqIsUIWSeZ9c8XZeL
yrtFEhkSSQlJoiRJ0iQyhFSmZPrJFCpkppJXKEJC5gzXPF5JSCW++z3P9/25
nrX2Wvvsfc5z3vPXSWVetP01jh0cmn/+ubUNnKY/anTW0s53cfVb9tXbIJnj
Yf0l83EcR1/BL7CHEQavU/XXLcaw9u+kG5dOMYLqclniJuMYHli6PfTxDiNY
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
6bg+ixbVheXVbKUs1UX0f/+rhf//X+3/AMnjNhY=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{606.0000000000001, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{(-8) Pi, 8 Pi}, {-0.9904620679028671, 
     0.9999850413496747}}, {{-25.132741228718345`, 
    25.132741228718345`}, {-0.9904620679028671, 0.9999850413496747}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.764595534318038*^9, {3.764595569190857*^9, 3.7645956092537065`*^9}, 
   3.764670322352174*^9, 3.76478931350264*^9, 3.7647899161860113`*^9, 
   3.7655526076454334`*^9},ExpressionUUID->"b26340c7-87f0-4a3a-9954-\
b947be8d6929"]
}, Open  ]],

Cell[TextData[{
 "(*8b*)\[LineSeparator]Yes, the oscillation pattern does repeat itself. ",
 StyleBox["Can you see a repeat here, really?",
  FontColor->RGBColor[1, 0, 1]],
 "\n\nThe masses do have the same oscillation frequencies. This is clear \
since the two waves have the same period, thus the reciprocal of this period \
(the frequency) must also be the same.  ",
 StyleBox["See the solution for a discussion",
  FontColor->RGBColor[1, 0, 1]]
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0}},
 CellChangeTimes->{{3.764788231325591*^9, 3.7647882465488644`*^9}, {
  3.764789325286828*^9, 3.764789326349867*^9}, {3.7655524813328676`*^9, 
  3.765552503629322*^9}, {3.7655525544733443`*^9, 
  3.765552562305503*^9}},ExpressionUUID->"f41d861a-abbc-4648-8d1f-\
bbaa2b98cad8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x0", "=", "1.5"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "equilib", " ", "positions", " ", "of", " ", "the", " ", "masses", " ", 
     "are", " ", "at"}], " ", "\[PlusMinus]", "x0"}], " ", "*)"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xwall", "=", "3.5"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"wall", " ", "positions", " ", "are", " ", "at"}], " ", 
    "\[PlusMinus]", "xwall"}], " ", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wallgraphics", "=", 
   RowBox[{"{", 
    RowBox[{"Thick", ",", "Black", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "xwall"}], ",", 
          RowBox[{"-", ".5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "xwall"}], ",", ".5"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xwall", ",", 
          RowBox[{"-", ".5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"xwall", ",", ".5"}], "}"}]}], "}"}], "]"}], ",", "Thin", 
     ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "x0"}], ",", 
          RowBox[{"-", ".1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "x0"}], ",", ".1"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x0", ",", 
          RowBox[{"-", ".1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x0", ",", ".1"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.760980914313774*^9, 3.760980951347515*^9}, {
   3.760981091911327*^9, 3.7609811056426015`*^9}, {3.763112987830597*^9, 
   3.7631129946791286`*^9}, {3.763113463364294*^9, 3.763113536601511*^9}, 
   3.7637386082296286`*^9, {3.7637386550017285`*^9, 3.7637387054846525`*^9}, 
   3.763738822589004*^9, {3.763738864600073*^9, 3.7637388656930804`*^9}, {
   3.763738912806382*^9, 3.7637389136487875`*^9}, {3.76373907894836*^9, 
   3.76373918813746*^9}, {3.7637392660141597`*^9, 3.763739365404397*^9}, {
   3.763739436884055*^9, 3.7637395237796125`*^9}, {3.76373959675688*^9, 
   3.7637396014837103`*^9}, {3.7637396584396753`*^9, 
   3.7637396615284953`*^9}, {3.7637397376569834`*^9, 3.763739752882681*^9}, {
   3.7637398193421073`*^9, 3.7637398238505363`*^9}, {3.7637399157195253`*^9, 
   3.7637400235796165`*^9}, 3.763740055825023*^9, {3.7637400878218284`*^9, 
   3.763740117993422*^9}, {3.763740161645502*^9, 3.7637402004429507`*^9}, {
   3.763740242019845*^9, 3.763740258555951*^9}, {3.763740289054147*^9, 
   3.7637402931881733`*^9}, {3.7637403431104937`*^9, 3.76374034568451*^9}, {
   3.763740671848802*^9, 3.7637407027067995`*^9}, {3.763742980633145*^9, 
   3.763743072850336*^9}, {3.763743103522133*^9, 3.763743128841096*^9}, {
   3.763743183644247*^9, 3.763743194283515*^9}, 
   3.7637437063591995`*^9},ExpressionUUID->"1663252d-9f02-4203-ad24-\
8add569be821"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["5 ", "Subsection",
  FontColor->RGBColor[1, 0, 1]],
 "Problem 9. Coupled harmonic oscillators, animation"
}], "Subsection",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.763981172658908*^9, 3.763981205701132*^9}, {
   3.7639824518839417`*^9, 3.7639824534595613`*^9}, 3.7639834296208773`*^9, {
   3.7639855765286655`*^9, 3.76398557690407*^9}, 
   3.7655525853229637`*^9},ExpressionUUID->"b0c0f806-a611-475b-816f-\
081949a23dcf"],

Cell["\<\
a) Modify the animation above to include the second oscillating mass and the \
other two springs.  Give them all different colors.  Mathematica recognizes \
color names such as Blue, Yellow, Red, Green, Magenta, Brown, Black, White, \
and others.  Mathematica draws the object in the order you list them, so you \
may have to play around with the order in which you call them to get them \
placed properly in front of or behind other objects.

b) When you have finished (a), copy & paste the animation command to another \
line, then modify it so that it shows the second normal mode.\
\>", "Text",
 CellChangeTimes->{{3.7639812259657917`*^9, 3.7639812410833855`*^9}, {
  3.763981288149189*^9, 3.7639814209380913`*^9}, {3.763981454306919*^9, 
  3.7639814706559286`*^9}, {3.7639815169729223`*^9, 3.76398153319713*^9}, {
  3.7639815633211164`*^9, 3.763981614598974*^9}, {3.763981707031595*^9, 
  3.7639818487127953`*^9}, {3.7639818893195953`*^9, 3.763981891628395*^9}, {
  3.7639819304411955`*^9, 3.7639819621715956`*^9}, {3.7639824678117456`*^9, 
  3.7639825238818645`*^9}, {3.763982909521809*^9, 3.7639829412838163`*^9}, {
  3.76398305466807*^9, 3.7639830562436905`*^9}, {3.763983119299699*^9, 
  3.763983272369861*^9}, {3.763983342571761*^9, 
  3.763983419387146*^9}},ExpressionUUID->"0ff550d3-dc21-4c0b-862e-\
cd19d197d3c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"upos1", " ", "&"}], " ", "vpos1"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Magenta", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "x0"}], "+", 
              RowBox[{"upos1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x0", "+", 
              RowBox[{"vpos1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", "Blue", ",", 
        RowBox[{"Ball", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x0"}], "+", 
             RowBox[{"upos1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
          ".15"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "xwall"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "x0"}], "+", 
              RowBox[{"upos1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", "Green", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xwall", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x0", "+", 
              RowBox[{"vpos1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Ball", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x0", "+", 
             RowBox[{"vpos1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
          ".15"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "xwall"}], ",", "xwall"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
    RowBox[{"AnimationRate", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7646021002644324`*^9, 3.764602147544919*^9}, {
   3.7646022188793364`*^9, 3.7646022431204567`*^9}, {3.7646023175014114`*^9, 
   3.7646023947847137`*^9}, {3.7646027942286844`*^9, 3.764602803588682*^9}, {
   3.764602850086712*^9, 3.764602894573262*^9}, {3.7646030726779575`*^9, 
   3.7646031165774965`*^9}, {3.764603150583514*^9, 3.76460317207198*^9}, 
   3.7646032277767925`*^9, {3.7646032579835157`*^9, 3.7646032619050226`*^9}, {
   3.764603409039136*^9, 3.7646034184728675`*^9}, {3.7646040817073193`*^9, 
   3.7646040818469477`*^9}, {3.7646041390674047`*^9, 3.764604285047058*^9}, {
   3.764785027625925*^9, 3.7647850389062543`*^9}, {3.7647853387820673`*^9, 
   3.7647853481539965`*^9}, {3.7647854040086308`*^9, 3.764785410105359*^9}, {
   3.7647893657504816`*^9, 
   3.7647893665752754`*^9}},ExpressionUUID->"a0f886a9-7425-405a-83d6-\
9dba4ff04c1e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 42.63010120391846, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 50}}, Typeset`size$$ = {540., {266., 274.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$3814$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$3814$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Thick, Magenta, 
         Line[{{-$CellContext`x0 + $CellContext`upos1[$CellContext`t$$], 
            0}, {$CellContext`x0 + $CellContext`vpos1[$CellContext`t$$], 0}}],
          Blue, 
         Ball[{-$CellContext`x0 + $CellContext`upos1[$CellContext`t$$], 0}, 
          0.15], 
         Line[{{-$CellContext`xwall, 
            0}, {-$CellContext`x0 + $CellContext`upos1[$CellContext`t$$], 
            0}}], Green, 
         Line[{{$CellContext`xwall, 
            0}, {$CellContext`x0 + $CellContext`vpos1[$CellContext`t$$], 0}}], 
         Ball[{$CellContext`x0 + $CellContext`vpos1[$CellContext`t$$], 0}, 
          0.15]}, PlotRange -> {{-$CellContext`xwall, $CellContext`xwall}, \
{-1, 1}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 50, AnimationRate -> 2, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{612., {323., 332.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.764602240029729*^9, 3.7646022461204357`*^9}, {
   3.7646023182983007`*^9, 3.764602323735697*^9}, 3.7646028063243575`*^9, {
   3.764602852444437*^9, 3.76460285900488*^9}, 3.764602945006689*^9, {
   3.7646030748172655`*^9, 3.764603093514242*^9}, 3.7646031733725*^9, 
   3.7646032291970005`*^9, 3.7646042577822556`*^9, 3.7646042879163804`*^9, 
   3.7646703493409643`*^9, 3.7647853495083675`*^9, {3.76478934976921*^9, 
   3.764789369075586*^9}, 3.7647899259741125`*^9, 
   3.7655526121075287`*^9},ExpressionUUID->"a5ab134b-179f-403b-8ac4-\
566d2310a445"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"upos2", " ", "&"}], " ", "vpos2"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Magenta", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "x0"}], "+", 
              RowBox[{"upos2", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x0", "+", 
              RowBox[{"vpos2", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", "Blue", ",", 
        RowBox[{"Ball", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x0"}], "+", 
             RowBox[{"upos2", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
          ".15"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "xwall"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "x0"}], "+", 
              RowBox[{"upos2", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", "Green", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xwall", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x0", "+", 
              RowBox[{"vpos2", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Ball", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x0", "+", 
             RowBox[{"vpos2", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
          ".15"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "xwall"}], ",", "xwall"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
    RowBox[{"AnimationRate", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.764602211437248*^9, {3.7646141790430126`*^9, 3.764614197513668*^9}, {
   3.764785044457401*^9, 3.764785049442067*^9}, {3.764785392644007*^9, 
   3.7647854672875423`*^9}},ExpressionUUID->"2d4a72fa-52ca-435e-8699-\
7347f5d64f74"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 33.63001251220703, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 50}}, Typeset`size$$ = {540., {266., 274.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$4780$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$4780$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Thick, Magenta, 
         Line[{{-$CellContext`x0 + $CellContext`upos2[$CellContext`t$$], 
            0}, {$CellContext`x0 + $CellContext`vpos2[$CellContext`t$$], 0}}],
          Blue, 
         Ball[{-$CellContext`x0 + $CellContext`upos2[$CellContext`t$$], 0}, 
          0.15], 
         Line[{{-$CellContext`xwall, 
            0}, {-$CellContext`x0 + $CellContext`upos2[$CellContext`t$$], 
            0}}], Green, 
         Line[{{$CellContext`xwall, 
            0}, {$CellContext`x0 + $CellContext`vpos2[$CellContext`t$$], 0}}], 
         Ball[{$CellContext`x0 + $CellContext`vpos2[$CellContext`t$$], 0}, 
          0.15]}, PlotRange -> {{-$CellContext`xwall, $CellContext`xwall}, \
{-1, 1}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 50, AnimationRate -> 2, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{612., {323., 332.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7646143131164494`*^9, 3.7646703564449234`*^9, 
  3.7647854682479267`*^9, 3.7647893714641953`*^9, 3.7647899303912897`*^9, 
  3.7655526164266186`*^9},ExpressionUUID->"ab87a99f-395f-4825-8628-\
9f53b4d02988"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"unew1", " ", "&"}], " ", "vnew1"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "one", " ", "was", " ", "just", " ", "out", " ", "of", " ", 
    "curiousity"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Magenta", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "x0"}], "+", 
              RowBox[{"unew1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x0", "+", 
              RowBox[{"vnew1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", "Blue", ",", 
        RowBox[{"Ball", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "x0"}], "+", 
             RowBox[{"unew1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
          ".15"}], "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "xwall"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "x0"}], "+", 
              RowBox[{"unew1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", "Green", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xwall", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x0", "+", 
              RowBox[{"vnew1", "[", "t", "]"}]}], ",", "0"}], "}"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Ball", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x0", "+", 
             RowBox[{"vnew1", "[", "t", "]"}]}], ",", "0"}], "}"}], ",", 
          ".15"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "xwall"}], ",", "xwall"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "50"}], "}"}], ",", 
    RowBox[{"AnimationRate", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7646703789527473`*^9, 3.764670396201615*^9}, {
  3.764785052263547*^9, 3.7647850776707077`*^9}, {3.7647854955974245`*^9, 
  3.7647855218564034`*^9}, {3.764785681970278*^9, 3.764785703207486*^9}, {
  3.76478576865353*^9, 3.7647858235978136`*^9}, {3.764789375652989*^9, 
  3.76478941480735*^9}},ExpressionUUID->"0bd91b37-6f79-465f-b09a-\
88e211fc8237"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 21.63282585144043, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 50}}, Typeset`size$$ = {540., {266., 274.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$4972$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$4972$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Thick, Magenta, 
         Line[{{-$CellContext`x0 + $CellContext`unew1[$CellContext`t$$], 
            0}, {$CellContext`x0 + $CellContext`vnew1[$CellContext`t$$], 0}}],
          Blue, 
         Ball[{-$CellContext`x0 + $CellContext`unew1[$CellContext`t$$], 0}, 
          0.15], 
         Line[{{-$CellContext`xwall, 
            0}, {-$CellContext`x0 + $CellContext`unew1[$CellContext`t$$], 
            0}}], Green, 
         Line[{{$CellContext`xwall, 
            0}, {$CellContext`x0 + $CellContext`vnew1[$CellContext`t$$], 0}}], 
         Ball[{$CellContext`x0 + $CellContext`vnew1[$CellContext`t$$], 0}, 
          0.15]}, PlotRange -> {{-$CellContext`xwall, $CellContext`xwall}, \
{-1, 1}}], 
      "Specifications" :> {{$CellContext`t$$, 0, 50, AnimationRate -> 2, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{612., {323., 332.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7646703977993183`*^9, 3.764785082055971*^9, 
  3.7647857043045187`*^9, 3.7647858265728464`*^9, 3.7647894050634165`*^9, 
  3.7647899343951435`*^9, 
  3.7655526228117504`*^9},ExpressionUUID->"b144afb5-2b34-455a-b67d-\
129da9a68a65"]
}, Open  ]],

Cell[TextData[{
 StyleBox["What to turn in", "Section"],
 "\nWhen you are done, SAVE this entire file, with all your work.  Then SAVE \
it again under the new name \[OpenCurlyDoubleQuote]HW#10-",
 StyleBox["yourname",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote], where ",
 StyleBox["yourname",
  FontSlant->"Italic"],
 " is of course, ",
 StyleBox["your",
  FontWeight->"Bold"],
 " name.  Delete all but the Assignments themselves (of which there are 9).  \
Make sure the entire worksheet runs correctly and that you haven\
\[CloseCurlyQuote]t deleted anything important!  Turn in this assignment \
worksheet, with all of its input and output code, through the link on our \
Moodle page."
}], "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{
  3.747319247022073*^9, {3.747319299594073*^9, 3.747319343466073*^9}, 
   3.747321684996185*^9, 3.7473279456052113`*^9, {3.7639863838902135`*^9, 
   3.7639863929851303`*^9}},ExpressionUUID->"6e0d9485-0b23-46d3-9024-\
3fccf558212a"]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{944, 805},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
ShowSelection->True,
ShowCellTags->True,
Magnification:>1.5 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 212, 4, 52, "Text",ExpressionUUID->"f2185170-0553-4c95-8d57-0c2c3348ccc4"],
Cell[CellGroupData[{
Cell[782, 28, 331, 8, 80, "Subsection",ExpressionUUID->"c1a3599c-7d58-4e61-8e95-78df617c86e0"],
Cell[1116, 38, 1543, 28, 421, "Text",ExpressionUUID->"f7e9895d-05c6-454b-8a0a-6ee282dbac95",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[2684, 70, 686, 17, 102, "Input",ExpressionUUID->"4fcd5e8f-994c-4e5a-a6c6-0ebecd83fbf0"],
Cell[3373, 89, 356, 11, 49, "Output",ExpressionUUID->"e3632275-acbd-4b7b-a3f1-0140cf8f55a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3766, 105, 508, 13, 127, "Input",ExpressionUUID->"a53103e8-de58-4de8-87ff-5c731207bc99"],
Cell[4277, 120, 354, 11, 49, "Output",ExpressionUUID->"03c5a782-84ac-42f2-893e-fa1307682ce7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4668, 136, 625, 17, 127, "Input",ExpressionUUID->"eafbc1ab-5e5f-405d-8469-2fc37b29e3b3"],
Cell[5296, 155, 440, 15, 49, "Output",ExpressionUUID->"9790302a-6933-4b1b-bfa1-a116c41ef0b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5773, 175, 274, 6, 73, "Input",ExpressionUUID->"3472a211-3dc3-47d5-8bc6-011d8c332b1b"],
Cell[6050, 183, 380, 11, 49, "Output",ExpressionUUID->"d0a97b96-7f55-4061-a7c7-b6e31e205a71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6467, 199, 156, 3, 43, "Input",ExpressionUUID->"a8b95155-8263-4ded-92b0-70ee20f23e89"],
Cell[6626, 204, 380, 11, 49, "Output",ExpressionUUID->"d59215d9-1d07-4b45-9c11-d3b3249a1ad1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7043, 220, 83, 0, 43, "Input",ExpressionUUID->"dd5af7fc-b98a-4002-817c-2050da30c39b"],
Cell[7129, 222, 464, 15, 49, "Output",ExpressionUUID->"6351ece8-7ab0-4230-b6c5-6170d752007b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7630, 242, 314, 7, 73, "Input",ExpressionUUID->"9f9b78f4-74cf-4851-91cd-1f0580dbb08d"],
Cell[7947, 251, 625, 19, 98, "Output",ExpressionUUID->"6854ea0b-55a2-42c5-81f9-19782569efd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8609, 275, 120, 1, 43, "Input",ExpressionUUID->"a0b0a250-efe1-4955-9a2b-b6dd3a9d43cb"],
Cell[8732, 278, 625, 19, 98, "Output",ExpressionUUID->"51d67294-0d86-41af-9a80-150aacdfe3cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9394, 302, 188, 4, 43, "Input",ExpressionUUID->"8c98bf07-fb30-42b7-8831-ee01363a5065"],
Cell[9585, 308, 715, 23, 98, "Output",ExpressionUUID->"e3d3cc5e-85df-48b4-955d-34d2dde26df4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10349, 337, 392, 9, 93, "Subsection",ExpressionUUID->"b7a4cc63-12ba-4ef8-b26d-886bd84044f3"],
Cell[CellGroupData[{
Cell[10766, 350, 761, 18, 189, "Input",ExpressionUUID->"db1109a1-ec85-4cf5-9eb0-cb4bb3c05471"],
Cell[11530, 370, 586, 18, 72, "Output",ExpressionUUID->"679cb1bc-a4f1-41b5-8143-a432f4be2533"],
Cell[12119, 390, 425, 15, 49, "Output",ExpressionUUID->"258a4a7a-c99a-4606-a092-1aa9d3ce2529"],
Cell[12547, 407, 740, 24, 72, "Output",ExpressionUUID->"49deb444-14e4-4857-90fb-67725e47dce1"]
}, Open  ]],
Cell[13302, 434, 1165, 19, 421, "Text",ExpressionUUID->"01498197-436c-4e24-8541-b759f5e5af05"],
Cell[CellGroupData[{
Cell[14492, 457, 357, 10, 73, "Input",ExpressionUUID->"aec2a18b-d268-4469-a66d-c34c00810962"],
Cell[14852, 469, 218, 5, 49, "Output",ExpressionUUID->"852ce8fb-b6bf-4a0b-be79-aa0775c4a67d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15107, 479, 353, 10, 73, "Input",ExpressionUUID->"ab7641ee-cef0-4717-99ed-d20905b61135"],
Cell[15463, 491, 218, 6, 49, "Output",ExpressionUUID->"b60f5165-7068-458f-bbaf-8ed170b69c10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15718, 502, 561, 14, 73, "Input",ExpressionUUID->"87ddba56-b72d-4602-917d-6fedfbac6028"],
Cell[16282, 518, 219, 5, 49, "Output",ExpressionUUID->"db4c9a92-81ae-4de0-9c49-d7ef21bd891b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16538, 528, 480, 13, 73, "Input",ExpressionUUID->"5342e358-89ab-46d8-acce-4463a2ff649f"],
Cell[17021, 543, 168, 4, 49, "Output",ExpressionUUID->"b5ff4262-c329-428f-af91-846f4253d0b6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17238, 553, 361, 9, 93, "Subsection",ExpressionUUID->"846274e2-26e5-4974-8eea-408192ab34a1"],
Cell[17602, 564, 751, 20, 140, "Text",ExpressionUUID->"68111252-87c1-48b8-ab98-a36a71e215da"],
Cell[CellGroupData[{
Cell[18378, 588, 579, 16, 73, "Input",ExpressionUUID->"3a300de0-ac95-4c13-aa4a-2dab8cb3f0bd"],
Cell[18960, 606, 411, 12, 49, "Output",ExpressionUUID->"ff33902e-d90c-4b96-a39b-dbc9881e2291"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19408, 623, 191, 4, 43, "Input",ExpressionUUID->"04c7d49c-3bfe-428a-bfa2-cdaaf2fa7a54"],
Cell[19602, 629, 640, 20, 98, "Output",ExpressionUUID->"8843e3b6-d5c5-4305-b83f-7707a802023c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20279, 654, 184, 4, 43, "Input",ExpressionUUID->"a1c1e562-b838-4f63-a866-08f434c1f88b"],
Cell[20466, 660, 175, 4, 49, "Output",ExpressionUUID->"7586b99d-a222-4db2-8593-e64f25b09040"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20678, 669, 901, 16, 81, "Subsubsection",ExpressionUUID->"5aba9b93-e72b-42d9-9eb0-d2dadade72b5"],
Cell[21582, 687, 2074, 47, 287, "Text",ExpressionUUID->"7633ad2f-e4cf-42f0-8c58-b306c668835e"],
Cell[CellGroupData[{
Cell[23681, 738, 691, 20, 102, "Input",ExpressionUUID->"56340be4-2aa9-45fd-aeb5-a86f145c0518"],
Cell[24375, 760, 640, 19, 98, "Output",ExpressionUUID->"b40d9d12-23a1-451b-b36b-9ca49d890530"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25052, 784, 335, 9, 73, "Input",ExpressionUUID->"d6104ac2-4f44-4feb-bab1-9efa62a82c0f"],
Cell[25390, 795, 610, 19, 98, "Output",ExpressionUUID->"dbbcd58e-da3d-4ec3-a62f-eacd6e7b37c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26037, 819, 334, 9, 73, "Input",ExpressionUUID->"b639a3b6-daee-4419-8864-7a0946b14bb5"],
Cell[26374, 830, 630, 20, 98, "Output",ExpressionUUID->"f9eacaed-932e-4cf7-9709-f3d42dd3fe41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27041, 855, 370, 10, 102, "Input",ExpressionUUID->"2d7a8cd8-68ce-4915-b753-67e33a27961d"],
Cell[27414, 867, 608, 19, 98, "Output",ExpressionUUID->"4aeb186e-30ba-40ce-be5d-6c26d49a65b3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28071, 892, 1009, 17, 81, "Subsubsection",ExpressionUUID->"fc9b47d5-6b0f-4682-9557-dd05176bd6ce"],
Cell[29083, 911, 3506, 63, 508, "Text",ExpressionUUID->"3489b19d-c071-47a2-9df4-0ce8197c4316"],
Cell[CellGroupData[{
Cell[32614, 978, 658, 19, 102, "Input",ExpressionUUID->"0563cc32-cd7d-4b0a-a3aa-9bfdd22baea8"],
Cell[33275, 999, 410, 11, 49, "Output",ExpressionUUID->"b3c855ed-1630-4f1f-bfb2-3f72a3145b63"],
Cell[33688, 1012, 664, 19, 98, "Output",ExpressionUUID->"3c5cbff5-8ec4-4a39-999c-e48ab10e7ac1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34389, 1036, 429, 11, 102, "Input",ExpressionUUID->"977a7a69-f672-4473-b1bd-c38deb35a129"],
Cell[34821, 1049, 274, 7, 49, "Output",ExpressionUUID->"e32eb802-b17a-4f04-a6f0-f600120ade41"],
Cell[35098, 1058, 453, 13, 49, "Output",ExpressionUUID->"a3f065fd-fa42-4c55-8169-fcc464e51d83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35588, 1076, 381, 9, 102, "Input",ExpressionUUID->"619ccb36-9e29-4ab0-8703-86bdf9999c74"],
Cell[35972, 1087, 708, 22, 98, "Output",ExpressionUUID->"d79b4022-b44c-43c4-8989-31feb10ae498"],
Cell[36683, 1111, 688, 20, 98, "Output",ExpressionUUID->"7a21f763-3f96-447a-85bb-f66197bee008"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37408, 1136, 383, 10, 73, "Input",ExpressionUUID->"9cfa4143-53e3-4497-a031-2884ae0ae780"],
Cell[37794, 1148, 206, 6, 49, "Output",ExpressionUUID->"17fd49a1-8370-4a5a-ac93-196e27b032f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38037, 1159, 329, 8, 73, "Input",ExpressionUUID->"3d63fde8-5c9e-4862-89c5-ba20d4f69a6e"],
Cell[38369, 1169, 574, 17, 49, "Output",ExpressionUUID->"e04f4950-1405-4af0-baa1-a885a1d531c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38980, 1191, 228, 5, 43, "Input",ExpressionUUID->"33673a28-79f0-466b-bd99-e3530598d610"],
Cell[39211, 1198, 883, 26, 72, "Output",ExpressionUUID->"f3607e02-ce22-456c-ae5a-e004b5f69140"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40131, 1229, 408, 11, 73, "Input",ExpressionUUID->"1dd2951e-7bcc-4050-8b7c-51e3c9e34cd9"],
Cell[40542, 1242, 224, 5, 49, "Output",ExpressionUUID->"ca6a0933-5b83-4ffc-8833-8c332c6113f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40803, 1252, 268, 7, 43, "Input",ExpressionUUID->"b119356c-6991-448a-873f-ef9b22aa3e0b"],
Cell[41074, 1261, 250, 6, 49, "Output",ExpressionUUID->"445d9496-8b75-4688-a817-18db76bed123"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41385, 1274, 366, 9, 93, "Subsection",ExpressionUUID->"07f8423f-dda2-4c47-bc95-fad96c09b4c9"],
Cell[41754, 1285, 3836, 80, 320, "Text",ExpressionUUID->"72b6bf95-7831-4196-8c20-ba00d427acdb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[45615, 1369, 888, 23, 102, "Input",ExpressionUUID->"ffa7c708-31ce-489d-90d6-303839862b9c"],
Cell[46506, 1394, 931, 25, 72, "Output",ExpressionUUID->"f4cbb24c-5af3-4add-a810-e4cf3aebbc80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47474, 1424, 451, 15, 73, "Input",ExpressionUUID->"fc55a281-aacb-428e-8828-a88a83c66dce"],
Cell[47928, 1441, 774, 21, 72, "Output",ExpressionUUID->"a911558b-035c-4cc5-802d-f94e6f3e3a27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48739, 1467, 364, 9, 73, "Input",ExpressionUUID->"63c37203-ee50-4005-b6f6-8b68dc0d5b64"],
Cell[49106, 1478, 989, 27, 72, "Output",ExpressionUUID->"e9f6d973-e3b3-4460-81f3-4a8a570d5a84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50132, 1510, 471, 10, 73, "Input",ExpressionUUID->"40dd4942-0f05-49a5-b2c6-e39d35f90f68"],
Cell[50606, 1522, 969, 27, 79, "Output",ExpressionUUID->"bc357040-16b7-4cdf-88d6-698e104d831f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51612, 1554, 449, 11, 73, "Input",ExpressionUUID->"bccaea70-85b1-4746-84c9-35ecd29dd97f"],
Cell[52064, 1567, 311, 6, 53, "Output",ExpressionUUID->"d3840ddf-39e0-463c-b81d-45a4f6347a7c"],
Cell[52378, 1575, 298, 5, 49, "Output",ExpressionUUID->"d3840ddf-39e0-463c-b81d-45a4f6347a7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52713, 1585, 678, 16, 131, "Input",ExpressionUUID->"0beea76f-dd34-4589-b220-52f01158a930"],
Cell[53394, 1603, 231, 4, 49, "Output",ExpressionUUID->"70e411f2-4672-4e25-b54d-cb191c1a4ad9"],
Cell[53628, 1609, 229, 4, 49, "Output",ExpressionUUID->"70e411f2-4672-4e25-b54d-cb191c1a4ad9"]
}, Open  ]],
Cell[53872, 1616, 710, 14, 287, "Text",ExpressionUUID->"f6fb5558-4fce-4121-b788-7a23de2a929c"],
Cell[54585, 1632, 2969, 87, 376, "Input",ExpressionUUID->"86a906aa-f519-4a25-899c-2fcfd22e2be2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57591, 1724, 406, 9, 93, "Subsection",ExpressionUUID->"d8f08601-8ca6-46a7-8809-f3bbe9aa609f"],
Cell[58000, 1735, 350, 8, 119, "Text",ExpressionUUID->"dfdefbd9-d014-4a6a-9e99-f7595199da11"],
Cell[CellGroupData[{
Cell[58375, 1747, 826, 22, 102, "Input",ExpressionUUID->"30f3a1a2-1909-48ab-8a1e-14dc0b2418ff"],
Cell[59204, 1771, 53291, 927, 363, "Output",ExpressionUUID->"7b6da28a-533d-433f-8bd6-d0e41771eef5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112532, 2703, 1025, 28, 131, "Input",ExpressionUUID->"8a1fca71-3722-441c-9e11-1f9b64c834af"],
Cell[113560, 2733, 40000, 713, 363, "Output",ExpressionUUID->"1d02691c-c498-47d3-8d0d-3454813e1a83"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[153609, 3452, 442, 10, 93, "Subsection",ExpressionUUID->"2a1adf4c-6186-4f2e-a3d4-1dd7bcbe74f3"],
Cell[154054, 3464, 1845, 39, 375, "Text",ExpressionUUID->"206a9204-0149-4de3-8ecd-a56063973e5e"],
Cell[CellGroupData[{
Cell[155924, 3507, 947, 30, 102, "Input",ExpressionUUID->"d0677ef4-1e35-4830-a9c0-fdcef44c969a"],
Cell[156874, 3539, 464, 13, 69, "Output",ExpressionUUID->"b733c699-2fd5-471a-b6ae-2eeb236c0790"],
Cell[157341, 3554, 464, 13, 69, "Output",ExpressionUUID->"b733c699-2fd5-471a-b6ae-2eeb236c0790"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157842, 3572, 513, 15, 43, "Input",ExpressionUUID->"8111ebf4-1d04-4bec-a1a0-aa3a1447474d"],
Cell[158358, 3589, 80629, 1337, 589, "Output",ExpressionUUID->"b26340c7-87f0-4a3a-9954-b947be8d6929"]
}, Open  ]],
Cell[239002, 4929, 768, 15, 233, "Text",ExpressionUUID->"f41d861a-abbc-4648-8d1f-bbaa2b98cad8"],
Cell[239773, 4946, 3144, 76, 160, "Input",ExpressionUUID->"1663252d-9f02-4203-ad24-8add569be821"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242954, 5027, 462, 10, 93, "Subsection",ExpressionUUID->"b0c0f806-a611-475b-816f-081949a23dcf"],
Cell[243419, 5039, 1336, 21, 320, "Text",ExpressionUUID->"0ff550d3-dc21-4c0b-862e-cd19d197d3c3"],
Cell[CellGroupData[{
Cell[244780, 5064, 3282, 86, 276, "Input",ExpressionUUID->"a0f886a9-7425-405a-83d6-9dba4ff04c1e"],
Cell[248065, 5152, 3134, 59, 683, "Output",ExpressionUUID->"a5ab134b-179f-403b-8ac4-566d2310a445"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251236, 5216, 2660, 78, 276, "Input",ExpressionUUID->"2d4a72fa-52ca-435e-8699-7347f5d64f74"],
Cell[253899, 5296, 2788, 54, 683, "Output",ExpressionUUID->"ab87a99f-395f-4825-8628-9f53b4d02988"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256724, 5355, 2939, 83, 305, "Input",ExpressionUUID->"0bd91b37-6f79-465f-b09a-88e211fc8237"],
Cell[259666, 5440, 2813, 55, 683, "Output",ExpressionUUID->"b144afb5-2b34-455a-b67d-129da9a68a65"]
}, Open  ]],
Cell[262494, 5498, 989, 23, 291, "Text",ExpressionUUID->"6e0d9485-0b23-46d3-9024-3fccf558212a"]
}, Open  ]]
}
]
*)

